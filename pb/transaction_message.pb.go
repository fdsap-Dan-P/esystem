// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.12
// source: transaction_message.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ActionTicket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid             string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	TicketId         int64                  `protobuf:"varint,2,opt,name=ticketId,proto3" json:"ticketId,omitempty"`
	TypeId           int64                  `protobuf:"varint,3,opt,name=typeId,proto3" json:"typeId,omitempty"`
	UserId           int64                  `protobuf:"varint,4,opt,name=userId,proto3" json:"userId,omitempty"`
	ActionTicketDate *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=actionTicketDate,proto3" json:"actionTicketDate,omitempty"`
	Reference        string                 `protobuf:"bytes,6,opt,name=reference,proto3" json:"reference,omitempty"`
	Remarks          string                 `protobuf:"bytes,7,opt,name=remarks,proto3" json:"remarks,omitempty"`
	OtherInfo        *NullString            `protobuf:"bytes,8,opt,name=otherInfo,proto3" json:"otherInfo,omitempty"`
}

func (x *ActionTicket) Reset() {
	*x = ActionTicket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionTicket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionTicket) ProtoMessage() {}

func (x *ActionTicket) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionTicket.ProtoReflect.Descriptor instead.
func (*ActionTicket) Descriptor() ([]byte, []int) {
	return file_transaction_message_proto_rawDescGZIP(), []int{0}
}

func (x *ActionTicket) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ActionTicket) GetTicketId() int64 {
	if x != nil {
		return x.TicketId
	}
	return 0
}

func (x *ActionTicket) GetTypeId() int64 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *ActionTicket) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ActionTicket) GetActionTicketDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ActionTicketDate
	}
	return nil
}

func (x *ActionTicket) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

func (x *ActionTicket) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *ActionTicket) GetOtherInfo() *NullString {
	if x != nil {
		return x.OtherInfo
	}
	return nil
}

type CustomerEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid       string      `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	TrnHeadId  int64       `protobuf:"varint,2,opt,name=trnHeadId,proto3" json:"trnHeadId,omitempty"`
	CustomerId int64       `protobuf:"varint,3,opt,name=customerId,proto3" json:"customerId,omitempty"`
	TypeId     int64       `protobuf:"varint,4,opt,name=typeId,proto3" json:"typeId,omitempty"`
	Remarks    string      `protobuf:"bytes,5,opt,name=remarks,proto3" json:"remarks,omitempty"`
	OtherInfo  *NullString `protobuf:"bytes,6,opt,name=otherInfo,proto3" json:"otherInfo,omitempty"`
}

func (x *CustomerEvent) Reset() {
	*x = CustomerEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerEvent) ProtoMessage() {}

func (x *CustomerEvent) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerEvent.ProtoReflect.Descriptor instead.
func (*CustomerEvent) Descriptor() ([]byte, []int) {
	return file_transaction_message_proto_rawDescGZIP(), []int{1}
}

func (x *CustomerEvent) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *CustomerEvent) GetTrnHeadId() int64 {
	if x != nil {
		return x.TrnHeadId
	}
	return 0
}

func (x *CustomerEvent) GetCustomerId() int64 {
	if x != nil {
		return x.CustomerId
	}
	return 0
}

func (x *CustomerEvent) GetTypeId() int64 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *CustomerEvent) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *CustomerEvent) GetOtherInfo() *NullString {
	if x != nil {
		return x.OtherInfo
	}
	return nil
}

type EmployeeEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid           string      `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	EmployeeId     int64       `protobuf:"varint,2,opt,name=employeeId,proto3" json:"employeeId,omitempty"`
	TicketId       int64       `protobuf:"varint,3,opt,name=ticketId,proto3" json:"ticketId,omitempty"`
	TypeId         int64       `protobuf:"varint,4,opt,name=typeId,proto3" json:"typeId,omitempty"`
	OfficeId       int64       `protobuf:"varint,5,opt,name=officeId,proto3" json:"officeId,omitempty"`
	PositionId     int64       `protobuf:"varint,6,opt,name=positionId,proto3" json:"positionId,omitempty"`
	BasicPay       string      `protobuf:"bytes,7,opt,name=basicPay,proto3" json:"basicPay,omitempty"`
	StatusId       int64       `protobuf:"varint,8,opt,name=statusId,proto3" json:"statusId,omitempty"`
	JobGrade       int32       `protobuf:"varint,9,opt,name=jobGrade,proto3" json:"jobGrade,omitempty"`
	JobStep        int32       `protobuf:"varint,10,opt,name=jobStep,proto3" json:"jobStep,omitempty"`
	LevelId        int64       `protobuf:"varint,11,opt,name=levelId,proto3" json:"levelId,omitempty"`
	EmployeeTypeId int64       `protobuf:"varint,12,opt,name=employeeTypeId,proto3" json:"employeeTypeId,omitempty"`
	Remarks        string      `protobuf:"bytes,13,opt,name=remarks,proto3" json:"remarks,omitempty"`
	OtherInfo      *NullString `protobuf:"bytes,14,opt,name=otherInfo,proto3" json:"otherInfo,omitempty"`
}

func (x *EmployeeEvent) Reset() {
	*x = EmployeeEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmployeeEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmployeeEvent) ProtoMessage() {}

func (x *EmployeeEvent) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmployeeEvent.ProtoReflect.Descriptor instead.
func (*EmployeeEvent) Descriptor() ([]byte, []int) {
	return file_transaction_message_proto_rawDescGZIP(), []int{2}
}

func (x *EmployeeEvent) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *EmployeeEvent) GetEmployeeId() int64 {
	if x != nil {
		return x.EmployeeId
	}
	return 0
}

func (x *EmployeeEvent) GetTicketId() int64 {
	if x != nil {
		return x.TicketId
	}
	return 0
}

func (x *EmployeeEvent) GetTypeId() int64 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *EmployeeEvent) GetOfficeId() int64 {
	if x != nil {
		return x.OfficeId
	}
	return 0
}

func (x *EmployeeEvent) GetPositionId() int64 {
	if x != nil {
		return x.PositionId
	}
	return 0
}

func (x *EmployeeEvent) GetBasicPay() string {
	if x != nil {
		return x.BasicPay
	}
	return ""
}

func (x *EmployeeEvent) GetStatusId() int64 {
	if x != nil {
		return x.StatusId
	}
	return 0
}

func (x *EmployeeEvent) GetJobGrade() int32 {
	if x != nil {
		return x.JobGrade
	}
	return 0
}

func (x *EmployeeEvent) GetJobStep() int32 {
	if x != nil {
		return x.JobStep
	}
	return 0
}

func (x *EmployeeEvent) GetLevelId() int64 {
	if x != nil {
		return x.LevelId
	}
	return 0
}

func (x *EmployeeEvent) GetEmployeeTypeId() int64 {
	if x != nil {
		return x.EmployeeTypeId
	}
	return 0
}

func (x *EmployeeEvent) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *EmployeeEvent) GetOtherInfo() *NullString {
	if x != nil {
		return x.OtherInfo
	}
	return nil
}

type Entries struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        int64                  `protobuf:"varint,1,opt,name=iD,proto3" json:"iD,omitempty"`
	AccountId int64                  `protobuf:"varint,2,opt,name=accountId,proto3" json:"accountId,omitempty"`
	Amount    string                 `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (x *Entries) Reset() {
	*x = Entries{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Entries) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entries) ProtoMessage() {}

func (x *Entries) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entries.ProtoReflect.Descriptor instead.
func (*Entries) Descriptor() ([]byte, []int) {
	return file_transaction_message_proto_rawDescGZIP(), []int{3}
}

func (x *Entries) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Entries) GetAccountId() int64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *Entries) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *Entries) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type JournalDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid          string      `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	TrnHeadId     int64       `protobuf:"varint,2,opt,name=trnHeadId,proto3" json:"trnHeadId,omitempty"`
	Series        int32       `protobuf:"varint,3,opt,name=series,proto3" json:"series,omitempty"`
	OfficeId      int64       `protobuf:"varint,4,opt,name=officeId,proto3" json:"officeId,omitempty"`
	CoaId         int64       `protobuf:"varint,5,opt,name=coaId,proto3" json:"coaId,omitempty"`
	AccountTypeId int64       `protobuf:"varint,6,opt,name=accountTypeId,proto3" json:"accountTypeId,omitempty"`
	Currency      string      `protobuf:"bytes,7,opt,name=currency,proto3" json:"currency,omitempty"`
	PartitionId   int64       `protobuf:"varint,8,opt,name=partitionId,proto3" json:"partitionId,omitempty"`
	TrnAmt        string      `protobuf:"bytes,9,opt,name=trnAmt,proto3" json:"trnAmt,omitempty"`
	OtherInfo     *NullString `protobuf:"bytes,10,opt,name=otherInfo,proto3" json:"otherInfo,omitempty"`
}

func (x *JournalDetail) Reset() {
	*x = JournalDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JournalDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JournalDetail) ProtoMessage() {}

func (x *JournalDetail) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JournalDetail.ProtoReflect.Descriptor instead.
func (*JournalDetail) Descriptor() ([]byte, []int) {
	return file_transaction_message_proto_rawDescGZIP(), []int{4}
}

func (x *JournalDetail) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *JournalDetail) GetTrnHeadId() int64 {
	if x != nil {
		return x.TrnHeadId
	}
	return 0
}

func (x *JournalDetail) GetSeries() int32 {
	if x != nil {
		return x.Series
	}
	return 0
}

func (x *JournalDetail) GetOfficeId() int64 {
	if x != nil {
		return x.OfficeId
	}
	return 0
}

func (x *JournalDetail) GetCoaId() int64 {
	if x != nil {
		return x.CoaId
	}
	return 0
}

func (x *JournalDetail) GetAccountTypeId() int64 {
	if x != nil {
		return x.AccountTypeId
	}
	return 0
}

func (x *JournalDetail) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *JournalDetail) GetPartitionId() int64 {
	if x != nil {
		return x.PartitionId
	}
	return 0
}

func (x *JournalDetail) GetTrnAmt() string {
	if x != nil {
		return x.TrnAmt
	}
	return ""
}

func (x *JournalDetail) GetOtherInfo() *NullString {
	if x != nil {
		return x.OtherInfo
	}
	return nil
}

type OfficeAccountTran struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid            string      `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	TrnHeadId       int64       `protobuf:"varint,2,opt,name=trnHeadId,proto3" json:"trnHeadId,omitempty"`
	Series          int64       `protobuf:"varint,3,opt,name=series,proto3" json:"series,omitempty"`
	OfficeAccountId int64       `protobuf:"varint,4,opt,name=officeAccountId,proto3" json:"officeAccountId,omitempty"`
	TrnAmt          string      `protobuf:"bytes,5,opt,name=trnAmt,proto3" json:"trnAmt,omitempty"`
	OtherInfo       *NullString `protobuf:"bytes,6,opt,name=otherInfo,proto3" json:"otherInfo,omitempty"`
}

func (x *OfficeAccountTran) Reset() {
	*x = OfficeAccountTran{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfficeAccountTran) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfficeAccountTran) ProtoMessage() {}

func (x *OfficeAccountTran) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfficeAccountTran.ProtoReflect.Descriptor instead.
func (*OfficeAccountTran) Descriptor() ([]byte, []int) {
	return file_transaction_message_proto_rawDescGZIP(), []int{5}
}

func (x *OfficeAccountTran) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *OfficeAccountTran) GetTrnHeadId() int64 {
	if x != nil {
		return x.TrnHeadId
	}
	return 0
}

func (x *OfficeAccountTran) GetSeries() int64 {
	if x != nil {
		return x.Series
	}
	return 0
}

func (x *OfficeAccountTran) GetOfficeAccountId() int64 {
	if x != nil {
		return x.OfficeAccountId
	}
	return 0
}

func (x *OfficeAccountTran) GetTrnAmt() string {
	if x != nil {
		return x.TrnAmt
	}
	return ""
}

func (x *OfficeAccountTran) GetOtherInfo() *NullString {
	if x != nil {
		return x.OtherInfo
	}
	return nil
}

type Ticket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         int64                  `protobuf:"varint,1,opt,name=iD,proto3" json:"iD,omitempty"`
	Uuid       string                 `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	TicketDate *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=ticketDate,proto3" json:"ticketDate,omitempty"`
	TypeId     int64                  `protobuf:"varint,4,opt,name=typeId,proto3" json:"typeId,omitempty"`
	PostedbyId int64                  `protobuf:"varint,5,opt,name=postedbyId,proto3" json:"postedbyId,omitempty"`
	StatusId   int64                  `protobuf:"varint,6,opt,name=statusId,proto3" json:"statusId,omitempty"`
	Remarks    string                 `protobuf:"bytes,7,opt,name=remarks,proto3" json:"remarks,omitempty"`
	OtherInfo  *NullString            `protobuf:"bytes,8,opt,name=otherInfo,proto3" json:"otherInfo,omitempty"`
}

func (x *Ticket) Reset() {
	*x = Ticket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ticket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ticket) ProtoMessage() {}

func (x *Ticket) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ticket.ProtoReflect.Descriptor instead.
func (*Ticket) Descriptor() ([]byte, []int) {
	return file_transaction_message_proto_rawDescGZIP(), []int{6}
}

func (x *Ticket) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Ticket) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Ticket) GetTicketDate() *timestamppb.Timestamp {
	if x != nil {
		return x.TicketDate
	}
	return nil
}

func (x *Ticket) GetTypeId() int64 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *Ticket) GetPostedbyId() int64 {
	if x != nil {
		return x.PostedbyId
	}
	return 0
}

func (x *Ticket) GetStatusId() int64 {
	if x != nil {
		return x.StatusId
	}
	return 0
}

func (x *Ticket) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *Ticket) GetOtherInfo() *NullString {
	if x != nil {
		return x.OtherInfo
	}
	return nil
}

type Transfers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID            int64                  `protobuf:"varint,1,opt,name=iD,proto3" json:"iD,omitempty"`
	FromAccountId int64                  `protobuf:"varint,2,opt,name=fromAccountId,proto3" json:"fromAccountId,omitempty"`
	ToAccountId   int64                  `protobuf:"varint,3,opt,name=toAccountId,proto3" json:"toAccountId,omitempty"`
	Amount        string                 `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (x *Transfers) Reset() {
	*x = Transfers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transfers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transfers) ProtoMessage() {}

func (x *Transfers) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transfers.ProtoReflect.Descriptor instead.
func (*Transfers) Descriptor() ([]byte, []int) {
	return file_transaction_message_proto_rawDescGZIP(), []int{7}
}

func (x *Transfers) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Transfers) GetFromAccountId() int64 {
	if x != nil {
		return x.FromAccountId
	}
	return 0
}

func (x *Transfers) GetToAccountId() int64 {
	if x != nil {
		return x.ToAccountId
	}
	return 0
}

func (x *Transfers) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *Transfers) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type TrnAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid          string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	TrnHeadId     int64                  `protobuf:"varint,2,opt,name=trnHeadId,proto3" json:"trnHeadId,omitempty"`
	TypeId        int64                  `protobuf:"varint,3,opt,name=typeId,proto3" json:"typeId,omitempty"`
	UserId        int64                  `protobuf:"varint,4,opt,name=userId,proto3" json:"userId,omitempty"`
	TrnActionDate *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=trnActionDate,proto3" json:"trnActionDate,omitempty"`
	Reference     string                 `protobuf:"bytes,6,opt,name=reference,proto3" json:"reference,omitempty"`
	Remarks       string                 `protobuf:"bytes,7,opt,name=remarks,proto3" json:"remarks,omitempty"`
	OtherInfo     *NullString            `protobuf:"bytes,8,opt,name=otherInfo,proto3" json:"otherInfo,omitempty"`
}

func (x *TrnAction) Reset() {
	*x = TrnAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrnAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrnAction) ProtoMessage() {}

func (x *TrnAction) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrnAction.ProtoReflect.Descriptor instead.
func (*TrnAction) Descriptor() ([]byte, []int) {
	return file_transaction_message_proto_rawDescGZIP(), []int{8}
}

func (x *TrnAction) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *TrnAction) GetTrnHeadId() int64 {
	if x != nil {
		return x.TrnHeadId
	}
	return 0
}

func (x *TrnAction) GetTypeId() int64 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *TrnAction) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *TrnAction) GetTrnActionDate() *timestamppb.Timestamp {
	if x != nil {
		return x.TrnActionDate
	}
	return nil
}

func (x *TrnAction) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

func (x *TrnAction) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *TrnAction) GetOtherInfo() *NullString {
	if x != nil {
		return x.OtherInfo
	}
	return nil
}

type TrnHead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID            int64                  `protobuf:"varint,1,opt,name=iD,proto3" json:"iD,omitempty"`
	Uuid          string                 `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	TicketId      int64                  `protobuf:"varint,3,opt,name=ticketId,proto3" json:"ticketId,omitempty"`
	TrnDate       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=trnDate,proto3" json:"trnDate,omitempty"`
	Trn           int64                  `protobuf:"varint,5,opt,name=trn,proto3" json:"trn,omitempty"`
	TypeId        int64                  `protobuf:"varint,6,opt,name=typeId,proto3" json:"typeId,omitempty"`
	OfficeId      int64                  `protobuf:"varint,7,opt,name=officeId,proto3" json:"officeId,omitempty"`
	UserId        int64                  `protobuf:"varint,8,opt,name=userId,proto3" json:"userId,omitempty"`
	TransactingId int64                  `protobuf:"varint,9,opt,name=transactingId,proto3" json:"transactingId,omitempty"`
	Orno          string                 `protobuf:"bytes,10,opt,name=orno,proto3" json:"orno,omitempty"`
	Isfinal       bool                   `protobuf:"varint,11,opt,name=isfinal,proto3" json:"isfinal,omitempty"`
	Ismanual      bool                   `protobuf:"varint,12,opt,name=ismanual,proto3" json:"ismanual,omitempty"`
	AlternateTrn  string                 `protobuf:"bytes,13,opt,name=alternateTrn,proto3" json:"alternateTrn,omitempty"`
	Reference     string                 `protobuf:"bytes,14,opt,name=reference,proto3" json:"reference,omitempty"`
	Remarks       string                 `protobuf:"bytes,15,opt,name=remarks,proto3" json:"remarks,omitempty"`
	OtherInfo     *NullString            `protobuf:"bytes,16,opt,name=otherInfo,proto3" json:"otherInfo,omitempty"`
}

func (x *TrnHead) Reset() {
	*x = TrnHead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_message_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrnHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrnHead) ProtoMessage() {}

func (x *TrnHead) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_message_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrnHead.ProtoReflect.Descriptor instead.
func (*TrnHead) Descriptor() ([]byte, []int) {
	return file_transaction_message_proto_rawDescGZIP(), []int{9}
}

func (x *TrnHead) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *TrnHead) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *TrnHead) GetTicketId() int64 {
	if x != nil {
		return x.TicketId
	}
	return 0
}

func (x *TrnHead) GetTrnDate() *timestamppb.Timestamp {
	if x != nil {
		return x.TrnDate
	}
	return nil
}

func (x *TrnHead) GetTrn() int64 {
	if x != nil {
		return x.Trn
	}
	return 0
}

func (x *TrnHead) GetTypeId() int64 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *TrnHead) GetOfficeId() int64 {
	if x != nil {
		return x.OfficeId
	}
	return 0
}

func (x *TrnHead) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *TrnHead) GetTransactingId() int64 {
	if x != nil {
		return x.TransactingId
	}
	return 0
}

func (x *TrnHead) GetOrno() string {
	if x != nil {
		return x.Orno
	}
	return ""
}

func (x *TrnHead) GetIsfinal() bool {
	if x != nil {
		return x.Isfinal
	}
	return false
}

func (x *TrnHead) GetIsmanual() bool {
	if x != nil {
		return x.Ismanual
	}
	return false
}

func (x *TrnHead) GetAlternateTrn() string {
	if x != nil {
		return x.AlternateTrn
	}
	return ""
}

func (x *TrnHead) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

func (x *TrnHead) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *TrnHead) GetOtherInfo() *NullString {
	if x != nil {
		return x.OtherInfo
	}
	return nil
}

type TrnHeadRelation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid      string      `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	TrnHeadId int64       `protobuf:"varint,2,opt,name=trnHeadId,proto3" json:"trnHeadId,omitempty"`
	RelatedId int64       `protobuf:"varint,3,opt,name=relatedId,proto3" json:"relatedId,omitempty"`
	TypeId    int64       `protobuf:"varint,4,opt,name=typeId,proto3" json:"typeId,omitempty"`
	Remarks   string      `protobuf:"bytes,5,opt,name=remarks,proto3" json:"remarks,omitempty"`
	OtherInfo *NullString `protobuf:"bytes,6,opt,name=otherInfo,proto3" json:"otherInfo,omitempty"`
}

func (x *TrnHeadRelation) Reset() {
	*x = TrnHeadRelation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_message_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrnHeadRelation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrnHeadRelation) ProtoMessage() {}

func (x *TrnHeadRelation) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_message_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrnHeadRelation.ProtoReflect.Descriptor instead.
func (*TrnHeadRelation) Descriptor() ([]byte, []int) {
	return file_transaction_message_proto_rawDescGZIP(), []int{10}
}

func (x *TrnHeadRelation) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *TrnHeadRelation) GetTrnHeadId() int64 {
	if x != nil {
		return x.TrnHeadId
	}
	return 0
}

func (x *TrnHeadRelation) GetRelatedId() int64 {
	if x != nil {
		return x.RelatedId
	}
	return 0
}

func (x *TrnHeadRelation) GetTypeId() int64 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *TrnHeadRelation) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *TrnHeadRelation) GetOtherInfo() *NullString {
	if x != nil {
		return x.OtherInfo
	}
	return nil
}

type AccountQuantityTran struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid              string      `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	TrnHeadId         int64       `protobuf:"varint,2,opt,name=trnHeadId,proto3" json:"trnHeadId,omitempty"`
	Series            int64       `protobuf:"varint,3,opt,name=series,proto3" json:"series,omitempty"`
	AccountQuantityId int64       `protobuf:"varint,4,opt,name=accountQuantityId,proto3" json:"accountQuantityId,omitempty"`
	Quantity          string      `protobuf:"bytes,5,opt,name=quantity,proto3" json:"quantity,omitempty"`
	UnitPrice         string      `protobuf:"bytes,6,opt,name=unitPrice,proto3" json:"unitPrice,omitempty"`
	Discount          string      `protobuf:"bytes,7,opt,name=discount,proto3" json:"discount,omitempty"`
	TaxAmt            string      `protobuf:"bytes,8,opt,name=taxAmt,proto3" json:"taxAmt,omitempty"`
	NetTrnAmt         string      `protobuf:"bytes,9,opt,name=netTrnAmt,proto3" json:"netTrnAmt,omitempty"`
	OtherInfo         *NullString `protobuf:"bytes,10,opt,name=otherInfo,proto3" json:"otherInfo,omitempty"`
}

func (x *AccountQuantityTran) Reset() {
	*x = AccountQuantityTran{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_message_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountQuantityTran) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountQuantityTran) ProtoMessage() {}

func (x *AccountQuantityTran) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_message_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountQuantityTran.ProtoReflect.Descriptor instead.
func (*AccountQuantityTran) Descriptor() ([]byte, []int) {
	return file_transaction_message_proto_rawDescGZIP(), []int{11}
}

func (x *AccountQuantityTran) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *AccountQuantityTran) GetTrnHeadId() int64 {
	if x != nil {
		return x.TrnHeadId
	}
	return 0
}

func (x *AccountQuantityTran) GetSeries() int64 {
	if x != nil {
		return x.Series
	}
	return 0
}

func (x *AccountQuantityTran) GetAccountQuantityId() int64 {
	if x != nil {
		return x.AccountQuantityId
	}
	return 0
}

func (x *AccountQuantityTran) GetQuantity() string {
	if x != nil {
		return x.Quantity
	}
	return ""
}

func (x *AccountQuantityTran) GetUnitPrice() string {
	if x != nil {
		return x.UnitPrice
	}
	return ""
}

func (x *AccountQuantityTran) GetDiscount() string {
	if x != nil {
		return x.Discount
	}
	return ""
}

func (x *AccountQuantityTran) GetTaxAmt() string {
	if x != nil {
		return x.TaxAmt
	}
	return ""
}

func (x *AccountQuantityTran) GetNetTrnAmt() string {
	if x != nil {
		return x.NetTrnAmt
	}
	return ""
}

func (x *AccountQuantityTran) GetOtherInfo() *NullString {
	if x != nil {
		return x.OtherInfo
	}
	return nil
}

type AccountTran struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid           string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	TrnHeadId      int64                  `protobuf:"varint,2,opt,name=trnHeadId,proto3" json:"trnHeadId,omitempty"`
	Series         int64                  `protobuf:"varint,3,opt,name=series,proto3" json:"series,omitempty"`
	ValueDate      *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=valueDate,proto3" json:"valueDate,omitempty"`
	AccountId      int64                  `protobuf:"varint,5,opt,name=accountId,proto3" json:"accountId,omitempty"`
	Currency       string                 `protobuf:"bytes,6,opt,name=currency,proto3" json:"currency,omitempty"`
	ItemId         int64                  `protobuf:"varint,7,opt,name=itemId,proto3" json:"itemId,omitempty"`
	PassbookPosted bool                   `protobuf:"varint,8,opt,name=passbookPosted,proto3" json:"passbookPosted,omitempty"`
	TrnPrin        string                 `protobuf:"bytes,9,opt,name=trnPrin,proto3" json:"trnPrin,omitempty"`
	TrnInt         string                 `protobuf:"bytes,10,opt,name=trnInt,proto3" json:"trnInt,omitempty"`
	OtherInfo      *NullString            `protobuf:"bytes,11,opt,name=otherInfo,proto3" json:"otherInfo,omitempty"`
}

func (x *AccountTran) Reset() {
	*x = AccountTran{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_message_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountTran) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountTran) ProtoMessage() {}

func (x *AccountTran) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_message_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountTran.ProtoReflect.Descriptor instead.
func (*AccountTran) Descriptor() ([]byte, []int) {
	return file_transaction_message_proto_rawDescGZIP(), []int{12}
}

func (x *AccountTran) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *AccountTran) GetTrnHeadId() int64 {
	if x != nil {
		return x.TrnHeadId
	}
	return 0
}

func (x *AccountTran) GetSeries() int64 {
	if x != nil {
		return x.Series
	}
	return 0
}

func (x *AccountTran) GetValueDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ValueDate
	}
	return nil
}

func (x *AccountTran) GetAccountId() int64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *AccountTran) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *AccountTran) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *AccountTran) GetPassbookPosted() bool {
	if x != nil {
		return x.PassbookPosted
	}
	return false
}

func (x *AccountTran) GetTrnPrin() string {
	if x != nil {
		return x.TrnPrin
	}
	return ""
}

func (x *AccountTran) GetTrnInt() string {
	if x != nil {
		return x.TrnInt
	}
	return ""
}

func (x *AccountTran) GetOtherInfo() *NullString {
	if x != nil {
		return x.OtherInfo
	}
	return nil
}

var File_transaction_message_proto protoreflect.FileDescriptor

var file_transaction_message_proto_rawDesc = []byte{
	0x0a, 0x19, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x73, 0x69, 0x6d,
	0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa4, 0x02, 0x0a,
	0x0c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74,
	0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x46, 0x0a,
	0x10, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x10, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x34, 0x0a,
	0x09, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x4e, 0x75,
	0x6c, 0x6c, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0xc9, 0x01, 0x0a, 0x0d, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x72, 0x6e,
	0x48, 0x65, 0x61, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x72,
	0x6e, 0x48, 0x65, 0x61, 0x64, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x6f, 0x74, 0x68,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73,
	0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0xb3, 0x03, 0x0a, 0x0d, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65,
	0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x6d, 0x70, 0x6c, 0x6f,
	0x79, 0x65, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x66, 0x66,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6f, 0x66, 0x66,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x69, 0x63, 0x50, 0x61,
	0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x73, 0x69, 0x63, 0x50, 0x61,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x6a, 0x6f, 0x62, 0x47, 0x72, 0x61, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x6a, 0x6f, 0x62, 0x47, 0x72, 0x61, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6a, 0x6f, 0x62,
	0x53, 0x74, 0x65, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x53,
	0x74, 0x65, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x26, 0x0a,
	0x0e, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12,
	0x34, 0x0a, 0x09, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e,
	0x4e, 0x75, 0x6c, 0x6c, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x6f, 0x74, 0x68, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x89, 0x01, 0x0a, 0x07, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x44, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0xbd, 0x02, 0x0a, 0x0d, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x72, 0x6e, 0x48, 0x65,
	0x61, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x72, 0x6e, 0x48,
	0x65, 0x61, 0x64, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x61,
	0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x61, 0x49, 0x64, 0x12,
	0x24, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x72, 0x6e, 0x41, 0x6d, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x72, 0x6e, 0x41, 0x6d, 0x74, 0x12, 0x34, 0x0a, 0x09, 0x6f,
	0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x4e, 0x75, 0x6c, 0x6c,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0xd5, 0x01, 0x0a, 0x11, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x72, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x74, 0x72, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72,
	0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x65, 0x72, 0x69, 0x65,
	0x73, 0x12, 0x28, 0x0a, 0x0f, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6f, 0x66, 0x66, 0x69,
	0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x72, 0x6e, 0x41, 0x6d, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x72, 0x6e,
	0x41, 0x6d, 0x74, 0x12, 0x34, 0x0a, 0x09, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62,
	0x61, 0x6e, 0x6b, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x09,
	0x6f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x8c, 0x02, 0x0a, 0x06, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x3a, 0x0a, 0x0a, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x70, 0x6f, 0x73, 0x74, 0x65, 0x64, 0x62, 0x79, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x64, 0x62, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61,
	0x6e, 0x6b, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x6f,
	0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xb5, 0x01, 0x0a, 0x09, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x66,
	0x72, 0x6f, 0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x74, 0x6f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x74, 0x6f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0x9d, 0x02, 0x0a, 0x09, 0x54, 0x72, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x72, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x72, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x40, 0x0a, 0x0d, 0x74, 0x72, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0d, 0x74, 0x72, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x6f, 0x74,
	0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0xdf, 0x03, 0x0a, 0x07, 0x54, 0x72, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x44, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x07,
	0x74, 0x72, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x74, 0x72, 0x6e, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x72, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x74, 0x72, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6e, 0x67, 0x49,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x72, 0x6e, 0x6f, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x72, 0x6e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73,
	0x66, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x66,
	0x69, 0x6e, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x6d, 0x61, 0x6e, 0x75, 0x61, 0x6c,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x6d, 0x61, 0x6e, 0x75, 0x61, 0x6c,
	0x12, 0x22, 0x0a, 0x0c, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x65, 0x54, 0x72, 0x6e,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74,
	0x65, 0x54, 0x72, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x34, 0x0a, 0x09,
	0x6f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x4e, 0x75, 0x6c,
	0x6c, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0xc9, 0x01, 0x0a, 0x0f, 0x54, 0x72, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x72,
	0x6e, 0x48, 0x65, 0x61, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74,
	0x72, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x65, 0x64, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x65, 0x64, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x6f, 0x74, 0x68, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x69,
	0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x52, 0x09, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xcf,
	0x02, 0x0a, 0x13, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x72,
	0x6e, 0x48, 0x65, 0x61, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74,
	0x72, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73,
	0x12, 0x2c, 0x0a, 0x11, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x6e,
	0x69, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75,
	0x6e, 0x69, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x78, 0x41, 0x6d, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x78, 0x41, 0x6d, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x65, 0x74, 0x54, 0x72, 0x6e, 0x41, 0x6d, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x65, 0x74, 0x54, 0x72, 0x6e, 0x41, 0x6d, 0x74, 0x12, 0x34, 0x0a, 0x09, 0x6f, 0x74,
	0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0xf3, 0x02, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x72, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x72, 0x6e, 0x48, 0x65, 0x61, 0x64,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x61, 0x73, 0x73, 0x62, 0x6f,
	0x6f, 0x6b, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e,
	0x70, 0x61, 0x73, 0x73, 0x62, 0x6f, 0x6f, 0x6b, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x74, 0x72, 0x6e, 0x50, 0x72, 0x69, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x74, 0x72, 0x6e, 0x50, 0x72, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x72, 0x6e, 0x49,
	0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x72, 0x6e, 0x49, 0x6e, 0x74,
	0x12, 0x34, 0x0a, 0x09, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b,
	0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x6f, 0x74, 0x68,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x20, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x64,
	0x73, 0x61, 0x70, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x70,
	0x62, 0x50, 0x01, 0x5a, 0x03, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_transaction_message_proto_rawDescOnce sync.Once
	file_transaction_message_proto_rawDescData = file_transaction_message_proto_rawDesc
)

func file_transaction_message_proto_rawDescGZIP() []byte {
	file_transaction_message_proto_rawDescOnce.Do(func() {
		file_transaction_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_transaction_message_proto_rawDescData)
	})
	return file_transaction_message_proto_rawDescData
}

var file_transaction_message_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_transaction_message_proto_goTypes = []interface{}{
	(*ActionTicket)(nil),          // 0: simplebank.ActionTicket
	(*CustomerEvent)(nil),         // 1: simplebank.CustomerEvent
	(*EmployeeEvent)(nil),         // 2: simplebank.EmployeeEvent
	(*Entries)(nil),               // 3: simplebank.Entries
	(*JournalDetail)(nil),         // 4: simplebank.JournalDetail
	(*OfficeAccountTran)(nil),     // 5: simplebank.OfficeAccountTran
	(*Ticket)(nil),                // 6: simplebank.Ticket
	(*Transfers)(nil),             // 7: simplebank.Transfers
	(*TrnAction)(nil),             // 8: simplebank.TrnAction
	(*TrnHead)(nil),               // 9: simplebank.TrnHead
	(*TrnHeadRelation)(nil),       // 10: simplebank.TrnHeadRelation
	(*AccountQuantityTran)(nil),   // 11: simplebank.AccountQuantityTran
	(*AccountTran)(nil),           // 12: simplebank.AccountTran
	(*timestamppb.Timestamp)(nil), // 13: google.protobuf.Timestamp
	(*NullString)(nil),            // 14: simplebank.NullString
}
var file_transaction_message_proto_depIdxs = []int32{
	13, // 0: simplebank.ActionTicket.actionTicketDate:type_name -> google.protobuf.Timestamp
	14, // 1: simplebank.ActionTicket.otherInfo:type_name -> simplebank.NullString
	14, // 2: simplebank.CustomerEvent.otherInfo:type_name -> simplebank.NullString
	14, // 3: simplebank.EmployeeEvent.otherInfo:type_name -> simplebank.NullString
	13, // 4: simplebank.Entries.createdAt:type_name -> google.protobuf.Timestamp
	14, // 5: simplebank.JournalDetail.otherInfo:type_name -> simplebank.NullString
	14, // 6: simplebank.OfficeAccountTran.otherInfo:type_name -> simplebank.NullString
	13, // 7: simplebank.Ticket.ticketDate:type_name -> google.protobuf.Timestamp
	14, // 8: simplebank.Ticket.otherInfo:type_name -> simplebank.NullString
	13, // 9: simplebank.Transfers.createdAt:type_name -> google.protobuf.Timestamp
	13, // 10: simplebank.TrnAction.trnActionDate:type_name -> google.protobuf.Timestamp
	14, // 11: simplebank.TrnAction.otherInfo:type_name -> simplebank.NullString
	13, // 12: simplebank.TrnHead.trnDate:type_name -> google.protobuf.Timestamp
	14, // 13: simplebank.TrnHead.otherInfo:type_name -> simplebank.NullString
	14, // 14: simplebank.TrnHeadRelation.otherInfo:type_name -> simplebank.NullString
	14, // 15: simplebank.AccountQuantityTran.otherInfo:type_name -> simplebank.NullString
	13, // 16: simplebank.AccountTran.valueDate:type_name -> google.protobuf.Timestamp
	14, // 17: simplebank.AccountTran.otherInfo:type_name -> simplebank.NullString
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_transaction_message_proto_init() }
func file_transaction_message_proto_init() {
	if File_transaction_message_proto != nil {
		return
	}
	file_type_message_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_transaction_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionTicket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmployeeEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Entries); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JournalDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfficeAccountTran); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ticket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_message_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transfers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_message_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrnAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_message_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrnHead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_message_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrnHeadRelation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_message_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountQuantityTran); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_message_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountTran); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_transaction_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_transaction_message_proto_goTypes,
		DependencyIndexes: file_transaction_message_proto_depIdxs,
		MessageInfos:      file_transaction_message_proto_msgTypes,
	}.Build()
	File_transaction_message_proto = out.File
	file_transaction_message_proto_rawDesc = nil
	file_transaction_message_proto_goTypes = nil
	file_transaction_message_proto_depIdxs = nil
}
