// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.12
// source: kplus_service.proto

package pb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The request message containing the user's name
type HelloRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *HelloRequest) Reset() {
	*x = HelloRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kplus_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelloRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloRequest) ProtoMessage() {}

func (x *HelloRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kplus_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloRequest.ProtoReflect.Descriptor instead.
func (*HelloRequest) Descriptor() ([]byte, []int) {
	return file_kplus_service_proto_rawDescGZIP(), []int{0}
}

func (x *HelloRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// The response message containing the greetings
type HelloReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *HelloReply) Reset() {
	*x = HelloReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kplus_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelloReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloReply) ProtoMessage() {}

func (x *HelloReply) ProtoReflect() protoreflect.Message {
	mi := &file_kplus_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloReply.ProtoReflect.Descriptor instead.
func (*HelloReply) Descriptor() ([]byte, []int) {
	return file_kplus_service_proto_rawDescGZIP(), []int{1}
}

func (x *HelloReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_kplus_service_proto protoreflect.FileDescriptor

var file_kplus_service_proto_rawDesc = []byte{
	0x0a, 0x13, 0x6b, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e,
	0x6b, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x13, 0x6b, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x22, 0x0a, 0x0c, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x26, 0x0a, 0x0a, 0x48, 0x65, 0x6c, 0x6c,
	0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x32, 0x90, 0x0c, 0x0a, 0x0c, 0x4b, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x51, 0x0a, 0x08, 0x53, 0x61, 0x79, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x18, 0x2e,
	0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x22, 0x08, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x63, 0x68,
	0x6f, 0x3a, 0x01, 0x2a, 0x12, 0x80, 0x01, 0x0a, 0x11, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x49, 0x44, 0x12, 0x20, 0x2e, 0x73, 0x69, 0x6d,
	0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x4b, 0x50, 0x4c, 0x55, 0x53, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73,
	0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x4b, 0x50, 0x4c, 0x55, 0x53, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x22, 0x1b, 0x2f, 0x6b, 0x70, 0x6c, 0x75, 0x73, 0x2f,
	0x76, 0x31, 0x2f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x43, 0x49, 0x44, 0x3a, 0x01, 0x2a, 0x12, 0x83, 0x01, 0x0a, 0x0f, 0x43, 0x75, 0x73, 0x74,
	0x53, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x2e, 0x73, 0x69,
	0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x4b, 0x50, 0x4c, 0x55, 0x53, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e,
	0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x4b, 0x50, 0x4c, 0x55, 0x53,
	0x43, 0x75, 0x73, 0x74, 0x53, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x22,
	0x19, 0x2f, 0x6b, 0x70, 0x6c, 0x75, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x75, 0x73, 0x74, 0x53,
	0x61, 0x76, 0x69, 0x6e, 0x67, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0xa2, 0x01,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x2d, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x4b, 0x50, 0x4c, 0x55, 0x53, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62,
	0x61, 0x6e, 0x6b, 0x2e, 0x4b, 0x50, 0x4c, 0x55, 0x53, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x22, 0x1f,
	0x2f, 0x6b, 0x70, 0x6c, 0x75, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x3a,
	0x01, 0x2a, 0x12, 0x92, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6c, 0x53, 0x68, 0x74, 0x70, 0x65, 0x72, 0x43, 0x49, 0x44, 0x12, 0x20, 0x2e, 0x73, 0x69,
	0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x4b, 0x50, 0x4c, 0x55, 0x53, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e,
	0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x4b, 0x50, 0x4c, 0x55, 0x53,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x53, 0x68, 0x74, 0x70, 0x65,
	0x72, 0x43, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x23, 0x22, 0x1e, 0x2f, 0x6b, 0x70, 0x6c, 0x75, 0x73, 0x2f, 0x76, 0x31, 0x2f,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x53, 0x68, 0x74, 0x70, 0x65,
	0x72, 0x43, 0x49, 0x44, 0x3a, 0x01, 0x2a, 0x12, 0x75, 0x0a, 0x0e, 0x4b, 0x32, 0x43, 0x43, 0x61,
	0x6c, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x66, 0x12, 0x23, 0x2e, 0x73, 0x69, 0x6d, 0x70,
	0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x4b, 0x50, 0x4c, 0x55, 0x53, 0x43, 0x61, 0x6c, 0x6c,
	0x42, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19,
	0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x4b, 0x50, 0x4c, 0x55,
	0x53, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1d, 0x22, 0x18, 0x2f, 0x6b, 0x70, 0x6c, 0x75, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6b, 0x32, 0x63,
	0x43, 0x61, 0x6c, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x66, 0x3a, 0x01, 0x2a, 0x12, 0x82,
	0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73,
	0x12, 0x25, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x4b, 0x50,
	0x4c, 0x55, 0x53, 0x47, 0x65, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x4b, 0x50, 0x4c, 0x55, 0x53, 0x47, 0x65, 0x74, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x22, 0x17, 0x2f, 0x6b, 0x70, 0x6c, 0x75, 0x73, 0x2f,
	0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73,
	0x3a, 0x01, 0x2a, 0x12, 0x7b, 0x0a, 0x0f, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x27, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62,
	0x61, 0x6e, 0x6b, 0x2e, 0x4b, 0x50, 0x4c, 0x55, 0x53, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c,
	0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x19, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x4b, 0x50, 0x4c,
	0x55, 0x53, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1e, 0x22, 0x19, 0x2f, 0x6b, 0x70, 0x6c, 0x75, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x75,
	0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x3a, 0x01, 0x2a,
	0x12, 0x80, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x6f, 0x61, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x20, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b,
	0x2e, 0x4b, 0x50, 0x4c, 0x55, 0x53, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61,
	0x6e, 0x6b, 0x2e, 0x4b, 0x50, 0x4c, 0x55, 0x53, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x6f,
	0x61, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x22, 0x18, 0x2f, 0x6b, 0x70, 0x6c, 0x75, 0x73, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x6f, 0x61, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x3a, 0x01, 0x2a, 0x12, 0x69, 0x0a, 0x08, 0x4c, 0x6f, 0x61, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1b, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x4b, 0x50, 0x4c,
	0x55, 0x53, 0x41, 0x63, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73,
	0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x4b, 0x50, 0x4c, 0x55, 0x53, 0x4c,
	0x6f, 0x61, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x12, 0x2f, 0x6b, 0x70, 0x6c, 0x75, 0x73, 0x2f,
	0x76, 0x31, 0x2f, 0x4c, 0x6f, 0x61, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x3a, 0x01, 0x2a, 0x12, 0x87,
	0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x46, 0x6f, 0x72, 0x53,
	0x75, 0x70, 0x65, 0x72, 0x41, 0x70, 0x70, 0x12, 0x20, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x4b, 0x50, 0x4c, 0x55, 0x53, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x69, 0x6d, 0x70,
	0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x4b, 0x50, 0x4c, 0x55, 0x53, 0x47, 0x65, 0x74, 0x53,
	0x61, 0x76, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x23, 0x22, 0x1e, 0x2f, 0x6b, 0x70, 0x6c, 0x75, 0x73, 0x2f, 0x76, 0x31,
	0x2f, 0x67, 0x65, 0x74, 0x53, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x46, 0x6f, 0x72, 0x53, 0x75, 0x70,
	0x65, 0x72, 0x41, 0x70, 0x70, 0x3a, 0x01, 0x2a, 0x12, 0x79, 0x0a, 0x13, 0x46, 0x75, 0x6e, 0x64,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x24, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x4b, 0x50, 0x4c,
	0x55, 0x53, 0x46, 0x75, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61,
	0x6e, 0x6b, 0x2e, 0x4b, 0x50, 0x4c, 0x55, 0x53, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f, 0x6b, 0x70, 0x6c, 0x75, 0x73,
	0x2f, 0x76, 0x31, 0x2f, 0x46, 0x75, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x3a, 0x01, 0x2a, 0x42, 0x20, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x64, 0x73, 0x61, 0x70,
	0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x70, 0x62, 0x50, 0x01,
	0x5a, 0x03, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kplus_service_proto_rawDescOnce sync.Once
	file_kplus_service_proto_rawDescData = file_kplus_service_proto_rawDesc
)

func file_kplus_service_proto_rawDescGZIP() []byte {
	file_kplus_service_proto_rawDescOnce.Do(func() {
		file_kplus_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_kplus_service_proto_rawDescData)
	})
	return file_kplus_service_proto_rawDescData
}

var file_kplus_service_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_kplus_service_proto_goTypes = []interface{}{
	(*HelloRequest)(nil),                       // 0: simplebank.HelloRequest
	(*HelloReply)(nil),                         // 1: simplebank.HelloReply
	(*KPLUSCustomerRequest)(nil),               // 2: simplebank.KPLUSCustomerRequest
	(*KPLUSGetTransactionHistoryRequest)(nil),  // 3: simplebank.KPLUSGetTransactionHistoryRequest
	(*KPLUSCallBackRefRequest)(nil),            // 4: simplebank.KPLUSCallBackRefRequest
	(*KPLUSGetReferencesRequest)(nil),          // 5: simplebank.KPLUSGetReferencesRequest
	(*KPLUSMultiplePaymentRequest)(nil),        // 6: simplebank.KPLUSMultiplePaymentRequest
	(*KPLUSAccRequest)(nil),                    // 7: simplebank.KPLUSAccRequest
	(*KPLUSFundTransferRequest)(nil),           // 8: simplebank.KPLUSFundTransferRequest
	(*KPLUSCustomerResponse)(nil),              // 9: simplebank.KPLUSCustomerResponse
	(*KPLUSCustSavingsListResponse)(nil),       // 10: simplebank.KPLUSCustSavingsListResponse
	(*KPLUSGetTransactionHistoryResponse)(nil), // 11: simplebank.KPLUSGetTransactionHistoryResponse
	(*KPLUSGenerateColShtperCIDResponse)(nil),  // 12: simplebank.KPLUSGenerateColShtperCIDResponse
	(*KPLUSResponse)(nil),                      // 13: simplebank.KPLUSResponse
	(*KPLUSGetReferencesResponse)(nil),         // 14: simplebank.KPLUSGetReferencesResponse
	(*KPLUSSearchLoanListResponse)(nil),        // 15: simplebank.KPLUSSearchLoanListResponse
	(*KPLUSLoanInfoResponse)(nil),              // 16: simplebank.KPLUSLoanInfoResponse
	(*KPLUSGetSavingResponse)(nil),             // 17: simplebank.KPLUSGetSavingResponse
}
var file_kplus_service_proto_depIdxs = []int32{
	0,  // 0: simplebank.KPlusService.SayHello:input_type -> simplebank.HelloRequest
	2,  // 1: simplebank.KPlusService.SearchCustomerCID:input_type -> simplebank.KPLUSCustomerRequest
	2,  // 2: simplebank.KPlusService.CustSavingsList:input_type -> simplebank.KPLUSCustomerRequest
	3,  // 3: simplebank.KPlusService.GetTransactionHistory:input_type -> simplebank.KPLUSGetTransactionHistoryRequest
	2,  // 4: simplebank.KPlusService.GenerateColShtperCID:input_type -> simplebank.KPLUSCustomerRequest
	4,  // 5: simplebank.KPlusService.K2CCallBackRef:input_type -> simplebank.KPLUSCallBackRefRequest
	5,  // 6: simplebank.KPlusService.GetReferences:input_type -> simplebank.KPLUSGetReferencesRequest
	6,  // 7: simplebank.KPlusService.MultiplePayment:input_type -> simplebank.KPLUSMultiplePaymentRequest
	2,  // 8: simplebank.KPlusService.SearchLoanList:input_type -> simplebank.KPLUSCustomerRequest
	7,  // 9: simplebank.KPlusService.LoanInfo:input_type -> simplebank.KPLUSAccRequest
	2,  // 10: simplebank.KPlusService.GetSavingForSuperApp:input_type -> simplebank.KPLUSCustomerRequest
	8,  // 11: simplebank.KPlusService.FundTransferRequest:input_type -> simplebank.KPLUSFundTransferRequest
	1,  // 12: simplebank.KPlusService.SayHello:output_type -> simplebank.HelloReply
	9,  // 13: simplebank.KPlusService.SearchCustomerCID:output_type -> simplebank.KPLUSCustomerResponse
	10, // 14: simplebank.KPlusService.CustSavingsList:output_type -> simplebank.KPLUSCustSavingsListResponse
	11, // 15: simplebank.KPlusService.GetTransactionHistory:output_type -> simplebank.KPLUSGetTransactionHistoryResponse
	12, // 16: simplebank.KPlusService.GenerateColShtperCID:output_type -> simplebank.KPLUSGenerateColShtperCIDResponse
	13, // 17: simplebank.KPlusService.K2CCallBackRef:output_type -> simplebank.KPLUSResponse
	14, // 18: simplebank.KPlusService.GetReferences:output_type -> simplebank.KPLUSGetReferencesResponse
	13, // 19: simplebank.KPlusService.MultiplePayment:output_type -> simplebank.KPLUSResponse
	15, // 20: simplebank.KPlusService.SearchLoanList:output_type -> simplebank.KPLUSSearchLoanListResponse
	16, // 21: simplebank.KPlusService.LoanInfo:output_type -> simplebank.KPLUSLoanInfoResponse
	17, // 22: simplebank.KPlusService.GetSavingForSuperApp:output_type -> simplebank.KPLUSGetSavingResponse
	13, // 23: simplebank.KPlusService.FundTransferRequest:output_type -> simplebank.KPLUSResponse
	12, // [12:24] is the sub-list for method output_type
	0,  // [0:12] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_kplus_service_proto_init() }
func file_kplus_service_proto_init() {
	if File_kplus_service_proto != nil {
		return
	}
	file_kplus_message_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_kplus_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelloRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kplus_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelloReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kplus_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kplus_service_proto_goTypes,
		DependencyIndexes: file_kplus_service_proto_depIdxs,
		MessageInfos:      file_kplus_service_proto_msgTypes,
	}.Build()
	File_kplus_service_proto = out.File
	file_kplus_service_proto_rawDesc = nil
	file_kplus_service_proto_goTypes = nil
	file_kplus_service_proto_depIdxs = nil
}
