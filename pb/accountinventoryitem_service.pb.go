// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.12
// source: accountinventoryitem_service.proto

package pb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InventoryItemChildRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int64                        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid                 string                       `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	BarCode              string                       `protobuf:"bytes,3,opt,name=barCode,proto3" json:"barCode,omitempty"`
	ItemName             string                       `protobuf:"bytes,4,opt,name=itemName,proto3" json:"itemName,omitempty"`
	UniqueVariation      string                       `protobuf:"bytes,5,opt,name=uniqueVariation,proto3" json:"uniqueVariation,omitempty"`
	ParentId             int64                        `protobuf:"varint,6,opt,name=parentId,proto3" json:"parentId,omitempty"`
	GenericNameId        *NullInt64                   `protobuf:"bytes,7,opt,name=genericNameId,proto3" json:"genericNameId,omitempty"`
	BrandNameId          *NullInt64                   `protobuf:"bytes,8,opt,name=brandNameId,proto3" json:"brandNameId,omitempty"`
	MeasureId            int64                        `protobuf:"varint,9,opt,name=measureId,proto3" json:"measureId,omitempty"`
	ImageId              *NullInt64                   `protobuf:"bytes,10,opt,name=imageId,proto3" json:"imageId,omitempty"`
	Remarks              string                       `protobuf:"bytes,11,opt,name=remarks,proto3" json:"remarks,omitempty"`
	OtherInfo            *NullString                  `protobuf:"bytes,12,opt,name=otherInfo,proto3" json:"otherInfo,omitempty"`
	InventorySpecsString []*InventorySpecsString      `protobuf:"bytes,13,rep,name=inventorySpecsString,proto3" json:"inventorySpecsString,omitempty"`
	InventorySpecsNumber []*InventorySpecsNumber      `protobuf:"bytes,14,rep,name=inventorySpecsNumber,proto3" json:"inventorySpecsNumber,omitempty"`
	InventorySpecsDate   []*InventorySpecsDate        `protobuf:"bytes,15,rep,name=inventorySpecsDate,proto3" json:"inventorySpecsDate,omitempty"`
	Child                []*InventoryItemChildRequest `protobuf:"bytes,16,rep,name=child,proto3" json:"child,omitempty"`
}

func (x *InventoryItemChildRequest) Reset() {
	*x = InventoryItemChildRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accountinventoryitem_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InventoryItemChildRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InventoryItemChildRequest) ProtoMessage() {}

func (x *InventoryItemChildRequest) ProtoReflect() protoreflect.Message {
	mi := &file_accountinventoryitem_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InventoryItemChildRequest.ProtoReflect.Descriptor instead.
func (*InventoryItemChildRequest) Descriptor() ([]byte, []int) {
	return file_accountinventoryitem_service_proto_rawDescGZIP(), []int{0}
}

func (x *InventoryItemChildRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *InventoryItemChildRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *InventoryItemChildRequest) GetBarCode() string {
	if x != nil {
		return x.BarCode
	}
	return ""
}

func (x *InventoryItemChildRequest) GetItemName() string {
	if x != nil {
		return x.ItemName
	}
	return ""
}

func (x *InventoryItemChildRequest) GetUniqueVariation() string {
	if x != nil {
		return x.UniqueVariation
	}
	return ""
}

func (x *InventoryItemChildRequest) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *InventoryItemChildRequest) GetGenericNameId() *NullInt64 {
	if x != nil {
		return x.GenericNameId
	}
	return nil
}

func (x *InventoryItemChildRequest) GetBrandNameId() *NullInt64 {
	if x != nil {
		return x.BrandNameId
	}
	return nil
}

func (x *InventoryItemChildRequest) GetMeasureId() int64 {
	if x != nil {
		return x.MeasureId
	}
	return 0
}

func (x *InventoryItemChildRequest) GetImageId() *NullInt64 {
	if x != nil {
		return x.ImageId
	}
	return nil
}

func (x *InventoryItemChildRequest) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *InventoryItemChildRequest) GetOtherInfo() *NullString {
	if x != nil {
		return x.OtherInfo
	}
	return nil
}

func (x *InventoryItemChildRequest) GetInventorySpecsString() []*InventorySpecsString {
	if x != nil {
		return x.InventorySpecsString
	}
	return nil
}

func (x *InventoryItemChildRequest) GetInventorySpecsNumber() []*InventorySpecsNumber {
	if x != nil {
		return x.InventorySpecsNumber
	}
	return nil
}

func (x *InventoryItemChildRequest) GetInventorySpecsDate() []*InventorySpecsDate {
	if x != nil {
		return x.InventorySpecsDate
	}
	return nil
}

func (x *InventoryItemChildRequest) GetChild() []*InventoryItemChildRequest {
	if x != nil {
		return x.Child
	}
	return nil
}

type InventoryItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InventoryItem        *InventoryItem               `protobuf:"bytes,1,opt,name=inventoryItem,proto3" json:"inventoryItem,omitempty"`
	Child                []*InventoryItemChildRequest `protobuf:"bytes,2,rep,name=child,proto3" json:"child,omitempty"`
	InventorySpecsString []*InventorySpecsString      `protobuf:"bytes,3,rep,name=inventorySpecsString,proto3" json:"inventorySpecsString,omitempty"`
	InventorySpecsNumber []*InventorySpecsNumber      `protobuf:"bytes,4,rep,name=inventorySpecsNumber,proto3" json:"inventorySpecsNumber,omitempty"`
	InventorySpecsDate   []*InventorySpecsDate        `protobuf:"bytes,5,rep,name=inventorySpecsDate,proto3" json:"inventorySpecsDate,omitempty"`
}

func (x *InventoryItemRequest) Reset() {
	*x = InventoryItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accountinventoryitem_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InventoryItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InventoryItemRequest) ProtoMessage() {}

func (x *InventoryItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_accountinventoryitem_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InventoryItemRequest.ProtoReflect.Descriptor instead.
func (*InventoryItemRequest) Descriptor() ([]byte, []int) {
	return file_accountinventoryitem_service_proto_rawDescGZIP(), []int{1}
}

func (x *InventoryItemRequest) GetInventoryItem() *InventoryItem {
	if x != nil {
		return x.InventoryItem
	}
	return nil
}

func (x *InventoryItemRequest) GetChild() []*InventoryItemChildRequest {
	if x != nil {
		return x.Child
	}
	return nil
}

func (x *InventoryItemRequest) GetInventorySpecsString() []*InventorySpecsString {
	if x != nil {
		return x.InventorySpecsString
	}
	return nil
}

func (x *InventoryItemRequest) GetInventorySpecsNumber() []*InventorySpecsNumber {
	if x != nil {
		return x.InventorySpecsNumber
	}
	return nil
}

func (x *InventoryItemRequest) GetInventorySpecsDate() []*InventorySpecsDate {
	if x != nil {
		return x.InventorySpecsDate
	}
	return nil
}

type InventoryItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InventoryItem        *InventoryItem           `protobuf:"bytes,1,opt,name=inventoryItem,proto3" json:"inventoryItem,omitempty"`
	GenericName          *Reference               `protobuf:"bytes,2,opt,name=genericName,proto3" json:"genericName,omitempty"`
	BrandName            *Reference               `protobuf:"bytes,3,opt,name=brandName,proto3" json:"brandName,omitempty"`
	Measure              *Reference               `protobuf:"bytes,4,opt,name=measure,proto3" json:"measure,omitempty"`
	Image                *Document                `protobuf:"bytes,5,opt,name=image,proto3" json:"image,omitempty"`
	InventorySpecsString []*InventorySpecsString  `protobuf:"bytes,6,rep,name=inventorySpecsString,proto3" json:"inventorySpecsString,omitempty"`
	InventorySpecsNumber []*InventorySpecsNumber  `protobuf:"bytes,7,rep,name=inventorySpecsNumber,proto3" json:"inventorySpecsNumber,omitempty"`
	InventorySpecsDate   []*InventorySpecsDate    `protobuf:"bytes,8,rep,name=inventorySpecsDate,proto3" json:"inventorySpecsDate,omitempty"`
	Child                []*InventoryItemResponse `protobuf:"bytes,9,rep,name=child,proto3" json:"child,omitempty"`
}

func (x *InventoryItemResponse) Reset() {
	*x = InventoryItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accountinventoryitem_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InventoryItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InventoryItemResponse) ProtoMessage() {}

func (x *InventoryItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_accountinventoryitem_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InventoryItemResponse.ProtoReflect.Descriptor instead.
func (*InventoryItemResponse) Descriptor() ([]byte, []int) {
	return file_accountinventoryitem_service_proto_rawDescGZIP(), []int{2}
}

func (x *InventoryItemResponse) GetInventoryItem() *InventoryItem {
	if x != nil {
		return x.InventoryItem
	}
	return nil
}

func (x *InventoryItemResponse) GetGenericName() *Reference {
	if x != nil {
		return x.GenericName
	}
	return nil
}

func (x *InventoryItemResponse) GetBrandName() *Reference {
	if x != nil {
		return x.BrandName
	}
	return nil
}

func (x *InventoryItemResponse) GetMeasure() *Reference {
	if x != nil {
		return x.Measure
	}
	return nil
}

func (x *InventoryItemResponse) GetImage() *Document {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *InventoryItemResponse) GetInventorySpecsString() []*InventorySpecsString {
	if x != nil {
		return x.InventorySpecsString
	}
	return nil
}

func (x *InventoryItemResponse) GetInventorySpecsNumber() []*InventorySpecsNumber {
	if x != nil {
		return x.InventorySpecsNumber
	}
	return nil
}

func (x *InventoryItemResponse) GetInventorySpecsDate() []*InventorySpecsDate {
	if x != nil {
		return x.InventorySpecsDate
	}
	return nil
}

func (x *InventoryItemResponse) GetChild() []*InventoryItemResponse {
	if x != nil {
		return x.Child
	}
	return nil
}

type GetInventoryItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetInventoryItemRequest) Reset() {
	*x = GetInventoryItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accountinventoryitem_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInventoryItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInventoryItemRequest) ProtoMessage() {}

func (x *GetInventoryItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_accountinventoryitem_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInventoryItemRequest.ProtoReflect.Descriptor instead.
func (*GetInventoryItemRequest) Descriptor() ([]byte, []int) {
	return file_accountinventoryitem_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetInventoryItemRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type SearchInventoryItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemIdString []*SearchInventoryItemRequest_ItemIdString `protobuf:"bytes,1,rep,name=itemIdString,proto3" json:"itemIdString,omitempty"`
	ItemIdDate   []*SearchInventoryItemRequest_ItemIdDate   `protobuf:"bytes,2,rep,name=itemIdDate,proto3" json:"itemIdDate,omitempty"`
	ItemIdNumber []*SearchInventoryItemRequest_ItemIdNumber `protobuf:"bytes,3,rep,name=itemIdNumber,proto3" json:"itemIdNumber,omitempty"`
}

func (x *SearchInventoryItemRequest) Reset() {
	*x = SearchInventoryItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accountinventoryitem_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchInventoryItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchInventoryItemRequest) ProtoMessage() {}

func (x *SearchInventoryItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_accountinventoryitem_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchInventoryItemRequest.ProtoReflect.Descriptor instead.
func (*SearchInventoryItemRequest) Descriptor() ([]byte, []int) {
	return file_accountinventoryitem_service_proto_rawDescGZIP(), []int{4}
}

func (x *SearchInventoryItemRequest) GetItemIdString() []*SearchInventoryItemRequest_ItemIdString {
	if x != nil {
		return x.ItemIdString
	}
	return nil
}

func (x *SearchInventoryItemRequest) GetItemIdDate() []*SearchInventoryItemRequest_ItemIdDate {
	if x != nil {
		return x.ItemIdDate
	}
	return nil
}

func (x *SearchInventoryItemRequest) GetItemIdNumber() []*SearchInventoryItemRequest_ItemIdNumber {
	if x != nil {
		return x.ItemIdNumber
	}
	return nil
}

type GetInventoryItemRequestbyUuid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *GetInventoryItemRequestbyUuid) Reset() {
	*x = GetInventoryItemRequestbyUuid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accountinventoryitem_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInventoryItemRequestbyUuid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInventoryItemRequestbyUuid) ProtoMessage() {}

func (x *GetInventoryItemRequestbyUuid) ProtoReflect() protoreflect.Message {
	mi := &file_accountinventoryitem_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInventoryItemRequestbyUuid.ProtoReflect.Descriptor instead.
func (*GetInventoryItemRequestbyUuid) Descriptor() ([]byte, []int) {
	return file_accountinventoryitem_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetInventoryItemRequestbyUuid) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type GetListInventoryItemRequestbyGeneric struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GenericId int64 `protobuf:"varint,1,opt,name=genericId,proto3" json:"genericId,omitempty"`
	Limit     int32 `protobuf:"varint,2,opt,name=Limit,proto3" json:"Limit,omitempty"`
	Offset    int32 `protobuf:"varint,3,opt,name=Offset,proto3" json:"Offset,omitempty"`
}

func (x *GetListInventoryItemRequestbyGeneric) Reset() {
	*x = GetListInventoryItemRequestbyGeneric{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accountinventoryitem_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListInventoryItemRequestbyGeneric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListInventoryItemRequestbyGeneric) ProtoMessage() {}

func (x *GetListInventoryItemRequestbyGeneric) ProtoReflect() protoreflect.Message {
	mi := &file_accountinventoryitem_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListInventoryItemRequestbyGeneric.ProtoReflect.Descriptor instead.
func (*GetListInventoryItemRequestbyGeneric) Descriptor() ([]byte, []int) {
	return file_accountinventoryitem_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetListInventoryItemRequestbyGeneric) GetGenericId() int64 {
	if x != nil {
		return x.GenericId
	}
	return 0
}

func (x *GetListInventoryItemRequestbyGeneric) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetListInventoryItemRequestbyGeneric) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type GetListInventoryItemRequestbyBrand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrandId int64 `protobuf:"varint,1,opt,name=brandId,proto3" json:"brandId,omitempty"`
	Limit   int32 `protobuf:"varint,2,opt,name=Limit,proto3" json:"Limit,omitempty"`
	Offset  int32 `protobuf:"varint,3,opt,name=Offset,proto3" json:"Offset,omitempty"`
}

func (x *GetListInventoryItemRequestbyBrand) Reset() {
	*x = GetListInventoryItemRequestbyBrand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accountinventoryitem_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListInventoryItemRequestbyBrand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListInventoryItemRequestbyBrand) ProtoMessage() {}

func (x *GetListInventoryItemRequestbyBrand) ProtoReflect() protoreflect.Message {
	mi := &file_accountinventoryitem_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListInventoryItemRequestbyBrand.ProtoReflect.Descriptor instead.
func (*GetListInventoryItemRequestbyBrand) Descriptor() ([]byte, []int) {
	return file_accountinventoryitem_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetListInventoryItemRequestbyBrand) GetBrandId() int64 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *GetListInventoryItemRequestbyBrand) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetListInventoryItemRequestbyBrand) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type GetListInventoryItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InventoryItemResponse []*InventoryItemResponse `protobuf:"bytes,1,rep,name=inventoryItemResponse,proto3" json:"inventoryItemResponse,omitempty"`
}

func (x *GetListInventoryItemResponse) Reset() {
	*x = GetListInventoryItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accountinventoryitem_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListInventoryItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListInventoryItemResponse) ProtoMessage() {}

func (x *GetListInventoryItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_accountinventoryitem_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListInventoryItemResponse.ProtoReflect.Descriptor instead.
func (*GetListInventoryItemResponse) Descriptor() ([]byte, []int) {
	return file_accountinventoryitem_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetListInventoryItemResponse) GetInventoryItemResponse() []*InventoryItemResponse {
	if x != nil {
		return x.InventoryItemResponse
	}
	return nil
}

type SearchInventoryItemRequest_ItemIdString struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InventoryItemId int64  `protobuf:"varint,1,opt,name=inventoryItemId,proto3" json:"inventoryItemId,omitempty"`
	Value           string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SearchInventoryItemRequest_ItemIdString) Reset() {
	*x = SearchInventoryItemRequest_ItemIdString{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accountinventoryitem_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchInventoryItemRequest_ItemIdString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchInventoryItemRequest_ItemIdString) ProtoMessage() {}

func (x *SearchInventoryItemRequest_ItemIdString) ProtoReflect() protoreflect.Message {
	mi := &file_accountinventoryitem_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchInventoryItemRequest_ItemIdString.ProtoReflect.Descriptor instead.
func (*SearchInventoryItemRequest_ItemIdString) Descriptor() ([]byte, []int) {
	return file_accountinventoryitem_service_proto_rawDescGZIP(), []int{4, 0}
}

func (x *SearchInventoryItemRequest_ItemIdString) GetInventoryItemId() int64 {
	if x != nil {
		return x.InventoryItemId
	}
	return 0
}

func (x *SearchInventoryItemRequest_ItemIdString) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type SearchInventoryItemRequest_ItemIdDate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InventoryItemId int64                  `protobuf:"varint,1,opt,name=inventoryItemId,proto3" json:"inventoryItemId,omitempty"`
	Value           *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Value2          *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=value2,proto3" json:"value2,omitempty"`
}

func (x *SearchInventoryItemRequest_ItemIdDate) Reset() {
	*x = SearchInventoryItemRequest_ItemIdDate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accountinventoryitem_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchInventoryItemRequest_ItemIdDate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchInventoryItemRequest_ItemIdDate) ProtoMessage() {}

func (x *SearchInventoryItemRequest_ItemIdDate) ProtoReflect() protoreflect.Message {
	mi := &file_accountinventoryitem_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchInventoryItemRequest_ItemIdDate.ProtoReflect.Descriptor instead.
func (*SearchInventoryItemRequest_ItemIdDate) Descriptor() ([]byte, []int) {
	return file_accountinventoryitem_service_proto_rawDescGZIP(), []int{4, 1}
}

func (x *SearchInventoryItemRequest_ItemIdDate) GetInventoryItemId() int64 {
	if x != nil {
		return x.InventoryItemId
	}
	return 0
}

func (x *SearchInventoryItemRequest_ItemIdDate) GetValue() *timestamppb.Timestamp {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *SearchInventoryItemRequest_ItemIdDate) GetValue2() *timestamppb.Timestamp {
	if x != nil {
		return x.Value2
	}
	return nil
}

type SearchInventoryItemRequest_ItemIdNumber struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InventoryItemId int64  `protobuf:"varint,1,opt,name=inventoryItemId,proto3" json:"inventoryItemId,omitempty"`
	Value           string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Value2          string `protobuf:"bytes,3,opt,name=value2,proto3" json:"value2,omitempty"`
}

func (x *SearchInventoryItemRequest_ItemIdNumber) Reset() {
	*x = SearchInventoryItemRequest_ItemIdNumber{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accountinventoryitem_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchInventoryItemRequest_ItemIdNumber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchInventoryItemRequest_ItemIdNumber) ProtoMessage() {}

func (x *SearchInventoryItemRequest_ItemIdNumber) ProtoReflect() protoreflect.Message {
	mi := &file_accountinventoryitem_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchInventoryItemRequest_ItemIdNumber.ProtoReflect.Descriptor instead.
func (*SearchInventoryItemRequest_ItemIdNumber) Descriptor() ([]byte, []int) {
	return file_accountinventoryitem_service_proto_rawDescGZIP(), []int{4, 2}
}

func (x *SearchInventoryItemRequest_ItemIdNumber) GetInventoryItemId() int64 {
	if x != nil {
		return x.InventoryItemId
	}
	return 0
}

func (x *SearchInventoryItemRequest_ItemIdNumber) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *SearchInventoryItemRequest_ItemIdNumber) GetValue2() string {
	if x != nil {
		return x.Value2
	}
	return ""
}

var File_accountinventoryitem_service_proto protoreflect.FileDescriptor

var file_accountinventoryitem_service_proto_rawDesc = []byte{
	0x0a, 0x22, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x12, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x89, 0x06, 0x0a, 0x19, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f,
	0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x56, 0x61, 0x72,
	0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0d, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x4e, 0x61, 0x6d,
	0x65, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x69, 0x6d, 0x70,
	0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x49, 0x6e, 0x74, 0x36, 0x34,
	0x52, 0x0d, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12,
	0x37, 0x0a, 0x0b, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e,
	0x6b, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x52, 0x0b, 0x62, 0x72, 0x61,
	0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x65, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x52, 0x07,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x73, 0x12, 0x34, 0x0a, 0x09, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e,
	0x6b, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x6f, 0x74,
	0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x54, 0x0a, 0x14, 0x69, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x53, 0x70, 0x65, 0x63, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18,
	0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61,
	0x6e, 0x6b, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x70, 0x65, 0x63,
	0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x14, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x53, 0x70, 0x65, 0x63, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x54, 0x0a,
	0x14, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x70, 0x65, 0x63, 0x73, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x69,
	0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x53, 0x70, 0x65, 0x63, 0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x14, 0x69,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x70, 0x65, 0x63, 0x73, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x4e, 0x0a, 0x12, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x53, 0x70, 0x65, 0x63, 0x73, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x49, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x70, 0x65, 0x63, 0x73, 0x44, 0x61, 0x74, 0x65, 0x52,
	0x12, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x70, 0x65, 0x63, 0x73, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x3b, 0x0a, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x18, 0x10, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e,
	0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x68, 0x69,
	0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x64,
	0x22, 0x90, 0x03, 0x0a, 0x14, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x0d, 0x69, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x49, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0d, 0x69, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x3b, 0x0a, 0x05, 0x63, 0x68,
	0x69, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x69, 0x6d, 0x70,
	0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x49, 0x74, 0x65, 0x6d, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x12, 0x54, 0x0a, 0x14, 0x69, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x53, 0x70, 0x65, 0x63, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61,
	0x6e, 0x6b, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x70, 0x65, 0x63,
	0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x14, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x53, 0x70, 0x65, 0x63, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x54, 0x0a,
	0x14, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x70, 0x65, 0x63, 0x73, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x69,
	0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x53, 0x70, 0x65, 0x63, 0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x14, 0x69,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x70, 0x65, 0x63, 0x73, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x4e, 0x0a, 0x12, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x53, 0x70, 0x65, 0x63, 0x73, 0x44, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x49, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x70, 0x65, 0x63, 0x73, 0x44, 0x61, 0x74, 0x65, 0x52,
	0x12, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x70, 0x65, 0x63, 0x73, 0x44,
	0x61, 0x74, 0x65, 0x22, 0xd8, 0x04, 0x0a, 0x15, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a,
	0x0d, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e,
	0x6b, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x0d, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x37,
	0x0a, 0x0b, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b,
	0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0b, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x69, 0x6d,
	0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x52, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x07,
	0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x12, 0x2a, 0x0a,
	0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73,
	0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x54, 0x0a, 0x14, 0x69, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x70, 0x65, 0x63, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x70,
	0x65, 0x63, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x14, 0x69, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x53, 0x70, 0x65, 0x63, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12,
	0x54, 0x0a, 0x14, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x70, 0x65, 0x63,
	0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x53, 0x70, 0x65, 0x63, 0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x14, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x70, 0x65, 0x63, 0x73, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x4e, 0x0a, 0x12, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x53, 0x70, 0x65, 0x63, 0x73, 0x44, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x49,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x70, 0x65, 0x63, 0x73, 0x44, 0x61, 0x74,
	0x65, 0x52, 0x12, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x70, 0x65, 0x63,
	0x73, 0x44, 0x61, 0x74, 0x65, 0x12, 0x37, 0x0a, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e,
	0x6b, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x22, 0x29,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xf8, 0x04, 0x0a, 0x1a, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x57, 0x0a, 0x0c, 0x69, 0x74, 0x65, 0x6d,
	0x49, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33,
	0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x52, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x12, 0x51, 0x0a, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61,
	0x6e, 0x6b, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x44, 0x61, 0x74, 0x65, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x57, 0x0a, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x73, 0x69, 0x6d,
	0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x0c, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x1a, 0x4e, 0x0a,
	0x0c, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x28, 0x0a,
	0x0f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x9c, 0x01,
	0x0a, 0x0a, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x0f,
	0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0x1a, 0x66, 0x0a, 0x0c,
	0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x0f,
	0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x32, 0x22, 0x33, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x62,
	0x79, 0x55, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x72, 0x0a, 0x24, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x62, 0x79, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69,
	0x63, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x6c, 0x0a,
	0x22, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x62, 0x79, 0x42, 0x72,
	0x61, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x77, 0x0a, 0x1c, 0x47,
	0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x15, 0x69,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x69, 0x6d,
	0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x15, 0x69,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x32, 0x80, 0x08, 0x0a, 0x14, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x81, 0x01,
	0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x20, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61,
	0x6e, 0x6b, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1d, 0x22, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x49, 0x74, 0x65, 0x6d, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x30,
	0x01, 0x12, 0x81, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x20, 0x2e, 0x73, 0x69, 0x6d, 0x70,
	0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x69,
	0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x22, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x3a, 0x01, 0x2a, 0x30, 0x01, 0x12, 0x7b, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x23, 0x2e, 0x73, 0x69, 0x6d, 0x70,
	0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x49, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x69,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x2f, 0x67, 0x65, 0x74,
	0x30, 0x01, 0x12, 0x8c, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x62, 0x79, 0x55, 0x75, 0x69, 0x64, 0x12, 0x29, 0x2e,
	0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x62, 0x79, 0x55, 0x75, 0x69, 0x64, 0x1a, 0x21, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c,
	0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x75, 0x75, 0x69, 0x64, 0x30,
	0x01, 0x12, 0xa4, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x62, 0x79, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x69, 0x63, 0x12, 0x30, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b,
	0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x62, 0x79, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x69, 0x63, 0x1a, 0x28, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61,
	0x6e, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x30, 0x01, 0x12, 0x9e, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65,
	0x6d, 0x62, 0x79, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x2e, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c,
	0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x62, 0x79, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x1a, 0x28, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c,
	0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x76, 0x31, 0x2f,
	0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x2f, 0x67, 0x65,
	0x74, 0x2f, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x30, 0x01, 0x12, 0x8b, 0x01, 0x0a, 0x13, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x26, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x73, 0x69, 0x6d, 0x70,
	0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f, 0x76, 0x31,
	0x2f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x2f, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x30, 0x01, 0x42, 0x20, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x66,
	0x64, 0x73, 0x61, 0x70, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e,
	0x70, 0x62, 0x50, 0x01, 0x5a, 0x03, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_accountinventoryitem_service_proto_rawDescOnce sync.Once
	file_accountinventoryitem_service_proto_rawDescData = file_accountinventoryitem_service_proto_rawDesc
)

func file_accountinventoryitem_service_proto_rawDescGZIP() []byte {
	file_accountinventoryitem_service_proto_rawDescOnce.Do(func() {
		file_accountinventoryitem_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_accountinventoryitem_service_proto_rawDescData)
	})
	return file_accountinventoryitem_service_proto_rawDescData
}

var file_accountinventoryitem_service_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_accountinventoryitem_service_proto_goTypes = []interface{}{
	(*InventoryItemChildRequest)(nil),               // 0: simplebank.InventoryItemChildRequest
	(*InventoryItemRequest)(nil),                    // 1: simplebank.InventoryItemRequest
	(*InventoryItemResponse)(nil),                   // 2: simplebank.InventoryItemResponse
	(*GetInventoryItemRequest)(nil),                 // 3: simplebank.GetInventoryItemRequest
	(*SearchInventoryItemRequest)(nil),              // 4: simplebank.SearchInventoryItemRequest
	(*GetInventoryItemRequestbyUuid)(nil),           // 5: simplebank.GetInventoryItemRequestbyUuid
	(*GetListInventoryItemRequestbyGeneric)(nil),    // 6: simplebank.GetListInventoryItemRequestbyGeneric
	(*GetListInventoryItemRequestbyBrand)(nil),      // 7: simplebank.GetListInventoryItemRequestbyBrand
	(*GetListInventoryItemResponse)(nil),            // 8: simplebank.GetListInventoryItemResponse
	(*SearchInventoryItemRequest_ItemIdString)(nil), // 9: simplebank.SearchInventoryItemRequest.ItemIdString
	(*SearchInventoryItemRequest_ItemIdDate)(nil),   // 10: simplebank.SearchInventoryItemRequest.ItemIdDate
	(*SearchInventoryItemRequest_ItemIdNumber)(nil), // 11: simplebank.SearchInventoryItemRequest.ItemIdNumber
	(*NullInt64)(nil),                               // 12: simplebank.NullInt64
	(*NullString)(nil),                              // 13: simplebank.NullString
	(*InventorySpecsString)(nil),                    // 14: simplebank.InventorySpecsString
	(*InventorySpecsNumber)(nil),                    // 15: simplebank.InventorySpecsNumber
	(*InventorySpecsDate)(nil),                      // 16: simplebank.InventorySpecsDate
	(*InventoryItem)(nil),                           // 17: simplebank.InventoryItem
	(*Reference)(nil),                               // 18: simplebank.Reference
	(*Document)(nil),                                // 19: simplebank.Document
	(*timestamppb.Timestamp)(nil),                   // 20: google.protobuf.Timestamp
}
var file_accountinventoryitem_service_proto_depIdxs = []int32{
	12, // 0: simplebank.InventoryItemChildRequest.genericNameId:type_name -> simplebank.NullInt64
	12, // 1: simplebank.InventoryItemChildRequest.brandNameId:type_name -> simplebank.NullInt64
	12, // 2: simplebank.InventoryItemChildRequest.imageId:type_name -> simplebank.NullInt64
	13, // 3: simplebank.InventoryItemChildRequest.otherInfo:type_name -> simplebank.NullString
	14, // 4: simplebank.InventoryItemChildRequest.inventorySpecsString:type_name -> simplebank.InventorySpecsString
	15, // 5: simplebank.InventoryItemChildRequest.inventorySpecsNumber:type_name -> simplebank.InventorySpecsNumber
	16, // 6: simplebank.InventoryItemChildRequest.inventorySpecsDate:type_name -> simplebank.InventorySpecsDate
	0,  // 7: simplebank.InventoryItemChildRequest.child:type_name -> simplebank.InventoryItemChildRequest
	17, // 8: simplebank.InventoryItemRequest.inventoryItem:type_name -> simplebank.InventoryItem
	0,  // 9: simplebank.InventoryItemRequest.child:type_name -> simplebank.InventoryItemChildRequest
	14, // 10: simplebank.InventoryItemRequest.inventorySpecsString:type_name -> simplebank.InventorySpecsString
	15, // 11: simplebank.InventoryItemRequest.inventorySpecsNumber:type_name -> simplebank.InventorySpecsNumber
	16, // 12: simplebank.InventoryItemRequest.inventorySpecsDate:type_name -> simplebank.InventorySpecsDate
	17, // 13: simplebank.InventoryItemResponse.inventoryItem:type_name -> simplebank.InventoryItem
	18, // 14: simplebank.InventoryItemResponse.genericName:type_name -> simplebank.Reference
	18, // 15: simplebank.InventoryItemResponse.brandName:type_name -> simplebank.Reference
	18, // 16: simplebank.InventoryItemResponse.measure:type_name -> simplebank.Reference
	19, // 17: simplebank.InventoryItemResponse.image:type_name -> simplebank.Document
	14, // 18: simplebank.InventoryItemResponse.inventorySpecsString:type_name -> simplebank.InventorySpecsString
	15, // 19: simplebank.InventoryItemResponse.inventorySpecsNumber:type_name -> simplebank.InventorySpecsNumber
	16, // 20: simplebank.InventoryItemResponse.inventorySpecsDate:type_name -> simplebank.InventorySpecsDate
	2,  // 21: simplebank.InventoryItemResponse.child:type_name -> simplebank.InventoryItemResponse
	9,  // 22: simplebank.SearchInventoryItemRequest.itemIdString:type_name -> simplebank.SearchInventoryItemRequest.ItemIdString
	10, // 23: simplebank.SearchInventoryItemRequest.itemIdDate:type_name -> simplebank.SearchInventoryItemRequest.ItemIdDate
	11, // 24: simplebank.SearchInventoryItemRequest.itemIdNumber:type_name -> simplebank.SearchInventoryItemRequest.ItemIdNumber
	2,  // 25: simplebank.GetListInventoryItemResponse.inventoryItemResponse:type_name -> simplebank.InventoryItemResponse
	20, // 26: simplebank.SearchInventoryItemRequest.ItemIdDate.value:type_name -> google.protobuf.Timestamp
	20, // 27: simplebank.SearchInventoryItemRequest.ItemIdDate.value2:type_name -> google.protobuf.Timestamp
	1,  // 28: simplebank.InventoryItemService.CreateInventoryItem:input_type -> simplebank.InventoryItemRequest
	1,  // 29: simplebank.InventoryItemService.UpdateInventoryItem:input_type -> simplebank.InventoryItemRequest
	3,  // 30: simplebank.InventoryItemService.GetInventoryItem:input_type -> simplebank.GetInventoryItemRequest
	5,  // 31: simplebank.InventoryItemService.GetInventoryItembyUuid:input_type -> simplebank.GetInventoryItemRequestbyUuid
	6,  // 32: simplebank.InventoryItemService.GetListInventoryItembyGeneric:input_type -> simplebank.GetListInventoryItemRequestbyGeneric
	7,  // 33: simplebank.InventoryItemService.GetListInventoryItembyBrand:input_type -> simplebank.GetListInventoryItemRequestbyBrand
	4,  // 34: simplebank.InventoryItemService.SearchInventoryItem:input_type -> simplebank.SearchInventoryItemRequest
	2,  // 35: simplebank.InventoryItemService.CreateInventoryItem:output_type -> simplebank.InventoryItemResponse
	2,  // 36: simplebank.InventoryItemService.UpdateInventoryItem:output_type -> simplebank.InventoryItemResponse
	2,  // 37: simplebank.InventoryItemService.GetInventoryItem:output_type -> simplebank.InventoryItemResponse
	2,  // 38: simplebank.InventoryItemService.GetInventoryItembyUuid:output_type -> simplebank.InventoryItemResponse
	8,  // 39: simplebank.InventoryItemService.GetListInventoryItembyGeneric:output_type -> simplebank.GetListInventoryItemResponse
	8,  // 40: simplebank.InventoryItemService.GetListInventoryItembyBrand:output_type -> simplebank.GetListInventoryItemResponse
	8,  // 41: simplebank.InventoryItemService.SearchInventoryItem:output_type -> simplebank.GetListInventoryItemResponse
	35, // [35:42] is the sub-list for method output_type
	28, // [28:35] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_accountinventoryitem_service_proto_init() }
func file_accountinventoryitem_service_proto_init() {
	if File_accountinventoryitem_service_proto != nil {
		return
	}
	file_type_message_proto_init()
	file_reference_message_proto_init()
	file_accountinventory_message_proto_init()
	file_document_message_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_accountinventoryitem_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InventoryItemChildRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accountinventoryitem_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InventoryItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accountinventoryitem_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InventoryItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accountinventoryitem_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInventoryItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accountinventoryitem_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchInventoryItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accountinventoryitem_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInventoryItemRequestbyUuid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accountinventoryitem_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListInventoryItemRequestbyGeneric); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accountinventoryitem_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListInventoryItemRequestbyBrand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accountinventoryitem_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListInventoryItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accountinventoryitem_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchInventoryItemRequest_ItemIdString); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accountinventoryitem_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchInventoryItemRequest_ItemIdDate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accountinventoryitem_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchInventoryItemRequest_ItemIdNumber); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_accountinventoryitem_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_accountinventoryitem_service_proto_goTypes,
		DependencyIndexes: file_accountinventoryitem_service_proto_depIdxs,
		MessageInfos:      file_accountinventoryitem_service_proto_msgTypes,
	}.Build()
	File_accountinventoryitem_service_proto = out.File
	file_accountinventoryitem_service_proto_rawDesc = nil
	file_accountinventoryitem_service_proto_goTypes = nil
	file_accountinventoryitem_service_proto_depIdxs = nil
}
