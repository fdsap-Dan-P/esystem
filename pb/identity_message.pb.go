// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.12
// source: identity_message.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddressList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid        string      `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Iiid        int64       `protobuf:"varint,2,opt,name=iiid,proto3" json:"iiid,omitempty"`
	Series      int32       `protobuf:"varint,3,opt,name=series,proto3" json:"series,omitempty"`
	Detail      string      `protobuf:"bytes,4,opt,name=detail,proto3" json:"detail,omitempty"`
	Url         string      `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	TypeId      int64       `protobuf:"varint,6,opt,name=typeId,proto3" json:"typeId,omitempty"`
	GeographyId int64       `protobuf:"varint,7,opt,name=geographyId,proto3" json:"geographyId,omitempty"`
	OtherInfo   *NullString `protobuf:"bytes,8,opt,name=otherInfo,proto3" json:"otherInfo,omitempty"`
}

func (x *AddressList) Reset() {
	*x = AddressList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressList) ProtoMessage() {}

func (x *AddressList) ProtoReflect() protoreflect.Message {
	mi := &file_identity_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressList.ProtoReflect.Descriptor instead.
func (*AddressList) Descriptor() ([]byte, []int) {
	return file_identity_message_proto_rawDescGZIP(), []int{0}
}

func (x *AddressList) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *AddressList) GetIiid() int64 {
	if x != nil {
		return x.Iiid
	}
	return 0
}

func (x *AddressList) GetSeries() int32 {
	if x != nil {
		return x.Series
	}
	return 0
}

func (x *AddressList) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

func (x *AddressList) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *AddressList) GetTypeId() int64 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *AddressList) GetGeographyId() int64 {
	if x != nil {
		return x.GeographyId
	}
	return 0
}

func (x *AddressList) GetOtherInfo() *NullString {
	if x != nil {
		return x.OtherInfo
	}
	return nil
}

type Contact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid      string      `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Iiid      int64       `protobuf:"varint,2,opt,name=iiid,proto3" json:"iiid,omitempty"`
	Series    int32       `protobuf:"varint,3,opt,name=series,proto3" json:"series,omitempty"`
	Contact   string      `protobuf:"bytes,4,opt,name=contact,proto3" json:"contact,omitempty"`
	TypeId    int64       `protobuf:"varint,5,opt,name=typeId,proto3" json:"typeId,omitempty"`
	OtherInfo *NullString `protobuf:"bytes,6,opt,name=otherInfo,proto3" json:"otherInfo,omitempty"`
}

func (x *Contact) Reset() {
	*x = Contact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contact) ProtoMessage() {}

func (x *Contact) ProtoReflect() protoreflect.Message {
	mi := &file_identity_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contact.ProtoReflect.Descriptor instead.
func (*Contact) Descriptor() ([]byte, []int) {
	return file_identity_message_proto_rawDescGZIP(), []int{1}
}

func (x *Contact) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Contact) GetIiid() int64 {
	if x != nil {
		return x.Iiid
	}
	return 0
}

func (x *Contact) GetSeries() int32 {
	if x != nil {
		return x.Series
	}
	return 0
}

func (x *Contact) GetContact() string {
	if x != nil {
		return x.Contact
	}
	return ""
}

func (x *Contact) GetTypeId() int64 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *Contact) GetOtherInfo() *NullString {
	if x != nil {
		return x.OtherInfo
	}
	return nil
}

type Educational struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid          string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Iiid          int64                  `protobuf:"varint,2,opt,name=iiid,proto3" json:"iiid,omitempty"`
	Series        int32                  `protobuf:"varint,3,opt,name=series,proto3" json:"series,omitempty"`
	LevelId       int64                  `protobuf:"varint,4,opt,name=levelId,proto3" json:"levelId,omitempty"`
	CourseTypeId  int64                  `protobuf:"varint,5,opt,name=courseTypeId,proto3" json:"courseTypeId,omitempty"`
	CourseId      int64                  `protobuf:"varint,6,opt,name=courseId,proto3" json:"courseId,omitempty"`
	Course        string                 `protobuf:"bytes,7,opt,name=course,proto3" json:"course,omitempty"`
	School        string                 `protobuf:"bytes,8,opt,name=school,proto3" json:"school,omitempty"`
	AddressDetail string                 `protobuf:"bytes,9,opt,name=addressDetail,proto3" json:"addressDetail,omitempty"`
	AddressUrl    string                 `protobuf:"bytes,10,opt,name=addressUrl,proto3" json:"addressUrl,omitempty"`
	GeographyId   int64                  `protobuf:"varint,11,opt,name=geographyId,proto3" json:"geographyId,omitempty"`
	StartDate     *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate       *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=endDate,proto3" json:"endDate,omitempty"`
	PeriodDate    string                 `protobuf:"bytes,14,opt,name=periodDate,proto3" json:"periodDate,omitempty"`
	Completed     bool                   `protobuf:"varint,15,opt,name=completed,proto3" json:"completed,omitempty"`
	OtherInfo     *NullString            `protobuf:"bytes,16,opt,name=otherInfo,proto3" json:"otherInfo,omitempty"`
}

func (x *Educational) Reset() {
	*x = Educational{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Educational) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Educational) ProtoMessage() {}

func (x *Educational) ProtoReflect() protoreflect.Message {
	mi := &file_identity_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Educational.ProtoReflect.Descriptor instead.
func (*Educational) Descriptor() ([]byte, []int) {
	return file_identity_message_proto_rawDescGZIP(), []int{2}
}

func (x *Educational) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Educational) GetIiid() int64 {
	if x != nil {
		return x.Iiid
	}
	return 0
}

func (x *Educational) GetSeries() int32 {
	if x != nil {
		return x.Series
	}
	return 0
}

func (x *Educational) GetLevelId() int64 {
	if x != nil {
		return x.LevelId
	}
	return 0
}

func (x *Educational) GetCourseTypeId() int64 {
	if x != nil {
		return x.CourseTypeId
	}
	return 0
}

func (x *Educational) GetCourseId() int64 {
	if x != nil {
		return x.CourseId
	}
	return 0
}

func (x *Educational) GetCourse() string {
	if x != nil {
		return x.Course
	}
	return ""
}

func (x *Educational) GetSchool() string {
	if x != nil {
		return x.School
	}
	return ""
}

func (x *Educational) GetAddressDetail() string {
	if x != nil {
		return x.AddressDetail
	}
	return ""
}

func (x *Educational) GetAddressUrl() string {
	if x != nil {
		return x.AddressUrl
	}
	return ""
}

func (x *Educational) GetGeographyId() int64 {
	if x != nil {
		return x.GeographyId
	}
	return 0
}

func (x *Educational) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *Educational) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *Educational) GetPeriodDate() string {
	if x != nil {
		return x.PeriodDate
	}
	return ""
}

func (x *Educational) GetCompleted() bool {
	if x != nil {
		return x.Completed
	}
	return false
}

func (x *Educational) GetOtherInfo() *NullString {
	if x != nil {
		return x.OtherInfo
	}
	return nil
}

type Employee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          int64                  `protobuf:"varint,1,opt,name=iD,proto3" json:"iD,omitempty"`
	Uuid        string                 `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Iiid        int64                  `protobuf:"varint,3,opt,name=iiid,proto3" json:"iiid,omitempty"`
	CentralId   int64                  `protobuf:"varint,4,opt,name=centralId,proto3" json:"centralId,omitempty"`
	EmployeeNo  string                 `protobuf:"bytes,5,opt,name=employeeNo,proto3" json:"employeeNo,omitempty"`
	BasicPay    float64                `protobuf:"fixed64,6,opt,name=basicPay,proto3" json:"basicPay,omitempty"`
	DateHired   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=dateHired,proto3" json:"dateHired,omitempty"`
	DateRegular *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=dateRegular,proto3" json:"dateRegular,omitempty"`
	JobGrade    int32                  `protobuf:"varint,9,opt,name=jobGrade,proto3" json:"jobGrade,omitempty"`
	JobStep     int32                  `protobuf:"varint,10,opt,name=jobStep,proto3" json:"jobStep,omitempty"`
	LevelId     int64                  `protobuf:"varint,11,opt,name=levelId,proto3" json:"levelId,omitempty"`
	OfficeId    int64                  `protobuf:"varint,12,opt,name=officeId,proto3" json:"officeId,omitempty"`
	PositionId  int64                  `protobuf:"varint,13,opt,name=positionId,proto3" json:"positionId,omitempty"`
	StatusId    int64                  `protobuf:"varint,14,opt,name=statusId,proto3" json:"statusId,omitempty"`
	SuperiorId  int64                  `protobuf:"varint,15,opt,name=superiorId,proto3" json:"superiorId,omitempty"`
	TypeId      int64                  `protobuf:"varint,16,opt,name=typeId,proto3" json:"typeId,omitempty"`
	OtherInfo   *NullString            `protobuf:"bytes,17,opt,name=otherInfo,proto3" json:"otherInfo,omitempty"`
}

func (x *Employee) Reset() {
	*x = Employee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Employee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Employee) ProtoMessage() {}

func (x *Employee) ProtoReflect() protoreflect.Message {
	mi := &file_identity_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Employee.ProtoReflect.Descriptor instead.
func (*Employee) Descriptor() ([]byte, []int) {
	return file_identity_message_proto_rawDescGZIP(), []int{3}
}

func (x *Employee) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Employee) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Employee) GetIiid() int64 {
	if x != nil {
		return x.Iiid
	}
	return 0
}

func (x *Employee) GetCentralId() int64 {
	if x != nil {
		return x.CentralId
	}
	return 0
}

func (x *Employee) GetEmployeeNo() string {
	if x != nil {
		return x.EmployeeNo
	}
	return ""
}

func (x *Employee) GetBasicPay() float64 {
	if x != nil {
		return x.BasicPay
	}
	return 0
}

func (x *Employee) GetDateHired() *timestamppb.Timestamp {
	if x != nil {
		return x.DateHired
	}
	return nil
}

func (x *Employee) GetDateRegular() *timestamppb.Timestamp {
	if x != nil {
		return x.DateRegular
	}
	return nil
}

func (x *Employee) GetJobGrade() int32 {
	if x != nil {
		return x.JobGrade
	}
	return 0
}

func (x *Employee) GetJobStep() int32 {
	if x != nil {
		return x.JobStep
	}
	return 0
}

func (x *Employee) GetLevelId() int64 {
	if x != nil {
		return x.LevelId
	}
	return 0
}

func (x *Employee) GetOfficeId() int64 {
	if x != nil {
		return x.OfficeId
	}
	return 0
}

func (x *Employee) GetPositionId() int64 {
	if x != nil {
		return x.PositionId
	}
	return 0
}

func (x *Employee) GetStatusId() int64 {
	if x != nil {
		return x.StatusId
	}
	return 0
}

func (x *Employee) GetSuperiorId() int64 {
	if x != nil {
		return x.SuperiorId
	}
	return 0
}

func (x *Employee) GetTypeId() int64 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *Employee) GetOtherInfo() *NullString {
	if x != nil {
		return x.OtherInfo
	}
	return nil
}

type Employment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID            int64                  `protobuf:"varint,1,opt,name=iD,proto3" json:"iD,omitempty"`
	Uuid          string                 `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Iiid          int64                  `protobuf:"varint,3,opt,name=iiid,proto3" json:"iiid,omitempty"`
	Series        int32                  `protobuf:"varint,4,opt,name=series,proto3" json:"series,omitempty"`
	Company       string                 `protobuf:"bytes,5,opt,name=company,proto3" json:"company,omitempty"`
	Title         string                 `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	AddressDetail string                 `protobuf:"bytes,7,opt,name=addressDetail,proto3" json:"addressDetail,omitempty"`
	AddressUrl    string                 `protobuf:"bytes,8,opt,name=addressUrl,proto3" json:"addressUrl,omitempty"`
	GeographyId   int64                  `protobuf:"varint,9,opt,name=geographyId,proto3" json:"geographyId,omitempty"`
	StartDate     *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate       *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=endDate,proto3" json:"endDate,omitempty"`
	PeriodDate    string                 `protobuf:"bytes,12,opt,name=periodDate,proto3" json:"periodDate,omitempty"`
	Remarks       string                 `protobuf:"bytes,13,opt,name=remarks,proto3" json:"remarks,omitempty"`
	OtherInfo     *NullString            `protobuf:"bytes,14,opt,name=otherInfo,proto3" json:"otherInfo,omitempty"`
}

func (x *Employment) Reset() {
	*x = Employment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Employment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Employment) ProtoMessage() {}

func (x *Employment) ProtoReflect() protoreflect.Message {
	mi := &file_identity_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Employment.ProtoReflect.Descriptor instead.
func (*Employment) Descriptor() ([]byte, []int) {
	return file_identity_message_proto_rawDescGZIP(), []int{4}
}

func (x *Employment) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Employment) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Employment) GetIiid() int64 {
	if x != nil {
		return x.Iiid
	}
	return 0
}

func (x *Employment) GetSeries() int32 {
	if x != nil {
		return x.Series
	}
	return 0
}

func (x *Employment) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *Employment) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Employment) GetAddressDetail() string {
	if x != nil {
		return x.AddressDetail
	}
	return ""
}

func (x *Employment) GetAddressUrl() string {
	if x != nil {
		return x.AddressUrl
	}
	return ""
}

func (x *Employment) GetGeographyId() int64 {
	if x != nil {
		return x.GeographyId
	}
	return 0
}

func (x *Employment) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *Employment) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *Employment) GetPeriodDate() string {
	if x != nil {
		return x.PeriodDate
	}
	return ""
}

func (x *Employment) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *Employment) GetOtherInfo() *NullString {
	if x != nil {
		return x.OtherInfo
	}
	return nil
}

type IdentityInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID               int64                  `protobuf:"varint,1,opt,name=iD,proto3" json:"iD,omitempty"`
	Uuid             string                 `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Isperson         bool                   `protobuf:"varint,3,opt,name=isperson,proto3" json:"isperson,omitempty"`
	TitleId          int64                  `protobuf:"varint,4,opt,name=titleId,proto3" json:"titleId,omitempty"`
	NickName         string                 `protobuf:"bytes,5,opt,name=nickName,proto3" json:"nickName,omitempty"`
	LastName         string                 `protobuf:"bytes,6,opt,name=lastName,proto3" json:"lastName,omitempty"`
	FirstName        string                 `protobuf:"bytes,7,opt,name=firstName,proto3" json:"firstName,omitempty"`
	MiddleName       string                 `protobuf:"bytes,8,opt,name=middleName,proto3" json:"middleName,omitempty"`
	MotherMaidenName string                 `protobuf:"bytes,9,opt,name=motherMaidenName,proto3" json:"motherMaidenName,omitempty"`
	Birthday         *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=birthday,proto3" json:"birthday,omitempty"`
	Sex              bool                   `protobuf:"varint,11,opt,name=sex,proto3" json:"sex,omitempty"`
	GenderId         int64                  `protobuf:"varint,12,opt,name=genderId,proto3" json:"genderId,omitempty"`
	CivilStatusId    int64                  `protobuf:"varint,13,opt,name=civilStatusId,proto3" json:"civilStatusId,omitempty"`
	BirthPlaceId     int64                  `protobuf:"varint,14,opt,name=birthPlaceId,proto3" json:"birthPlaceId,omitempty"`
	ContactId        int64                  `protobuf:"varint,15,opt,name=contactId,proto3" json:"contactId,omitempty"`
	IdentityMapId    int64                  `protobuf:"varint,16,opt,name=identityMapId,proto3" json:"identityMapId,omitempty"`
	AlternateId      string                 `protobuf:"bytes,17,opt,name=alternateId,proto3" json:"alternateId,omitempty"`
	Phone            string                 `protobuf:"bytes,18,opt,name=phone,proto3" json:"phone,omitempty"`
	Email            string                 `protobuf:"bytes,19,opt,name=email,proto3" json:"email,omitempty"`
	OtherInfo        *NullString            `protobuf:"bytes,20,opt,name=otherInfo,proto3" json:"otherInfo,omitempty"`
}

func (x *IdentityInfo) Reset() {
	*x = IdentityInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdentityInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentityInfo) ProtoMessage() {}

func (x *IdentityInfo) ProtoReflect() protoreflect.Message {
	mi := &file_identity_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentityInfo.ProtoReflect.Descriptor instead.
func (*IdentityInfo) Descriptor() ([]byte, []int) {
	return file_identity_message_proto_rawDescGZIP(), []int{5}
}

func (x *IdentityInfo) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *IdentityInfo) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *IdentityInfo) GetIsperson() bool {
	if x != nil {
		return x.Isperson
	}
	return false
}

func (x *IdentityInfo) GetTitleId() int64 {
	if x != nil {
		return x.TitleId
	}
	return 0
}

func (x *IdentityInfo) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *IdentityInfo) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *IdentityInfo) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *IdentityInfo) GetMiddleName() string {
	if x != nil {
		return x.MiddleName
	}
	return ""
}

func (x *IdentityInfo) GetMotherMaidenName() string {
	if x != nil {
		return x.MotherMaidenName
	}
	return ""
}

func (x *IdentityInfo) GetBirthday() *timestamppb.Timestamp {
	if x != nil {
		return x.Birthday
	}
	return nil
}

func (x *IdentityInfo) GetSex() bool {
	if x != nil {
		return x.Sex
	}
	return false
}

func (x *IdentityInfo) GetGenderId() int64 {
	if x != nil {
		return x.GenderId
	}
	return 0
}

func (x *IdentityInfo) GetCivilStatusId() int64 {
	if x != nil {
		return x.CivilStatusId
	}
	return 0
}

func (x *IdentityInfo) GetBirthPlaceId() int64 {
	if x != nil {
		return x.BirthPlaceId
	}
	return 0
}

func (x *IdentityInfo) GetContactId() int64 {
	if x != nil {
		return x.ContactId
	}
	return 0
}

func (x *IdentityInfo) GetIdentityMapId() int64 {
	if x != nil {
		return x.IdentityMapId
	}
	return 0
}

func (x *IdentityInfo) GetAlternateId() string {
	if x != nil {
		return x.AlternateId
	}
	return ""
}

func (x *IdentityInfo) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *IdentityInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *IdentityInfo) GetOtherInfo() *NullString {
	if x != nil {
		return x.OtherInfo
	}
	return nil
}

type Ids struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid             string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Iiid             int64                  `protobuf:"varint,2,opt,name=iiid,proto3" json:"iiid,omitempty"`
	Series           int32                  `protobuf:"varint,3,opt,name=series,proto3" json:"series,omitempty"`
	ID               string                 `protobuf:"bytes,4,opt,name=iD,proto3" json:"iD,omitempty"`
	RegistrationDate *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=registrationDate,proto3" json:"registrationDate,omitempty"`
	ValidityDate     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=validityDate,proto3" json:"validityDate,omitempty"`
	TypeId           int64                  `protobuf:"varint,7,opt,name=typeId,proto3" json:"typeId,omitempty"`
	OtherInfo        *NullString            `protobuf:"bytes,8,opt,name=otherInfo,proto3" json:"otherInfo,omitempty"`
}

func (x *Ids) Reset() {
	*x = Ids{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ids) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ids) ProtoMessage() {}

func (x *Ids) ProtoReflect() protoreflect.Message {
	mi := &file_identity_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ids.ProtoReflect.Descriptor instead.
func (*Ids) Descriptor() ([]byte, []int) {
	return file_identity_message_proto_rawDescGZIP(), []int{6}
}

func (x *Ids) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Ids) GetIiid() int64 {
	if x != nil {
		return x.Iiid
	}
	return 0
}

func (x *Ids) GetSeries() int32 {
	if x != nil {
		return x.Series
	}
	return 0
}

func (x *Ids) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Ids) GetRegistrationDate() *timestamppb.Timestamp {
	if x != nil {
		return x.RegistrationDate
	}
	return nil
}

func (x *Ids) GetValidityDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ValidityDate
	}
	return nil
}

func (x *Ids) GetTypeId() int64 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *Ids) GetOtherInfo() *NullString {
	if x != nil {
		return x.OtherInfo
	}
	return nil
}

type IncomeSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid      string      `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Iiid      int64       `protobuf:"varint,2,opt,name=iiid,proto3" json:"iiid,omitempty"`
	Series    int32       `protobuf:"varint,3,opt,name=series,proto3" json:"series,omitempty"`
	Source    string      `protobuf:"bytes,4,opt,name=source,proto3" json:"source,omitempty"`
	TypeId    int64       `protobuf:"varint,5,opt,name=typeId,proto3" json:"typeId,omitempty"`
	MinIncome string      `protobuf:"bytes,6,opt,name=minIncome,proto3" json:"minIncome,omitempty"`
	MaxIncome string      `protobuf:"bytes,7,opt,name=maxIncome,proto3" json:"maxIncome,omitempty"`
	Remarks   string      `protobuf:"bytes,8,opt,name=remarks,proto3" json:"remarks,omitempty"`
	OtherInfo *NullString `protobuf:"bytes,9,opt,name=otherInfo,proto3" json:"otherInfo,omitempty"`
}

func (x *IncomeSource) Reset() {
	*x = IncomeSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncomeSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncomeSource) ProtoMessage() {}

func (x *IncomeSource) ProtoReflect() protoreflect.Message {
	mi := &file_identity_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncomeSource.ProtoReflect.Descriptor instead.
func (*IncomeSource) Descriptor() ([]byte, []int) {
	return file_identity_message_proto_rawDescGZIP(), []int{7}
}

func (x *IncomeSource) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *IncomeSource) GetIiid() int64 {
	if x != nil {
		return x.Iiid
	}
	return 0
}

func (x *IncomeSource) GetSeries() int32 {
	if x != nil {
		return x.Series
	}
	return 0
}

func (x *IncomeSource) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *IncomeSource) GetTypeId() int64 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *IncomeSource) GetMinIncome() string {
	if x != nil {
		return x.MinIncome
	}
	return ""
}

func (x *IncomeSource) GetMaxIncome() string {
	if x != nil {
		return x.MaxIncome
	}
	return ""
}

func (x *IncomeSource) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *IncomeSource) GetOtherInfo() *NullString {
	if x != nil {
		return x.OtherInfo
	}
	return nil
}

type Office struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID             int64                  `protobuf:"varint,1,opt,name=iD,proto3" json:"iD,omitempty"`
	Uuid           string                 `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Code           string                 `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	ShortName      string                 `protobuf:"bytes,4,opt,name=shortName,proto3" json:"shortName,omitempty"`
	OfficeName     string                 `protobuf:"bytes,5,opt,name=officeName,proto3" json:"officeName,omitempty"`
	DateStablished *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=dateStablished,proto3" json:"dateStablished,omitempty"`
	TypeId         int64                  `protobuf:"varint,7,opt,name=typeId,proto3" json:"typeId,omitempty"`
	OfficerId      int64                  `protobuf:"varint,8,opt,name=officerId,proto3" json:"officerId,omitempty"`
	ParentId       int64                  `protobuf:"varint,9,opt,name=parentId,proto3" json:"parentId,omitempty"`
	AlternateId    int64                  `protobuf:"varint,10,opt,name=alternateId,proto3" json:"alternateId,omitempty"`
	AddressDetail  string                 `protobuf:"bytes,11,opt,name=addressDetail,proto3" json:"addressDetail,omitempty"`
	AddressUrl     string                 `protobuf:"bytes,12,opt,name=addressUrl,proto3" json:"addressUrl,omitempty"`
	GeographyId    int64                  `protobuf:"varint,13,opt,name=geographyId,proto3" json:"geographyId,omitempty"`
	CidSequence    int64                  `protobuf:"varint,14,opt,name=cidSequence,proto3" json:"cidSequence,omitempty"`
	OtherInfo      *NullString            `protobuf:"bytes,15,opt,name=otherInfo,proto3" json:"otherInfo,omitempty"`
}

func (x *Office) Reset() {
	*x = Office{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Office) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Office) ProtoMessage() {}

func (x *Office) ProtoReflect() protoreflect.Message {
	mi := &file_identity_message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Office.ProtoReflect.Descriptor instead.
func (*Office) Descriptor() ([]byte, []int) {
	return file_identity_message_proto_rawDescGZIP(), []int{8}
}

func (x *Office) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Office) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Office) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Office) GetShortName() string {
	if x != nil {
		return x.ShortName
	}
	return ""
}

func (x *Office) GetOfficeName() string {
	if x != nil {
		return x.OfficeName
	}
	return ""
}

func (x *Office) GetDateStablished() *timestamppb.Timestamp {
	if x != nil {
		return x.DateStablished
	}
	return nil
}

func (x *Office) GetTypeId() int64 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *Office) GetOfficerId() int64 {
	if x != nil {
		return x.OfficerId
	}
	return 0
}

func (x *Office) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *Office) GetAlternateId() int64 {
	if x != nil {
		return x.AlternateId
	}
	return 0
}

func (x *Office) GetAddressDetail() string {
	if x != nil {
		return x.AddressDetail
	}
	return ""
}

func (x *Office) GetAddressUrl() string {
	if x != nil {
		return x.AddressUrl
	}
	return ""
}

func (x *Office) GetGeographyId() int64 {
	if x != nil {
		return x.GeographyId
	}
	return 0
}

func (x *Office) GetCidSequence() int64 {
	if x != nil {
		return x.CidSequence
	}
	return 0
}

func (x *Office) GetOtherInfo() *NullString {
	if x != nil {
		return x.OtherInfo
	}
	return nil
}

type PersonalInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID             int64                  `protobuf:"varint,1,opt,name=iD,proto3" json:"iD,omitempty"`
	Uuid           string                 `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Isadopted      bool                   `protobuf:"varint,3,opt,name=isadopted,proto3" json:"isadopted,omitempty"`
	MarriageDate   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=marriageDate,proto3" json:"marriageDate,omitempty"`
	KnownLanguage  string                 `protobuf:"bytes,5,opt,name=knownLanguage,proto3" json:"knownLanguage,omitempty"`
	IndustryId     int64                  `protobuf:"varint,6,opt,name=industryId,proto3" json:"industryId,omitempty"`
	NationalityId  int64                  `protobuf:"varint,7,opt,name=nationalityId,proto3" json:"nationalityId,omitempty"`
	OccupationId   int64                  `protobuf:"varint,8,opt,name=occupationId,proto3" json:"occupationId,omitempty"`
	ReligionId     int64                  `protobuf:"varint,9,opt,name=religionId,proto3" json:"religionId,omitempty"`
	SectorId       int64                  `protobuf:"varint,10,opt,name=sectorId,proto3" json:"sectorId,omitempty"`
	SourceIncomeId int64                  `protobuf:"varint,11,opt,name=sourceIncomeId,proto3" json:"sourceIncomeId,omitempty"`
	DisabilityId   int64                  `protobuf:"varint,12,opt,name=disabilityId,proto3" json:"disabilityId,omitempty"`
	OtherInfo      *NullString            `protobuf:"bytes,13,opt,name=otherInfo,proto3" json:"otherInfo,omitempty"`
}

func (x *PersonalInfo) Reset() {
	*x = PersonalInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_message_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PersonalInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PersonalInfo) ProtoMessage() {}

func (x *PersonalInfo) ProtoReflect() protoreflect.Message {
	mi := &file_identity_message_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PersonalInfo.ProtoReflect.Descriptor instead.
func (*PersonalInfo) Descriptor() ([]byte, []int) {
	return file_identity_message_proto_rawDescGZIP(), []int{9}
}

func (x *PersonalInfo) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *PersonalInfo) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *PersonalInfo) GetIsadopted() bool {
	if x != nil {
		return x.Isadopted
	}
	return false
}

func (x *PersonalInfo) GetMarriageDate() *timestamppb.Timestamp {
	if x != nil {
		return x.MarriageDate
	}
	return nil
}

func (x *PersonalInfo) GetKnownLanguage() string {
	if x != nil {
		return x.KnownLanguage
	}
	return ""
}

func (x *PersonalInfo) GetIndustryId() int64 {
	if x != nil {
		return x.IndustryId
	}
	return 0
}

func (x *PersonalInfo) GetNationalityId() int64 {
	if x != nil {
		return x.NationalityId
	}
	return 0
}

func (x *PersonalInfo) GetOccupationId() int64 {
	if x != nil {
		return x.OccupationId
	}
	return 0
}

func (x *PersonalInfo) GetReligionId() int64 {
	if x != nil {
		return x.ReligionId
	}
	return 0
}

func (x *PersonalInfo) GetSectorId() int64 {
	if x != nil {
		return x.SectorId
	}
	return 0
}

func (x *PersonalInfo) GetSourceIncomeId() int64 {
	if x != nil {
		return x.SourceIncomeId
	}
	return 0
}

func (x *PersonalInfo) GetDisabilityId() int64 {
	if x != nil {
		return x.DisabilityId
	}
	return 0
}

func (x *PersonalInfo) GetOtherInfo() *NullString {
	if x != nil {
		return x.OtherInfo
	}
	return nil
}

type Relation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid         string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Iiid         int64                  `protobuf:"varint,2,opt,name=iiid,proto3" json:"iiid,omitempty"`
	Series       int32                  `protobuf:"varint,3,opt,name=series,proto3" json:"series,omitempty"`
	RelationIiid int64                  `protobuf:"varint,4,opt,name=relationIiid,proto3" json:"relationIiid,omitempty"`
	TypeId       int64                  `protobuf:"varint,5,opt,name=typeId,proto3" json:"typeId,omitempty"`
	RelationDate *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=relationDate,proto3" json:"relationDate,omitempty"`
	OtherInfo    *NullString            `protobuf:"bytes,7,opt,name=otherInfo,proto3" json:"otherInfo,omitempty"`
}

func (x *Relation) Reset() {
	*x = Relation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_identity_message_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Relation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Relation) ProtoMessage() {}

func (x *Relation) ProtoReflect() protoreflect.Message {
	mi := &file_identity_message_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Relation.ProtoReflect.Descriptor instead.
func (*Relation) Descriptor() ([]byte, []int) {
	return file_identity_message_proto_rawDescGZIP(), []int{10}
}

func (x *Relation) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Relation) GetIiid() int64 {
	if x != nil {
		return x.Iiid
	}
	return 0
}

func (x *Relation) GetSeries() int32 {
	if x != nil {
		return x.Series
	}
	return 0
}

func (x *Relation) GetRelationIiid() int64 {
	if x != nil {
		return x.RelationIiid
	}
	return 0
}

func (x *Relation) GetTypeId() int64 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *Relation) GetRelationDate() *timestamppb.Timestamp {
	if x != nil {
		return x.RelationDate
	}
	return nil
}

func (x *Relation) GetOtherInfo() *NullString {
	if x != nil {
		return x.OtherInfo
	}
	return nil
}

var File_identity_message_proto protoreflect.FileDescriptor

var file_identity_message_proto_rawDesc = []byte{
	0x0a, 0x16, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x62, 0x61, 0x6e, 0x6b, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe7, 0x01, 0x0a, 0x0b, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x69, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x69, 0x69, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x67,
	0x65, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x67, 0x65, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x49, 0x64, 0x12, 0x34, 0x0a,
	0x09, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x4e, 0x75,
	0x6c, 0x6c, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0xb1, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x69, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x69, 0x69, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x79, 0x70,
	0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49,
	0x64, 0x12, 0x34, 0x0a, 0x09, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e,
	0x6b, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x6f, 0x74,
	0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xa3, 0x04, 0x0a, 0x0b, 0x45, 0x64, 0x75, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x69,
	0x69, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x69, 0x69, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x49,
	0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x68,
	0x6f, 0x6f, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x68, 0x6f, 0x6f,
	0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x55, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x65, 0x6f, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x79, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x67, 0x65,
	0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x09, 0x6f, 0x74, 0x68, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x69, 0x6d,
	0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x52, 0x09, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xaa, 0x04,
	0x0a, 0x08, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x69, 0x69, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x69, 0x69,
	0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x49, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6c, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x4e, 0x6f, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x4e, 0x6f,
	0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x69, 0x63, 0x50, 0x61, 0x79, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x08, 0x62, 0x61, 0x73, 0x69, 0x63, 0x50, 0x61, 0x79, 0x12, 0x38, 0x0a, 0x09,
	0x64, 0x61, 0x74, 0x65, 0x48, 0x69, 0x72, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x61, 0x74,
	0x65, 0x48, 0x69, 0x72, 0x65, 0x64, 0x12, 0x3c, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x67, 0x75, 0x6c, 0x61, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67,
	0x75, 0x6c, 0x61, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6a, 0x6f, 0x62, 0x47, 0x72, 0x61, 0x64, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6a, 0x6f, 0x62, 0x47, 0x72, 0x61, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6a, 0x6f, 0x62, 0x53, 0x74, 0x65, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x53, 0x74, 0x65, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x73, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x79,
	0x70, 0x65, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x09, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52,
	0x09, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xd4, 0x03, 0x0a, 0x0a, 0x45,
	0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x69, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x69, 0x69, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x1e, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x55, 0x72, 0x6c, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x55, 0x72, 0x6c, 0x12,
	0x20, 0x0a, 0x0b, 0x67, 0x65, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x49, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x67, 0x65, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x49,
	0x64, 0x12, 0x38, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x65,
	0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x6f,
	0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x4e, 0x75, 0x6c, 0x6c,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x82, 0x05, 0x0a, 0x0c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x4d, 0x61, 0x69, 0x64,
	0x65, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6d, 0x6f,
	0x74, 0x68, 0x65, 0x72, 0x4d, 0x61, 0x69, 0x64, 0x65, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x36,
	0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x62, 0x69,
	0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x67, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x69, 0x76, 0x69, 0x6c, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x69, 0x76,
	0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x69,
	0x72, 0x74, 0x68, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x62, 0x69, 0x72, 0x74, 0x68, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x70, 0x49, 0x64, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x70,
	0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x65, 0x49,
	0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x74, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x34, 0x0a, 0x09, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b,
	0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x6f, 0x74, 0x68,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xab, 0x02, 0x0a, 0x03, 0x49, 0x64, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x69, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x69, 0x69, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x44, 0x12, 0x46,
	0x0a, 0x10, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x10, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x0c, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69,
	0x74, 0x79, 0x44, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x69,
	0x74, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x34,
	0x0a, 0x09, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x4e,
	0x75, 0x6c, 0x6c, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x6f, 0x74, 0x68, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x8a, 0x02, 0x0a, 0x0c, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x69, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x69, 0x69, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74,
	0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x49, 0x6e, 0x63, 0x6f,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x49, 0x6e, 0x63,
	0x6f, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x49, 0x6e, 0x63, 0x6f, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x6f,
	0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x4e, 0x75, 0x6c, 0x6c,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0xf6, 0x03, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x44, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x42, 0x0a, 0x0e, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x72, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x6c, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61,
	0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x55, 0x72, 0x6c, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x55, 0x72, 0x6c,
	0x12, 0x20, 0x0a, 0x0b, 0x67, 0x65, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79, 0x49, 0x64, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x67, 0x65, 0x6f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x79,
	0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x69, 0x64, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x69, 0x64, 0x53, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x09, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52,
	0x09, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xde, 0x03, 0x0a, 0x0c, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x69, 0x73, 0x61, 0x64, 0x6f, 0x70, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x61, 0x64, 0x6f, 0x70, 0x74, 0x65, 0x64, 0x12, 0x3e, 0x0a,
	0x0c, 0x6d, 0x61, 0x72, 0x72, 0x69, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0c, 0x6d, 0x61, 0x72, 0x72, 0x69, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x4c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x49,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72,
	0x79, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x63, 0x63,
	0x75, 0x70, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x72, 0x65, 0x6c, 0x69, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x72, 0x65, 0x6c, 0x69, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x73, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x73, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x49,
	0x64, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x09, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c,
	0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x52, 0x09, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xfc, 0x01, 0x0a, 0x08,
	0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x69, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x69, 0x69, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x69, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x69, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x79,
	0x70, 0x65, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x09, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52,
	0x09, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x20, 0x0a, 0x17, 0x63, 0x6f,
	0x6d, 0x2e, 0x66, 0x64, 0x73, 0x61, 0x70, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61,
	0x6e, 0x6b, 0x2e, 0x70, 0x62, 0x50, 0x01, 0x5a, 0x03, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_identity_message_proto_rawDescOnce sync.Once
	file_identity_message_proto_rawDescData = file_identity_message_proto_rawDesc
)

func file_identity_message_proto_rawDescGZIP() []byte {
	file_identity_message_proto_rawDescOnce.Do(func() {
		file_identity_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_identity_message_proto_rawDescData)
	})
	return file_identity_message_proto_rawDescData
}

var file_identity_message_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_identity_message_proto_goTypes = []interface{}{
	(*AddressList)(nil),           // 0: simplebank.AddressList
	(*Contact)(nil),               // 1: simplebank.Contact
	(*Educational)(nil),           // 2: simplebank.Educational
	(*Employee)(nil),              // 3: simplebank.Employee
	(*Employment)(nil),            // 4: simplebank.Employment
	(*IdentityInfo)(nil),          // 5: simplebank.IdentityInfo
	(*Ids)(nil),                   // 6: simplebank.Ids
	(*IncomeSource)(nil),          // 7: simplebank.IncomeSource
	(*Office)(nil),                // 8: simplebank.Office
	(*PersonalInfo)(nil),          // 9: simplebank.PersonalInfo
	(*Relation)(nil),              // 10: simplebank.Relation
	(*NullString)(nil),            // 11: simplebank.NullString
	(*timestamppb.Timestamp)(nil), // 12: google.protobuf.Timestamp
}
var file_identity_message_proto_depIdxs = []int32{
	11, // 0: simplebank.AddressList.otherInfo:type_name -> simplebank.NullString
	11, // 1: simplebank.Contact.otherInfo:type_name -> simplebank.NullString
	12, // 2: simplebank.Educational.startDate:type_name -> google.protobuf.Timestamp
	12, // 3: simplebank.Educational.endDate:type_name -> google.protobuf.Timestamp
	11, // 4: simplebank.Educational.otherInfo:type_name -> simplebank.NullString
	12, // 5: simplebank.Employee.dateHired:type_name -> google.protobuf.Timestamp
	12, // 6: simplebank.Employee.dateRegular:type_name -> google.protobuf.Timestamp
	11, // 7: simplebank.Employee.otherInfo:type_name -> simplebank.NullString
	12, // 8: simplebank.Employment.startDate:type_name -> google.protobuf.Timestamp
	12, // 9: simplebank.Employment.endDate:type_name -> google.protobuf.Timestamp
	11, // 10: simplebank.Employment.otherInfo:type_name -> simplebank.NullString
	12, // 11: simplebank.IdentityInfo.birthday:type_name -> google.protobuf.Timestamp
	11, // 12: simplebank.IdentityInfo.otherInfo:type_name -> simplebank.NullString
	12, // 13: simplebank.Ids.registrationDate:type_name -> google.protobuf.Timestamp
	12, // 14: simplebank.Ids.validityDate:type_name -> google.protobuf.Timestamp
	11, // 15: simplebank.Ids.otherInfo:type_name -> simplebank.NullString
	11, // 16: simplebank.IncomeSource.otherInfo:type_name -> simplebank.NullString
	12, // 17: simplebank.Office.dateStablished:type_name -> google.protobuf.Timestamp
	11, // 18: simplebank.Office.otherInfo:type_name -> simplebank.NullString
	12, // 19: simplebank.PersonalInfo.marriageDate:type_name -> google.protobuf.Timestamp
	11, // 20: simplebank.PersonalInfo.otherInfo:type_name -> simplebank.NullString
	12, // 21: simplebank.Relation.relationDate:type_name -> google.protobuf.Timestamp
	11, // 22: simplebank.Relation.otherInfo:type_name -> simplebank.NullString
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_identity_message_proto_init() }
func file_identity_message_proto_init() {
	if File_identity_message_proto != nil {
		return
	}
	file_type_message_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_identity_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Contact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Educational); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Employee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Employment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdentityInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ids); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_message_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncomeSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_message_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Office); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_message_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PersonalInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_identity_message_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Relation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_identity_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_identity_message_proto_goTypes,
		DependencyIndexes: file_identity_message_proto_depIdxs,
		MessageInfos:      file_identity_message_proto_msgTypes,
	}.Build()
	File_identity_message_proto = out.File
	file_identity_message_proto_rawDesc = nil
	file_identity_message_proto_goTypes = nil
	file_identity_message_proto_depIdxs = nil
}
