// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.12
// source: accountinventory_message.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AccountInventory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid      string      `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	AccountId int64       `protobuf:"varint,3,opt,name=accountId,proto3" json:"accountId,omitempty"`
	BarCode   string      `protobuf:"bytes,4,opt,name=barCode,proto3" json:"barCode,omitempty"`
	Code      string      `protobuf:"bytes,5,opt,name=code,proto3" json:"code,omitempty"`
	Inventory string      `protobuf:"bytes,6,opt,name=inventory,proto3" json:"inventory,omitempty"`
	UnitPrice string      `protobuf:"bytes,7,opt,name=unitPrice,proto3" json:"unitPrice,omitempty"`
	BookValue string      `protobuf:"bytes,8,opt,name=bookValue,proto3" json:"bookValue,omitempty"`
	Discount  string      `protobuf:"bytes,9,opt,name=discount,proto3" json:"discount,omitempty"`
	TaxRate   string      `protobuf:"bytes,10,opt,name=taxRate,proto3" json:"taxRate,omitempty"`
	Remarks   string      `protobuf:"bytes,11,opt,name=remarks,proto3" json:"remarks,omitempty"`
	OtherInfo *NullString `protobuf:"bytes,12,opt,name=otherInfo,proto3" json:"otherInfo,omitempty"`
}

func (x *AccountInventory) Reset() {
	*x = AccountInventory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accountinventory_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountInventory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountInventory) ProtoMessage() {}

func (x *AccountInventory) ProtoReflect() protoreflect.Message {
	mi := &file_accountinventory_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountInventory.ProtoReflect.Descriptor instead.
func (*AccountInventory) Descriptor() ([]byte, []int) {
	return file_accountinventory_message_proto_rawDescGZIP(), []int{0}
}

func (x *AccountInventory) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AccountInventory) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *AccountInventory) GetAccountId() int64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *AccountInventory) GetBarCode() string {
	if x != nil {
		return x.BarCode
	}
	return ""
}

func (x *AccountInventory) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AccountInventory) GetInventory() string {
	if x != nil {
		return x.Inventory
	}
	return ""
}

func (x *AccountInventory) GetUnitPrice() string {
	if x != nil {
		return x.UnitPrice
	}
	return ""
}

func (x *AccountInventory) GetBookValue() string {
	if x != nil {
		return x.BookValue
	}
	return ""
}

func (x *AccountInventory) GetDiscount() string {
	if x != nil {
		return x.Discount
	}
	return ""
}

func (x *AccountInventory) GetTaxRate() string {
	if x != nil {
		return x.TaxRate
	}
	return ""
}

func (x *AccountInventory) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *AccountInventory) GetOtherInfo() *NullString {
	if x != nil {
		return x.OtherInfo
	}
	return nil
}

type InventoryItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid            string      `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	BarCode         string      `protobuf:"bytes,3,opt,name=barCode,proto3" json:"barCode,omitempty"`
	ItemName        string      `protobuf:"bytes,4,opt,name=itemName,proto3" json:"itemName,omitempty"`
	UniqueVariation string      `protobuf:"bytes,5,opt,name=uniqueVariation,proto3" json:"uniqueVariation,omitempty"`
	ParentId        int64       `protobuf:"varint,6,opt,name=parentId,proto3" json:"parentId,omitempty"`
	GenericNameId   *NullInt64  `protobuf:"bytes,7,opt,name=genericNameId,proto3" json:"genericNameId,omitempty"`
	BrandNameId     *NullInt64  `protobuf:"bytes,8,opt,name=brandNameId,proto3" json:"brandNameId,omitempty"`
	MeasureId       int64       `protobuf:"varint,9,opt,name=measureId,proto3" json:"measureId,omitempty"`
	ImageId         *NullInt64  `protobuf:"bytes,10,opt,name=imageId,proto3" json:"imageId,omitempty"`
	Remarks         string      `protobuf:"bytes,11,opt,name=remarks,proto3" json:"remarks,omitempty"`
	OtherInfo       *NullString `protobuf:"bytes,12,opt,name=otherInfo,proto3" json:"otherInfo,omitempty"`
}

func (x *InventoryItem) Reset() {
	*x = InventoryItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accountinventory_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InventoryItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InventoryItem) ProtoMessage() {}

func (x *InventoryItem) ProtoReflect() protoreflect.Message {
	mi := &file_accountinventory_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InventoryItem.ProtoReflect.Descriptor instead.
func (*InventoryItem) Descriptor() ([]byte, []int) {
	return file_accountinventory_message_proto_rawDescGZIP(), []int{1}
}

func (x *InventoryItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *InventoryItem) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *InventoryItem) GetBarCode() string {
	if x != nil {
		return x.BarCode
	}
	return ""
}

func (x *InventoryItem) GetItemName() string {
	if x != nil {
		return x.ItemName
	}
	return ""
}

func (x *InventoryItem) GetUniqueVariation() string {
	if x != nil {
		return x.UniqueVariation
	}
	return ""
}

func (x *InventoryItem) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *InventoryItem) GetGenericNameId() *NullInt64 {
	if x != nil {
		return x.GenericNameId
	}
	return nil
}

func (x *InventoryItem) GetBrandNameId() *NullInt64 {
	if x != nil {
		return x.BrandNameId
	}
	return nil
}

func (x *InventoryItem) GetMeasureId() int64 {
	if x != nil {
		return x.MeasureId
	}
	return 0
}

func (x *InventoryItem) GetImageId() *NullInt64 {
	if x != nil {
		return x.ImageId
	}
	return nil
}

func (x *InventoryItem) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *InventoryItem) GetOtherInfo() *NullString {
	if x != nil {
		return x.OtherInfo
	}
	return nil
}

type InventoryDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 int64       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid               string      `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	AccountInventoryId int64       `protobuf:"varint,3,opt,name=accountInventoryId,proto3" json:"accountInventoryId,omitempty"`
	InventoryItemId    int64       `protobuf:"varint,4,opt,name=inventoryItemId,proto3" json:"inventoryItemId,omitempty"`
	SupplierId         *NullInt64  `protobuf:"bytes,5,opt,name=supplierId,proto3" json:"supplierId,omitempty"`
	UnitPrice          string      `protobuf:"bytes,6,opt,name=unitPrice,proto3" json:"unitPrice,omitempty"`
	BookValue          string      `protobuf:"bytes,7,opt,name=bookValue,proto3" json:"bookValue,omitempty"`
	Unit               string      `protobuf:"bytes,8,opt,name=unit,proto3" json:"unit,omitempty"`
	MeasureId          int64       `protobuf:"varint,9,opt,name=measureId,proto3" json:"measureId,omitempty"`
	DateManufactured   *NullTime   `protobuf:"bytes,10,opt,name=dateManufactured,proto3" json:"dateManufactured,omitempty"`
	DateExpired        *NullTime   `protobuf:"bytes,11,opt,name=dateExpired,proto3" json:"dateExpired,omitempty"`
	Remarks            string      `protobuf:"bytes,12,opt,name=remarks,proto3" json:"remarks,omitempty"`
	OtherInfo          *NullString `protobuf:"bytes,13,opt,name=otherInfo,proto3" json:"otherInfo,omitempty"`
}

func (x *InventoryDetail) Reset() {
	*x = InventoryDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accountinventory_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InventoryDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InventoryDetail) ProtoMessage() {}

func (x *InventoryDetail) ProtoReflect() protoreflect.Message {
	mi := &file_accountinventory_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InventoryDetail.ProtoReflect.Descriptor instead.
func (*InventoryDetail) Descriptor() ([]byte, []int) {
	return file_accountinventory_message_proto_rawDescGZIP(), []int{2}
}

func (x *InventoryDetail) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *InventoryDetail) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *InventoryDetail) GetAccountInventoryId() int64 {
	if x != nil {
		return x.AccountInventoryId
	}
	return 0
}

func (x *InventoryDetail) GetInventoryItemId() int64 {
	if x != nil {
		return x.InventoryItemId
	}
	return 0
}

func (x *InventoryDetail) GetSupplierId() *NullInt64 {
	if x != nil {
		return x.SupplierId
	}
	return nil
}

func (x *InventoryDetail) GetUnitPrice() string {
	if x != nil {
		return x.UnitPrice
	}
	return ""
}

func (x *InventoryDetail) GetBookValue() string {
	if x != nil {
		return x.BookValue
	}
	return ""
}

func (x *InventoryDetail) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *InventoryDetail) GetMeasureId() int64 {
	if x != nil {
		return x.MeasureId
	}
	return 0
}

func (x *InventoryDetail) GetDateManufactured() *NullTime {
	if x != nil {
		return x.DateManufactured
	}
	return nil
}

func (x *InventoryDetail) GetDateExpired() *NullTime {
	if x != nil {
		return x.DateExpired
	}
	return nil
}

func (x *InventoryDetail) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *InventoryDetail) GetOtherInfo() *NullString {
	if x != nil {
		return x.OtherInfo
	}
	return nil
}

type InventoryDetailFull struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid             string            `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	AccountInventory *AccountInventory `protobuf:"bytes,3,opt,name=accountInventory,proto3" json:"accountInventory,omitempty"`
	InventoryItem    *InventoryItem    `protobuf:"bytes,4,opt,name=inventoryItem,proto3" json:"inventoryItem,omitempty"`
	Supplier         *IdentityInfo     `protobuf:"bytes,5,opt,name=supplier,proto3" json:"supplier,omitempty"`
	UnitPrice        string            `protobuf:"bytes,6,opt,name=unitPrice,proto3" json:"unitPrice,omitempty"`
	BookValue        string            `protobuf:"bytes,7,opt,name=bookValue,proto3" json:"bookValue,omitempty"`
	Unit             string            `protobuf:"bytes,8,opt,name=unit,proto3" json:"unit,omitempty"`
	Measure          *Reference        `protobuf:"bytes,9,opt,name=measure,proto3" json:"measure,omitempty"`
	DateManufactured *NullTime         `protobuf:"bytes,10,opt,name=dateManufactured,proto3" json:"dateManufactured,omitempty"`
	DateExpired      *NullTime         `protobuf:"bytes,11,opt,name=dateExpired,proto3" json:"dateExpired,omitempty"`
	Remarks          string            `protobuf:"bytes,12,opt,name=remarks,proto3" json:"remarks,omitempty"`
	OtherInfo        *NullString       `protobuf:"bytes,13,opt,name=otherInfo,proto3" json:"otherInfo,omitempty"`
}

func (x *InventoryDetailFull) Reset() {
	*x = InventoryDetailFull{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accountinventory_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InventoryDetailFull) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InventoryDetailFull) ProtoMessage() {}

func (x *InventoryDetailFull) ProtoReflect() protoreflect.Message {
	mi := &file_accountinventory_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InventoryDetailFull.ProtoReflect.Descriptor instead.
func (*InventoryDetailFull) Descriptor() ([]byte, []int) {
	return file_accountinventory_message_proto_rawDescGZIP(), []int{3}
}

func (x *InventoryDetailFull) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *InventoryDetailFull) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *InventoryDetailFull) GetAccountInventory() *AccountInventory {
	if x != nil {
		return x.AccountInventory
	}
	return nil
}

func (x *InventoryDetailFull) GetInventoryItem() *InventoryItem {
	if x != nil {
		return x.InventoryItem
	}
	return nil
}

func (x *InventoryDetailFull) GetSupplier() *IdentityInfo {
	if x != nil {
		return x.Supplier
	}
	return nil
}

func (x *InventoryDetailFull) GetUnitPrice() string {
	if x != nil {
		return x.UnitPrice
	}
	return ""
}

func (x *InventoryDetailFull) GetBookValue() string {
	if x != nil {
		return x.BookValue
	}
	return ""
}

func (x *InventoryDetailFull) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *InventoryDetailFull) GetMeasure() *Reference {
	if x != nil {
		return x.Measure
	}
	return nil
}

func (x *InventoryDetailFull) GetDateManufactured() *NullTime {
	if x != nil {
		return x.DateManufactured
	}
	return nil
}

func (x *InventoryDetailFull) GetDateExpired() *NullTime {
	if x != nil {
		return x.DateExpired
	}
	return nil
}

func (x *InventoryDetailFull) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *InventoryDetailFull) GetOtherInfo() *NullString {
	if x != nil {
		return x.OtherInfo
	}
	return nil
}

type InventorySpecsString struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid            string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	InventoryItemId int64  `protobuf:"varint,2,opt,name=inventoryItemId,proto3" json:"inventoryItemId,omitempty"`
	SpecsId         int64  `protobuf:"varint,3,opt,name=specsId,proto3" json:"specsId,omitempty"`
	Value           string `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *InventorySpecsString) Reset() {
	*x = InventorySpecsString{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accountinventory_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InventorySpecsString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InventorySpecsString) ProtoMessage() {}

func (x *InventorySpecsString) ProtoReflect() protoreflect.Message {
	mi := &file_accountinventory_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InventorySpecsString.ProtoReflect.Descriptor instead.
func (*InventorySpecsString) Descriptor() ([]byte, []int) {
	return file_accountinventory_message_proto_rawDescGZIP(), []int{4}
}

func (x *InventorySpecsString) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *InventorySpecsString) GetInventoryItemId() int64 {
	if x != nil {
		return x.InventoryItemId
	}
	return 0
}

func (x *InventorySpecsString) GetSpecsId() int64 {
	if x != nil {
		return x.SpecsId
	}
	return 0
}

func (x *InventorySpecsString) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type InventorySpecsNumber struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid            string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	InventoryItemId int64  `protobuf:"varint,2,opt,name=inventoryItemId,proto3" json:"inventoryItemId,omitempty"`
	SpecsId         int64  `protobuf:"varint,3,opt,name=specsId,proto3" json:"specsId,omitempty"`
	Value           string `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	Value2          string `protobuf:"bytes,5,opt,name=value2,proto3" json:"value2,omitempty"`
	MeasureId       int64  `protobuf:"varint,6,opt,name=measureId,proto3" json:"measureId,omitempty"`
}

func (x *InventorySpecsNumber) Reset() {
	*x = InventorySpecsNumber{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accountinventory_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InventorySpecsNumber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InventorySpecsNumber) ProtoMessage() {}

func (x *InventorySpecsNumber) ProtoReflect() protoreflect.Message {
	mi := &file_accountinventory_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InventorySpecsNumber.ProtoReflect.Descriptor instead.
func (*InventorySpecsNumber) Descriptor() ([]byte, []int) {
	return file_accountinventory_message_proto_rawDescGZIP(), []int{5}
}

func (x *InventorySpecsNumber) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *InventorySpecsNumber) GetInventoryItemId() int64 {
	if x != nil {
		return x.InventoryItemId
	}
	return 0
}

func (x *InventorySpecsNumber) GetSpecsId() int64 {
	if x != nil {
		return x.SpecsId
	}
	return 0
}

func (x *InventorySpecsNumber) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *InventorySpecsNumber) GetValue2() string {
	if x != nil {
		return x.Value2
	}
	return ""
}

func (x *InventorySpecsNumber) GetMeasureId() int64 {
	if x != nil {
		return x.MeasureId
	}
	return 0
}

type InventorySpecsDate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid            string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	InventoryItemId int64                  `protobuf:"varint,2,opt,name=inventoryItemId,proto3" json:"inventoryItemId,omitempty"`
	SpecsId         int64                  `protobuf:"varint,3,opt,name=specsId,proto3" json:"specsId,omitempty"`
	Value           *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	Value2          *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=value2,proto3" json:"value2,omitempty"`
}

func (x *InventorySpecsDate) Reset() {
	*x = InventorySpecsDate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accountinventory_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InventorySpecsDate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InventorySpecsDate) ProtoMessage() {}

func (x *InventorySpecsDate) ProtoReflect() protoreflect.Message {
	mi := &file_accountinventory_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InventorySpecsDate.ProtoReflect.Descriptor instead.
func (*InventorySpecsDate) Descriptor() ([]byte, []int) {
	return file_accountinventory_message_proto_rawDescGZIP(), []int{6}
}

func (x *InventorySpecsDate) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *InventorySpecsDate) GetInventoryItemId() int64 {
	if x != nil {
		return x.InventoryItemId
	}
	return 0
}

func (x *InventorySpecsDate) GetSpecsId() int64 {
	if x != nil {
		return x.SpecsId
	}
	return 0
}

func (x *InventorySpecsDate) GetValue() *timestamppb.Timestamp {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *InventorySpecsDate) GetValue2() *timestamppb.Timestamp {
	if x != nil {
		return x.Value2
	}
	return nil
}

var File_accountinventory_message_proto protoreflect.FileDescriptor

var file_accountinventory_message_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0a, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x17, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xe2, 0x02, 0x0a, 0x10, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x74, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x6e, 0x69, 0x74, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6f, 0x6f, 0x6b, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6b, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x74, 0x61, 0x78, 0x52, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x74, 0x61, 0x78, 0x52, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x73, 0x12, 0x34, 0x0a, 0x09, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e,
	0x6b, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x6f, 0x74,
	0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xc4, 0x03, 0x0a, 0x0d, 0x49, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x62, 0x61, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x62, 0x61, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x56, 0x61, 0x72,
	0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x75, 0x6e,
	0x69, 0x71, 0x75, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0d, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x4e, 0x75,
	0x6c, 0x6c, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x52, 0x0d, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63,
	0x4e, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x0b, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x4e,
	0x61, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x69,
	0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x49, 0x6e, 0x74,
	0x36, 0x34, 0x52, 0x0b, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x49, 0x64, 0x12, 0x2f, 0x0a,
	0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x4e, 0x75, 0x6c, 0x6c,
	0x49, 0x6e, 0x74, 0x36, 0x34, 0x52, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x6f, 0x74, 0x68, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x69,
	0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x52, 0x09, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xfe,
	0x03, 0x0a, 0x0f, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x12, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x12, 0x35, 0x0a, 0x0a, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e,
	0x6b, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x52, 0x0a, 0x73, 0x75, 0x70,
	0x70, 0x6c, 0x69, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x74, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x6e, 0x69, 0x74,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6f, 0x6f, 0x6b, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6b, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x65, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x10, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e,
	0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x4e, 0x75, 0x6c,
	0x6c, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x10, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x75, 0x66,
	0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x64, 0x12, 0x36, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73,
	0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x54, 0x69,
	0x6d, 0x65, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x6f, 0x74, 0x68,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73,
	0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0xc5, 0x04, 0x0a, 0x13, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x46, 0x75, 0x6c, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x48, 0x0a, 0x10, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61,
	0x6e, 0x6b, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x10, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x3f, 0x0a, 0x0d, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73,
	0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x34, 0x0a, 0x08, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x69,
	0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c,
	0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x08, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09,
	0x75, 0x6e, 0x69, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x6e, 0x69, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6f,
	0x6f, 0x6b, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62,
	0x6f, 0x6f, 0x6b, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x2f, 0x0a, 0x07,
	0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x12, 0x40, 0x0a,
	0x10, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x10, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x64, 0x12,
	0x36, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e,
	0x6b, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65,
	0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x73, 0x12, 0x34, 0x0a, 0x09, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e,
	0x6b, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x6f, 0x74,
	0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x84, 0x01, 0x0a, 0x14, 0x49, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x70, 0x65, 0x63, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x69,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x70, 0x65, 0x63, 0x73, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x73, 0x70, 0x65, 0x63, 0x73, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xba,
	0x01, 0x0a, 0x14, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x70, 0x65, 0x63,
	0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x69,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x65, 0x63, 0x73, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x70, 0x65, 0x63, 0x73, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0x12, 0x1c, 0x0a,
	0x09, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x49, 0x64, 0x22, 0xd2, 0x01, 0x0a, 0x12,
	0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x70, 0x65, 0x63, 0x73, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x65, 0x63, 0x73, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x73, 0x70, 0x65, 0x63, 0x73, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x32, 0x0a, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32,
	0x42, 0x20, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x64, 0x73, 0x61, 0x70, 0x2e, 0x73, 0x69,
	0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x70, 0x62, 0x50, 0x01, 0x5a, 0x03, 0x2f,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_accountinventory_message_proto_rawDescOnce sync.Once
	file_accountinventory_message_proto_rawDescData = file_accountinventory_message_proto_rawDesc
)

func file_accountinventory_message_proto_rawDescGZIP() []byte {
	file_accountinventory_message_proto_rawDescOnce.Do(func() {
		file_accountinventory_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_accountinventory_message_proto_rawDescData)
	})
	return file_accountinventory_message_proto_rawDescData
}

var file_accountinventory_message_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_accountinventory_message_proto_goTypes = []interface{}{
	(*AccountInventory)(nil),      // 0: simplebank.AccountInventory
	(*InventoryItem)(nil),         // 1: simplebank.InventoryItem
	(*InventoryDetail)(nil),       // 2: simplebank.InventoryDetail
	(*InventoryDetailFull)(nil),   // 3: simplebank.InventoryDetailFull
	(*InventorySpecsString)(nil),  // 4: simplebank.InventorySpecsString
	(*InventorySpecsNumber)(nil),  // 5: simplebank.InventorySpecsNumber
	(*InventorySpecsDate)(nil),    // 6: simplebank.InventorySpecsDate
	(*NullString)(nil),            // 7: simplebank.NullString
	(*NullInt64)(nil),             // 8: simplebank.NullInt64
	(*NullTime)(nil),              // 9: simplebank.NullTime
	(*IdentityInfo)(nil),          // 10: simplebank.IdentityInfo
	(*Reference)(nil),             // 11: simplebank.Reference
	(*timestamppb.Timestamp)(nil), // 12: google.protobuf.Timestamp
}
var file_accountinventory_message_proto_depIdxs = []int32{
	7,  // 0: simplebank.AccountInventory.otherInfo:type_name -> simplebank.NullString
	8,  // 1: simplebank.InventoryItem.genericNameId:type_name -> simplebank.NullInt64
	8,  // 2: simplebank.InventoryItem.brandNameId:type_name -> simplebank.NullInt64
	8,  // 3: simplebank.InventoryItem.imageId:type_name -> simplebank.NullInt64
	7,  // 4: simplebank.InventoryItem.otherInfo:type_name -> simplebank.NullString
	8,  // 5: simplebank.InventoryDetail.supplierId:type_name -> simplebank.NullInt64
	9,  // 6: simplebank.InventoryDetail.dateManufactured:type_name -> simplebank.NullTime
	9,  // 7: simplebank.InventoryDetail.dateExpired:type_name -> simplebank.NullTime
	7,  // 8: simplebank.InventoryDetail.otherInfo:type_name -> simplebank.NullString
	0,  // 9: simplebank.InventoryDetailFull.accountInventory:type_name -> simplebank.AccountInventory
	1,  // 10: simplebank.InventoryDetailFull.inventoryItem:type_name -> simplebank.InventoryItem
	10, // 11: simplebank.InventoryDetailFull.supplier:type_name -> simplebank.IdentityInfo
	11, // 12: simplebank.InventoryDetailFull.measure:type_name -> simplebank.Reference
	9,  // 13: simplebank.InventoryDetailFull.dateManufactured:type_name -> simplebank.NullTime
	9,  // 14: simplebank.InventoryDetailFull.dateExpired:type_name -> simplebank.NullTime
	7,  // 15: simplebank.InventoryDetailFull.otherInfo:type_name -> simplebank.NullString
	12, // 16: simplebank.InventorySpecsDate.value:type_name -> google.protobuf.Timestamp
	12, // 17: simplebank.InventorySpecsDate.value2:type_name -> google.protobuf.Timestamp
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_accountinventory_message_proto_init() }
func file_accountinventory_message_proto_init() {
	if File_accountinventory_message_proto != nil {
		return
	}
	file_type_message_proto_init()
	file_reference_message_proto_init()
	file_identity_message_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_accountinventory_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountInventory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accountinventory_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InventoryItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accountinventory_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InventoryDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accountinventory_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InventoryDetailFull); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accountinventory_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InventorySpecsString); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accountinventory_message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InventorySpecsNumber); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accountinventory_message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InventorySpecsDate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_accountinventory_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_accountinventory_message_proto_goTypes,
		DependencyIndexes: file_accountinventory_message_proto_depIdxs,
		MessageInfos:      file_accountinventory_message_proto_msgTypes,
	}.Build()
	File_accountinventory_message_proto = out.File
	file_accountinventory_message_proto_rawDesc = nil
	file_accountinventory_message_proto_goTypes = nil
	file_accountinventory_message_proto_depIdxs = nil
}
