// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.12
// source: reference_message.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChartofAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID            int64       `protobuf:"varint,1,opt,name=iD,proto3" json:"iD,omitempty"`
	Uuid          string      `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Acc           string      `protobuf:"bytes,3,opt,name=acc,proto3" json:"acc,omitempty"`
	Active        bool        `protobuf:"varint,4,opt,name=active,proto3" json:"active,omitempty"`
	ContraAccount bool        `protobuf:"varint,5,opt,name=contraAccount,proto3" json:"contraAccount,omitempty"`
	NormalBalance bool        `protobuf:"varint,6,opt,name=normalBalance,proto3" json:"normalBalance,omitempty"`
	Title         string      `protobuf:"bytes,7,opt,name=title,proto3" json:"title,omitempty"`
	ParentId      int64       `protobuf:"varint,8,opt,name=parentId,proto3" json:"parentId,omitempty"`
	ShortName     string      `protobuf:"bytes,9,opt,name=shortName,proto3" json:"shortName,omitempty"`
	OtherInfo     *NullString `protobuf:"bytes,10,opt,name=otherInfo,proto3" json:"otherInfo,omitempty"`
}

func (x *ChartofAccount) Reset() {
	*x = ChartofAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reference_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChartofAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChartofAccount) ProtoMessage() {}

func (x *ChartofAccount) ProtoReflect() protoreflect.Message {
	mi := &file_reference_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChartofAccount.ProtoReflect.Descriptor instead.
func (*ChartofAccount) Descriptor() ([]byte, []int) {
	return file_reference_message_proto_rawDescGZIP(), []int{0}
}

func (x *ChartofAccount) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *ChartofAccount) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ChartofAccount) GetAcc() string {
	if x != nil {
		return x.Acc
	}
	return ""
}

func (x *ChartofAccount) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *ChartofAccount) GetContraAccount() bool {
	if x != nil {
		return x.ContraAccount
	}
	return false
}

func (x *ChartofAccount) GetNormalBalance() bool {
	if x != nil {
		return x.NormalBalance
	}
	return false
}

func (x *ChartofAccount) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ChartofAccount) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *ChartofAccount) GetShortName() string {
	if x != nil {
		return x.ShortName
	}
	return ""
}

func (x *ChartofAccount) GetOtherInfo() *NullString {
	if x != nil {
		return x.OtherInfo
	}
	return nil
}

type UnitConversion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid      string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	TypeId    int64  `protobuf:"varint,3,opt,name=typeId,proto3" json:"typeId,omitempty"`
	FromId    int64  `protobuf:"varint,4,opt,name=fromId,proto3" json:"fromId,omitempty"`
	ToId      int64  `protobuf:"varint,5,opt,name=toId,proto3" json:"toId,omitempty"`
	Value     string `protobuf:"bytes,6,opt,name=value,proto3" json:"value,omitempty"`
	OtherInfo string `protobuf:"bytes,7,opt,name=otherInfo,proto3" json:"otherInfo,omitempty"`
}

func (x *UnitConversion) Reset() {
	*x = UnitConversion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reference_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnitConversion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnitConversion) ProtoMessage() {}

func (x *UnitConversion) ProtoReflect() protoreflect.Message {
	mi := &file_reference_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnitConversion.ProtoReflect.Descriptor instead.
func (*UnitConversion) Descriptor() ([]byte, []int) {
	return file_reference_message_proto_rawDescGZIP(), []int{1}
}

func (x *UnitConversion) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UnitConversion) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *UnitConversion) GetTypeId() int64 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *UnitConversion) GetFromId() int64 {
	if x != nil {
		return x.FromId
	}
	return 0
}

func (x *UnitConversion) GetToId() int64 {
	if x != nil {
		return x.ToId
	}
	return 0
}

func (x *UnitConversion) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *UnitConversion) GetOtherInfo() string {
	if x != nil {
		return x.OtherInfo
	}
	return ""
}

type CoaParent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        int64       `protobuf:"varint,1,opt,name=iD,proto3" json:"iD,omitempty"`
	Uuid      string      `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Acc       string      `protobuf:"bytes,3,opt,name=acc,proto3" json:"acc,omitempty"`
	CoaSeq    int64       `protobuf:"varint,4,opt,name=coaSeq,proto3" json:"coaSeq,omitempty"`
	Title     string      `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	ParentId  int64       `protobuf:"varint,6,opt,name=parentId,proto3" json:"parentId,omitempty"`
	OtherInfo *NullString `protobuf:"bytes,7,opt,name=otherInfo,proto3" json:"otherInfo,omitempty"`
}

func (x *CoaParent) Reset() {
	*x = CoaParent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reference_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoaParent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoaParent) ProtoMessage() {}

func (x *CoaParent) ProtoReflect() protoreflect.Message {
	mi := &file_reference_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoaParent.ProtoReflect.Descriptor instead.
func (*CoaParent) Descriptor() ([]byte, []int) {
	return file_reference_message_proto_rawDescGZIP(), []int{2}
}

func (x *CoaParent) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *CoaParent) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *CoaParent) GetAcc() string {
	if x != nil {
		return x.Acc
	}
	return ""
}

func (x *CoaParent) GetCoaSeq() int64 {
	if x != nil {
		return x.CoaSeq
	}
	return 0
}

func (x *CoaParent) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CoaParent) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *CoaParent) GetOtherInfo() *NullString {
	if x != nil {
		return x.OtherInfo
	}
	return nil
}

type Fxrate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid         string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	BuyRate      string                 `protobuf:"bytes,2,opt,name=buyRate,proto3" json:"buyRate,omitempty"`
	CutofDate    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=cutofDate,proto3" json:"cutofDate,omitempty"`
	SellRate     string                 `protobuf:"bytes,4,opt,name=sellRate,proto3" json:"sellRate,omitempty"`
	BaseCurrency string                 `protobuf:"bytes,5,opt,name=baseCurrency,proto3" json:"baseCurrency,omitempty"`
	Currency     string                 `protobuf:"bytes,6,opt,name=currency,proto3" json:"currency,omitempty"`
	OtherInfo    *NullString            `protobuf:"bytes,7,opt,name=otherInfo,proto3" json:"otherInfo,omitempty"`
}

func (x *Fxrate) Reset() {
	*x = Fxrate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reference_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Fxrate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fxrate) ProtoMessage() {}

func (x *Fxrate) ProtoReflect() protoreflect.Message {
	mi := &file_reference_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fxrate.ProtoReflect.Descriptor instead.
func (*Fxrate) Descriptor() ([]byte, []int) {
	return file_reference_message_proto_rawDescGZIP(), []int{3}
}

func (x *Fxrate) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Fxrate) GetBuyRate() string {
	if x != nil {
		return x.BuyRate
	}
	return ""
}

func (x *Fxrate) GetCutofDate() *timestamppb.Timestamp {
	if x != nil {
		return x.CutofDate
	}
	return nil
}

func (x *Fxrate) GetSellRate() string {
	if x != nil {
		return x.SellRate
	}
	return ""
}

func (x *Fxrate) GetBaseCurrency() string {
	if x != nil {
		return x.BaseCurrency
	}
	return ""
}

func (x *Fxrate) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *Fxrate) GetOtherInfo() *NullString {
	if x != nil {
		return x.OtherInfo
	}
	return nil
}

type Geography struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID             int64       `protobuf:"varint,1,opt,name=iD,proto3" json:"iD,omitempty"`
	Uuid           string      `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Code           int64       `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
	ShortName      string      `protobuf:"bytes,4,opt,name=shortName,proto3" json:"shortName,omitempty"`
	Location       string      `protobuf:"bytes,5,opt,name=location,proto3" json:"location,omitempty"`
	TypeId         int64       `protobuf:"varint,6,opt,name=typeId,proto3" json:"typeId,omitempty"`
	ParentId       int64       `protobuf:"varint,7,opt,name=parentId,proto3" json:"parentId,omitempty"`
	ZipCode        string      `protobuf:"bytes,8,opt,name=zipCode,proto3" json:"zipCode,omitempty"`
	Latitude       float64     `protobuf:"fixed64,9,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude      float64     `protobuf:"fixed64,10,opt,name=longitude,proto3" json:"longitude,omitempty"`
	AddressUrl     string      `protobuf:"bytes,11,opt,name=addressUrl,proto3" json:"addressUrl,omitempty"`
	SimpleLocation string      `protobuf:"bytes,12,opt,name=simpleLocation,proto3" json:"simpleLocation,omitempty"`
	FullLocation   string      `protobuf:"bytes,13,opt,name=fullLocation,proto3" json:"fullLocation,omitempty"`
	OtherInfo      *NullString `protobuf:"bytes,14,opt,name=otherInfo,proto3" json:"otherInfo,omitempty"`
}

func (x *Geography) Reset() {
	*x = Geography{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reference_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Geography) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Geography) ProtoMessage() {}

func (x *Geography) ProtoReflect() protoreflect.Message {
	mi := &file_reference_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Geography.ProtoReflect.Descriptor instead.
func (*Geography) Descriptor() ([]byte, []int) {
	return file_reference_message_proto_rawDescGZIP(), []int{4}
}

func (x *Geography) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Geography) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Geography) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Geography) GetShortName() string {
	if x != nil {
		return x.ShortName
	}
	return ""
}

func (x *Geography) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *Geography) GetTypeId() int64 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *Geography) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *Geography) GetZipCode() string {
	if x != nil {
		return x.ZipCode
	}
	return ""
}

func (x *Geography) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Geography) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *Geography) GetAddressUrl() string {
	if x != nil {
		return x.AddressUrl
	}
	return ""
}

func (x *Geography) GetSimpleLocation() string {
	if x != nil {
		return x.SimpleLocation
	}
	return ""
}

func (x *Geography) GetFullLocation() string {
	if x != nil {
		return x.FullLocation
	}
	return ""
}

func (x *Geography) GetOtherInfo() *NullString {
	if x != nil {
		return x.OtherInfo
	}
	return nil
}

type MainRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid    string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	ModCtr  int64                  `protobuf:"varint,2,opt,name=modCtr,proto3" json:"modCtr,omitempty"`
	Created *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created,proto3" json:"created,omitempty"`
	Updated *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=updated,proto3" json:"updated,omitempty"`
}

func (x *MainRecord) Reset() {
	*x = MainRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reference_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MainRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MainRecord) ProtoMessage() {}

func (x *MainRecord) ProtoReflect() protoreflect.Message {
	mi := &file_reference_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MainRecord.ProtoReflect.Descriptor instead.
func (*MainRecord) Descriptor() ([]byte, []int) {
	return file_reference_message_proto_rawDescGZIP(), []int{5}
}

func (x *MainRecord) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *MainRecord) GetModCtr() int64 {
	if x != nil {
		return x.ModCtr
	}
	return 0
}

func (x *MainRecord) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *MainRecord) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

type Modified struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid    string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	ModCtr  int64                  `protobuf:"varint,2,opt,name=modCtr,proto3" json:"modCtr,omitempty"`
	Updated *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated,proto3" json:"updated,omitempty"`
}

func (x *Modified) Reset() {
	*x = Modified{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reference_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Modified) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Modified) ProtoMessage() {}

func (x *Modified) ProtoReflect() protoreflect.Message {
	mi := &file_reference_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Modified.ProtoReflect.Descriptor instead.
func (*Modified) Descriptor() ([]byte, []int) {
	return file_reference_message_proto_rawDescGZIP(), []int{6}
}

func (x *Modified) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Modified) GetModCtr() int64 {
	if x != nil {
		return x.ModCtr
	}
	return 0
}

func (x *Modified) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

type Reference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         int64       `protobuf:"varint,1,opt,name=iD,proto3" json:"iD,omitempty"`
	Uuid       string      `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Code       int64       `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
	ShortName  string      `protobuf:"bytes,4,opt,name=shortName,proto3" json:"shortName,omitempty"`
	Statuscode string      `protobuf:"bytes,5,opt,name=statuscode,proto3" json:"statuscode,omitempty"`
	Title      string      `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	ParentId   int64       `protobuf:"varint,7,opt,name=parentId,proto3" json:"parentId,omitempty"`
	TypeId     int64       `protobuf:"varint,8,opt,name=typeId,proto3" json:"typeId,omitempty"`
	Remark     string      `protobuf:"bytes,9,opt,name=remark,proto3" json:"remark,omitempty"`
	OtherInfo  *NullString `protobuf:"bytes,10,opt,name=otherInfo,proto3" json:"otherInfo,omitempty"`
}

func (x *Reference) Reset() {
	*x = Reference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reference_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reference) ProtoMessage() {}

func (x *Reference) ProtoReflect() protoreflect.Message {
	mi := &file_reference_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reference.ProtoReflect.Descriptor instead.
func (*Reference) Descriptor() ([]byte, []int) {
	return file_reference_message_proto_rawDescGZIP(), []int{7}
}

func (x *Reference) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Reference) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Reference) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Reference) GetShortName() string {
	if x != nil {
		return x.ShortName
	}
	return ""
}

func (x *Reference) GetStatuscode() string {
	if x != nil {
		return x.Statuscode
	}
	return ""
}

func (x *Reference) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Reference) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *Reference) GetTypeId() int64 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *Reference) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *Reference) GetOtherInfo() *NullString {
	if x != nil {
		return x.OtherInfo
	}
	return nil
}

type ReferenceType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          int64       `protobuf:"varint,1,opt,name=iD,proto3" json:"iD,omitempty"`
	Uuid        string      `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Code        string      `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Title       string      `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Description string      `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	OtherInfo   *NullString `protobuf:"bytes,6,opt,name=otherInfo,proto3" json:"otherInfo,omitempty"`
}

func (x *ReferenceType) Reset() {
	*x = ReferenceType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reference_message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReferenceType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReferenceType) ProtoMessage() {}

func (x *ReferenceType) ProtoReflect() protoreflect.Message {
	mi := &file_reference_message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReferenceType.ProtoReflect.Descriptor instead.
func (*ReferenceType) Descriptor() ([]byte, []int) {
	return file_reference_message_proto_rawDescGZIP(), []int{8}
}

func (x *ReferenceType) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *ReferenceType) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ReferenceType) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ReferenceType) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ReferenceType) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ReferenceType) GetOtherInfo() *NullString {
	if x != nil {
		return x.OtherInfo
	}
	return nil
}

var File_reference_message_proto protoreflect.FileDescriptor

var file_reference_message_proto_rawDesc = []byte{
	0x0a, 0x17, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x73, 0x69, 0x6d, 0x70, 0x6c,
	0x65, 0x62, 0x61, 0x6e, 0x6b, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb0, 0x02, 0x0a, 0x0e, 0x43,
	0x68, 0x61, 0x72, 0x74, 0x6f, 0x66, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x44, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x63, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x61, 0x63, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x09, 0x6f, 0x74, 0x68, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x69, 0x6d,
	0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x52, 0x09, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xac, 0x01,
	0x0a, 0x0e, 0x55, 0x6e, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x66, 0x72, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x72,
	0x6f, 0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x6f, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x74, 0x6f, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xc1, 0x01, 0x0a,
	0x09, 0x43, 0x6f, 0x61, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x61, 0x63, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x63, 0x63,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x61, 0x53, 0x65, 0x71, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x63, 0x6f, 0x61, 0x53, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x09, 0x6f, 0x74,
	0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x82, 0x02, 0x0a, 0x06, 0x46, 0x78, 0x72, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x62, 0x75, 0x79, 0x52, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x62, 0x75, 0x79, 0x52, 0x61, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x75, 0x74,
	0x6f, 0x66, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x75, 0x74, 0x6f, 0x66, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12,
	0x34, 0x0a, 0x09, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e,
	0x4e, 0x75, 0x6c, 0x6c, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x6f, 0x74, 0x68, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xa7, 0x03, 0x0a, 0x09, 0x47, 0x65, 0x6f, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x7a, 0x69, 0x70,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x7a, 0x69, 0x70, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x55, 0x72, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x55, 0x72, 0x6c, 0x12, 0x26, 0x0a,
	0x0e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x75, 0x6c, 0x6c, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x75, 0x6c,
	0x6c, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x09, 0x6f, 0x74, 0x68,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73,
	0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0xa4, 0x01, 0x0a, 0x0a, 0x4d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x43, 0x74, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x43, 0x74, 0x72, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x34, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x6c, 0x0a, 0x08, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x43, 0x74, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x43, 0x74, 0x72, 0x12, 0x34,
	0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x22, 0x99, 0x02, 0x0a, 0x09, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x79,
	0x70, 0x65, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x34, 0x0a, 0x09, 0x6f, 0x74,
	0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0xb5, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x09, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61,
	0x6e, 0x6b, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x6f,
	0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x20, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x2e,
	0x66, 0x64, 0x73, 0x61, 0x70, 0x2e, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x62, 0x61, 0x6e, 0x6b,
	0x2e, 0x70, 0x62, 0x50, 0x01, 0x5a, 0x03, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_reference_message_proto_rawDescOnce sync.Once
	file_reference_message_proto_rawDescData = file_reference_message_proto_rawDesc
)

func file_reference_message_proto_rawDescGZIP() []byte {
	file_reference_message_proto_rawDescOnce.Do(func() {
		file_reference_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_reference_message_proto_rawDescData)
	})
	return file_reference_message_proto_rawDescData
}

var file_reference_message_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_reference_message_proto_goTypes = []interface{}{
	(*ChartofAccount)(nil),        // 0: simplebank.ChartofAccount
	(*UnitConversion)(nil),        // 1: simplebank.UnitConversion
	(*CoaParent)(nil),             // 2: simplebank.CoaParent
	(*Fxrate)(nil),                // 3: simplebank.Fxrate
	(*Geography)(nil),             // 4: simplebank.Geography
	(*MainRecord)(nil),            // 5: simplebank.MainRecord
	(*Modified)(nil),              // 6: simplebank.Modified
	(*Reference)(nil),             // 7: simplebank.Reference
	(*ReferenceType)(nil),         // 8: simplebank.ReferenceType
	(*NullString)(nil),            // 9: simplebank.NullString
	(*timestamppb.Timestamp)(nil), // 10: google.protobuf.Timestamp
}
var file_reference_message_proto_depIdxs = []int32{
	9,  // 0: simplebank.ChartofAccount.otherInfo:type_name -> simplebank.NullString
	9,  // 1: simplebank.CoaParent.otherInfo:type_name -> simplebank.NullString
	10, // 2: simplebank.Fxrate.cutofDate:type_name -> google.protobuf.Timestamp
	9,  // 3: simplebank.Fxrate.otherInfo:type_name -> simplebank.NullString
	9,  // 4: simplebank.Geography.otherInfo:type_name -> simplebank.NullString
	10, // 5: simplebank.MainRecord.created:type_name -> google.protobuf.Timestamp
	10, // 6: simplebank.MainRecord.updated:type_name -> google.protobuf.Timestamp
	10, // 7: simplebank.Modified.updated:type_name -> google.protobuf.Timestamp
	9,  // 8: simplebank.Reference.otherInfo:type_name -> simplebank.NullString
	9,  // 9: simplebank.ReferenceType.otherInfo:type_name -> simplebank.NullString
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_reference_message_proto_init() }
func file_reference_message_proto_init() {
	if File_reference_message_proto != nil {
		return
	}
	file_type_message_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_reference_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChartofAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reference_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnitConversion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reference_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoaParent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reference_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Fxrate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reference_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Geography); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reference_message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MainRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reference_message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Modified); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reference_message_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reference_message_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReferenceType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_reference_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_reference_message_proto_goTypes,
		DependencyIndexes: file_reference_message_proto_depIdxs,
		MessageInfos:      file_reference_message_proto_msgTypes,
	}.Build()
	File_reference_message_proto = out.File
	file_reference_message_proto_rawDesc = nil
	file_reference_message_proto_goTypes = nil
	file_reference_message_proto_depIdxs = nil
}
