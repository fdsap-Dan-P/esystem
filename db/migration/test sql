-- // Fillup MapBranch
INSERT INTO MapBranch(IIID, BrCode, NewBrCode)
  SELECT OfficeIIID, BrCode, NewBrCode
  FROM dat_brcode sb
  WHERE officeiiid  is not null
  ON CONFLICT (BrCode) DO 
    UPDATE SET 
      IIID = EXCLUDED.IIID,
       NewBrCode = EXCLUDED.NewBrCode;

 -- Update Branch Staging
 UPDATE dat_brcode sb set officeiiid=467850 where brcode = 'C1';
 INSERT INTO MapBranch(IIID,BrCode, NewBrCode)
 -- Copy to MapBranch
 SELECT OfficeIIID, BrCode, NewBrCode FROM dat_brcode WHERE OfficeIIID is NOT NULL 
 ON CONFLICT(BrCode) DO
 UPDATE SET IIID = EXCLUDED.IIID;
 
-- // Fillup MapUnit
INSERT INTO MapUnit(IIID, BrCode, UnitCode)
  SELECT DISTINCT o.officeiiid, m.BrCode, right(o.code,3)::Numeric UnitCode --, o.officename 
  FROM Offices o 
  INNER JOIN MapBranch m on m.IIID = o.ParentIIID
  INNER JOIN dat_unit u on u.BrCode = m.BrCode and u.unitcode::VarChar(3) = right(o.code,3)
  WHERE lower(o.officetype) ='unit' --and m.brcode = 'C1' -- order by unitcode
  ON CONFLICT (BrCode, UnitCode) 
  DO UPDATE SET 
    IIID = EXCLUDED.IIID;
    
 -- // Fillup MapCenter 
INSERT INTO MapCenter(IIID, BrCode, UnitIIID, CenterCode)
  SELECT 
    DISTINCT c.OfficeIIID CenterIIID,  sb.brcode,  u.OfficeIIID, sc.centercode
  FROM Offices c
  INNER JOIN Offices u on u.officeiiid = c.parentiiid 
  INNER JOIN Offices b on b.officeiiid = u.parentiiid 
  INNER JOIN dat_brcode sb on sb.officeiiid = b.officeiiid 
  INNER JOIN dat_center sc on 
    substring(c.code FROM (length(c.code) - position('-' in reverse(c.code))+2) FOR 10) = sc.centercode 
    and sc.brcode = sb.brcode 
  WHERE lower(c.OfficeType) = 'center' and sb.brcode = 'C1' -- and c.OfficeIIID = 9277565
  and c.Officeiiid not in (select iiid from mapcenter)
  
  ON CONFLICT (BrCode, CenterCode) 
  DO UPDATE SET 
    IIID = EXCLUDED.IIID;
   
  -- // Update customer CenterCode -> only  when there is a change in center parent
  UPDATE customer set branch_code = cus.officeiiid 
  FROM
   (SELECT cus.cid, b.officeiiid , b.officename, cus.branch_code 
    FROM Customer cus
    INNER JOIN Offices c on c.officeiiid = cus.center_code 
    INNER JOIN Offices u on u.officeiiid = c.parentiiid 
    INNER JOIN Offices b on b.officeiiid = u.parentiiid 
    WHERE b.officeiiid <> cus.branch_cod
    ) cus
  WHERE cus.cid = customer.cid 
  --WHERE mc.IIID = Customer.CID and customer.center_code = -1
  
  --// Get Customer with no centers
  SELECT distinct cen.*
  FROM Customer 
  INNER JOIN mapCustomer mc on mc.IIID = Customer.CID 
  INNER JOIN dat_customer c on c.BrCode = mc.BrCode and c.CID = mc.CID
  INNER JOIN dat_Center cen on cen.brcode = c.brcode and cen.centercode = c.center_code 
  WHERE mc.IIID = Customer.CID and customer.center_code = -1
  
  
 
  --// get unmap units
  select  sc.brcode, sc.unitcode, sc.unit, count(cus.cid), o.officeiiid, o.officename
  from dat_unit sc
  inner join dat_center cen on cen.BRCode = sc.brCode and cen.unitcode = sc.unitcode 
  inner join dat_customer cus on cen.brcode = cus.brcode and cen.centercode = cus.center_code 
  LEFT join mapunit m on m.brcode = sc.brcode and sc.unitcode = m.unitcode 
  LEFT JOIN Offices o on o.officeiiid = m.iiid
  where m.iiid is null
  GROUP BY sc.brcode, sc.unitcode, sc.unit, o.officename, o.officeiiid
 
  --// get unmap center
  select  sc.brcode, sc.centercode, sc.centername, o.officeiiid, o.officename, sc.unitcode-- , count(cus.cid)
  from dat_center sc
  inner join dat_customer cus on sc.brcode = cus.brcode and sc.centercode = cus.center_code 
  LEFT join mapcenter m on m.brcode = sc.brcode and sc.centercode = m.centercode 
  LEFT JOIN Offices o on o.officeiiid = m.iiid
  where m.iiid is null
  GROUP BY sc.brcode, sc.centercode, sc.centername, o.officeiiid, o.officename, sc.unitcode
  
  
  select brcode from dat_unit group by brcode
    select brcode from dat_center group by brcode
    
     select distinct cus.center_code 
     from dat_customer cus
     left join dat_center cen on cen.brcode = cus.brcode and cen.centercode = cen.centercode 
     where cen.centercode  is null
     
     /*
     update mapaccount set newacc = null
     from mapaccount ma
     left join accounts a on ma.newacc = a.acc
     where ma.newacc = mapaccount.newacc
       and a.acc is null
       
     */
     select brcode from dat_customer group by brcode
  /*
    
  update dat_center set unitcode = 524
    from dat_unit sc
  inner join dat_center cen on cen.BRCode = sc.brCode and cen.unitcode = sc.unitcode 
  inner join dat_customer cus on cen.brcode = cus.brcode and cen.centercode = cus.center_code 
  LEFT join mapunit m on m.brcode = sc.brcode and sc.unitcode = m.unitcode 
  LEFT JOIN Offices o on o.officeiiid = m.iiid
  where dat_center.brcode = sc.brcode and dat_center.unitcode = sc.unitcode and sc.unit = 'RESERVED'
  */
  
  
--// get Units from CORE
  select u.OfficeIIID, u.Code, u.OfficeName, m.BrCode
  from offices b 
  inner join mapbranch m on m.iiid  = b.officeiiid 
  inner join offices u on u.PArentIIID = b.officeIIID 
  LEFT join mapunit mu on mu.iiid = u.officeiiid 
  LEFT JOIN dat_unit sc on sc.brcode = mu.brcode and sc.unitcode = mu.unitcode 
  where m.brcode in ('04','05','07') and sc.brcode is null

  --// get center from CORE
  select cen.OfficeIIID, cen.Code, cen.OfficeName centername, m.BrCode, mu.unitcode, u.officename unitname
  from offices b 
  inner join mapbranch m on m.iiid  = b.officeiiid 
  inner join offices u on u.PArentIIID = b.officeIIID 
  inner join offices cen on cen.ParentIIID = u.officeIIID 
  LEFT join mapunit mu on mu.iiid = u.officeiiid 
  LEFT JOIN dat_unit sc on sc.brcode = mu.brcode and sc.unitcode = mu.unitcode 
  where m.brcode in ('04','05','07') and mu.iiid is null
  
  select * from dat_unit where brcode = '05' and unitcode = 535
  
  select * from offices where lower(officename) like 'pasig%'
  
  select * from mapunit
  
  select * from mapcenter
    

  insert into mapunit(iiid, brcode, unitcode)
  select * FROM
  (values 
  (915233,'07',501),
(915236,'07',502),
(915234,'07',503),
(915451,'07',507))
  mapunit(iiid, brcodem, unitcode)
  on conflict do nothing
  
   delete from mapunit where iiid in 
  (select iiid from (values 
  (915233,'07',501),
(915236,'07',502),
(915234,'07',503),
(915451,'07',507))
  mapunit(iiid, brcodem, unitcode))

  
  
  inner join mapbranch m where m.iiid  = b.officeiiid 
  
  
  
----------------------
-- SystemReferences
----------------------  
INSERT INTO SystemReferences (
  refid, reftypeid, reftyperid, reftype, reftypetitle, code, 
  title, shortname, parentid, parent, ownerrid, statusid, status, reftypeparentid, 
  reftypeparent, reftypetitleparent, "xml"
)
SELECT 
  (select max(refid)+1 from SystemReferences), r.reftypeid, r.reftyperid, r.reftype, r.reftypetitle, 0 code, 
  'N/A' title, r.shortname, r.parentid, r.parent, r.ownerrid, r.statusid, r.status, r.reftypeparentid, 
  r.reftypeparent, r.reftypetitleparent, r."xml"  
FROM SystemReferences r
LEFT JOIN SystemReferences p on lower(p.reftype) = 'typeofbusiness' and p.title = 'N/A'
WHERE lower(r.reftype) = 'typeofbusiness' and lower(r.title) = 'retail trading'
  and p.title is null
   
  
  --/ Insert customer mapping
INSERT INTO MapCustomer
SELECT IIID, BrCode, CID 
FROM inai_customermap ic 
WHERE BrCode = 'C1'
ON CONFLICT (BrCode, CID) 
DO UPDATE SET 
  IIID = EXCLUDED.IIID;

----------------------
-- Customer
----------------------
INSERT INTO Customer (
  cid, cname, fname, mname, maidenfname, maidenlname, maidenmname, 
  dobirth, birthplace, sex, civilstatus, title, status, classification, 
  subclassification, doentry, dorecognized, doresigned, center_code, branch_code, unit_code,
  dosri, reffered1, remarks, Business, accountnumber)
SELECT
  CID, lName, FName, Mname, MaidenFName, MaidenLName, MaidenMName, 
  BirthDate, left(BirthPlace,30) BirthPlace, sex.RefID Sex, civil.refid CivilStatus,  title.refID Title, stat.refID Status, 
  COALESCE (min(cls.refID),0)  Classification, min(COALESCE(subcls.refID,-1)) subclassification, 
  EntryDate, RecognizeDate, ResignDate, 
  COALESCE(c.CenterIIID,-1) Center_Code, COALESCE(c.BranchIIID,-1) branch_Code, COALESCE(c.unitIIID,-1) Unit_Code,
  DOSRI, Reffered1, Remarks, min(bus.refID) Business, 
  AddCheckDigit(NewBrCode || RIGHT('00000000' || OldCID::VarChar(8),8))  AccountNumber
FROM
 (SELECT 
    b.NewBrCode, iiid.iiid CID, lName, FName, Mname, MaidenFName, MaidenLName, MaidenMName, 
    BirthDate, BirthPlace, CASE WHEN Sex = 'M' THEN 'Male' ELSE 'Female' END Sex, CivilStatus, 
    Title, CASE Status WHEN 0 THEN 'Active' WHEN 1 THEN 'InActive' WHEN 2 THEN 'Resigned' WHEN 4 THEN 'Balik CARD' ELSE '' END Status, 
    Classification, subclassification, EntryDate, RecognizeDate, ResignDate, Center_Code, 
    CASE WHEN DOSRI THEN 1 ELSE 0 END DOSRI, Reffered1, Remarks, 'N/A' BusinessType,
    b.IIID BranchIIID, cen.UnitIIID, cen.IIID CenterIIID, iiid.CID OldCID
  FROM dat_Customer c
  INNER JOIN MapBranch b on c.BrCode = b.BrCode
  INNER JOIN MapCenter cen on cen.BrCode = c.BrCode and cen.CenterCode = c.center_code 
  -- INNER JOIN INAI_CustomerMap iiid on iiid.BrCode = c.BrCode and iiid.CID = c.CID
  INNER JOIN  MapCustomer iiid  on iiid.BrCode = c.BrCode and iiid.CID = c.CID
  /*
   (SELECT m.IIID, c.BrCode, c.CID 
    FROM MapCustomer m
    INNER JOIN inai_customermap c 
      on m.BrCode = c.BrCode and m.CID = c.CID
    --WHERE m.IIID <> c.IIID
    ) iiid  on iiid.BrCode = c.BrCode and iiid.CID = c.CID
    */
  --WHERE b.BrCode in ('04','05','07')
  WHERE iiid.iiid in
    --where c.brcode = 'L7' and c.cid = 5566431
 ) c
LEFT JOIN SystemReferences civil on lower(civil.Title) = lower(c.CivilStatus) and lower(civil.RefType) = 'civilstatus'
LEFT JOIN SystemReferences sex on lower(sex.Title) = lower(c.Sex) and lower(sex.RefType) = 'gender'
LEFT JOIN SystemReferences title on lower(title.Title) = lower(c.title) and lower(title.RefType) = 'title'
LEFT JOIN SystemReferences stat on lower(stat.Title) = lower(c.status) and lower(stat.RefType) = 'customerstatus'
LEFT JOIN SystemReferences cls on lower(cls.Title) = lower(c.classification) and lower(cls.RefType) = 'classification'
LEFT JOIN SystemReferences subcls on lower(subcls.Title) = lower(c.subclassification) and lower(subcls.RefType) = 'sub-classification'
LEFT JOIN SystemReferences bus on lower(bus.Title) = lower(c.BusinessType) and lower(bus.RefType) = lower('typeofbusiness')

GROUP BY 
  CID, lName, FName, Mname, MaidenFName, MaidenLName, MaidenMName, 
  BirthDate, BirthPlace, sex.RefID, civil.refid,  title.refID, stat.refID, 
  EntryDate, RecognizeDate, ResignDate, c.centerIIID, c.unitIIID, c.branchIIID,
  DOSRI, Reffered1, Remarks, NewBrCode, OldCID
ON CONFLICT (CID) DO 
  UPDATE SET 
    cname = EXCLUDED.cname,
    fname = EXCLUDED.fname,
    mname = EXCLUDED.mname,
    maidenfname = EXCLUDED.maidenfname,
    maidenlname = EXCLUDED.maidenlname,
    maidenmname = EXCLUDED.maidenmname,
    dobirth = EXCLUDED.dobirth,
    birthplace = EXCLUDED.birthplace,
    sex = EXCLUDED.sex,
    civilstatus = EXCLUDED.civilstatus,
    title = EXCLUDED.title,
    status = EXCLUDED.status,
    classification = EXCLUDED.classification,
    subclassification = EXCLUDED.subclassification,
    doentry = EXCLUDED.doentry,
    dorecognized = EXCLUDED.dorecognized,
    doresigned = EXCLUDED.doresigned,
    center_code = EXCLUDED.center_code,
    branch_code = EXCLUDED.branch_code,
    unit_code = EXCLUDED.unit_code,
    dosri = EXCLUDED.dosri,
    reffered1 = EXCLUDED.reffered1,
    remarks = EXCLUDED.remarks,
    business = EXCLUDED.business,
    accountnumber = EXCLUDED.accountnumber
  ;

-- // INSERT Account Mapping FROM LOANS
INSERT INTO MapAccount(BrCode, Acc, Archived)
SELECT BrCode, Acc, abs(Principal-Prin+Interest-IntR) = 0
FROM dat_lnmaster 
WHERE BrCode in ('04','05','07')
ON CONFLICT (BrCode, Acc) 
DO NOTHING;

-- DO UPDATE 
  --  SET Archived = EXCLUDED.Archived;

-- // INSERT Account Mapping FROM Savings
INSERT INTO MapAccount(BrCode, Acc, Archived)
SELECT BrCode, Acc, abs(Balance) = 0 and dateOpen < '2021/01/01'::date
FROM dat_saMaster WHERE BrCode in ('04','05','07')
ON CONFLICT (BrCode, Acc) 
 DO NOTHING;

-- DO UPDATE 
 --   SET Archived = EXCLUDED.Archived;

-- // INSERT Account Mapping FROM Mutual_Fund
INSERT INTO MapAccount(BrCode, Acc, Archived)
SELECT BrCode, cus.CID::VarChar(10), TRUE
FROM dat_mutual_fund cus 
GROUP BY BrCode, cid
ON CONFLICT (BrCode, Acc) 
  DO NOTHING;

--  UPDATE SET Archived = EXCLUDED.Archived;
select * 
from mapaccount ma
left join accounts a on a.acc = ma.newacc
where a.acc is null

select a.*
FROM mapcustomer iiid
inner join dat_samaster ss on ss.brcode = iiid.brcode and ss.cid = iiid.cid
left join accounts a on a.cid = iiid.iiid
where 
iiid.iiid in

-- //  TAG All Current Account to Archive=FALSE UPDATE Account Archived 
UPDATE MapAccount
SET Archived = FALSE 
WHERE Archived AND 
EXISTS 
 (SELECT Acc FROM dat_trnmaster t
  WHERE MapAccount.Acc = t.Acc and MapAccount.BrCode = t.BrCode
   and trnDate > '2020-12-31'::date);

 --- next
UPDATE MapAccount
SET Archived = FALSE 
WHERE Archived AND 
EXISTS 
 (SELECT CID::VarChar(10) 
  FROM dat_mutual_fund t
  WHERE MapAccount.Acc = CID::VarChar(10) and MapAccount.BrCode = t.BrCode
   and trnDate > '2020-12-31'::date);
 
   -- // UPDATE Loan Account new Acc
UPDATE MapAccount
  SET newAcc = NewAcc(a.AcctType::varchar(10), lPad(y.module_code, 2, '0') || lPad(y.code, 2, '0') || '-')
  FROM
    dat_lnMaster a 
  INNER JOIN AcctParms y on y.AcctType = a.AcctType
  WHERE MapAccount.newAcc is Null and a.BrCode = MapAccount.BrCode  and a.Acc = MapAccount.Acc;
  
select * from MapAccount where newacc is null
select * from AcctParms order by accttype

INSERT into acctparms(apptype, accttype, acctdesc, code, module_code, usestatus)
select apptype, 313, 'Please Rename', 13, 40, 'I' 
from AcctParms where accttype = 312 order by accttype

select a.AcctType from dat_lnMaster a
left join  AcctParms y on y.AcctType = a.AcctType
where y.accttype is null
group by a.AcctType 
--select brcode from dat_lnMaster group by brcode
  
  -- // UPDATE Savings Account new Acc
  UPDATE MapAccount
  SET newAcc = NewAcc(60::varchar(10), lPad(y.module_code, 2, '0') || lPad(y.code, 2, '0') || '-')
  FROM
    dat_saMaster a 
  INNER JOIN AcctParms y on y.AcctType = 60
  WHERE MapAccount.newAcc is Null and a.BrCode = MapAccount.BrCode  and a.Acc = MapAccount.Acc;

  -- // UPDATE MBA Account new Acc
   UPDATE MapAccount
  SET newAcc = NewAcc(y.AcctType::varchar(10), lPad(y.module_code, 2, '0') || lPad(y.code, 2, '0') || '-')
  FROM
    mapCustomer a 
  INNER JOIN AcctParms y on y.AcctType = 201
  WHERE MapAccount.newAcc is Null and a.BrCode = MapAccount.BrCode  and a.CID::VarChar(10) = MapAccount.Acc;
  
select * from dat_customer where brcode = '05' and cid = 1981257

select * from mapCustomer where brcode = '05' and cid = 1981257

/*
delete from mapcustomer where iiid is null
delete from mapcustomer where brcode in ('04','05','07')
insert into mapcustomer select * from mapcustomer2

update mapcustomer  set iiid = null
from mapcustomer mc
left join mapcustomer2 mc2 on mc2.iiid = mc.iiid
where mapcustomer.iiid = mc.iiid and mc2 is not null
*/
--// Check Account without new Acc
  SELECT * from mapaccount where newacc is null
  
 -- //Insert Loan Accounts
INSERT INTO Accounts(
  CID, Acc, 
  AlternateAcc, AppType, AcctType, AccDesc, dOpen, doMaturity, Term, WeeksPaid, 
  Status, Principal, Interest, "others", Discounted, NetProceed, Balance, 
  Prin, Intr, Oth, Penalty, Waivedint, DisbBy, ApprovBy, "cycle", Frequency, 
  AnnumDiv, lnGrpCode, Proff, Fundsource, ConIntRate, AmortCond, AmortCondValue, 
  Classification_Code, Classification_Type, Remarks, LumpSum, LoanID, LastTransactionDt
 )
SELECT 
  IIID.IIID CID, 
  ma.NewAcc Acc,
  a.BrCode || a.Acc AlternateAcc, y.AppType, a.AcctType, y.AcctDesc AccDesc, a.DisbDate dOpen, a.doMaturity, a.Gives Term, a.WeeksPaid, 
  a.Status, a.Principal, a.Interest, 0 "others", 0 Discounted, 0 NetProceed, 
  a.Principal + a.Interest - a.Prin - a.IntR - a.WaivedInt Balance, 
  a.Prin, a.Intr, 0 Oth, 0 Penalty, a.WaivedInt, '' DisbBy, '' ApprovBy, a."cycle", a.Frequency, 
  a.AnnumDiv, a.lnGrpCode, a.Proff, 0 Fundsource, a.ConIntRate, 0 AmortCond, 0 AmortCondValue, 
  0 Classification_Code, 0 Classification_Type, '' Remarks, 0 LumpSum, 0 LoanID, NULL LastTransactionDt
FROM dat_lnMaster a
INNER JOIN MapAccount ma on ma.BrCode = a.BrCode and ma.Acc = a.Acc 
INNER JOIN AcctParms y on y.AcctType = a.AcctType
INNER JOIN mapcustomer iiid on iiid.BrCode = a.BrCode and iiid.CID = a.CID
WHERE a.BrCode in ('04','05','07')
and iiid.iiid in (9553765,9553758,9553757,9553762,9553755,9553754,9553753,9553752,9553767,9553766,9553761,9553760,9553759,9553756,9375300,9375299,9375302,9375110,9375109,9375307,9375306,9375305,9375304,9375303,9375308,9375309,9375301,9375311,9375310,9375287,9375288,9375312,9375293,9375296,9375314,9375313,9553706,9553701,9553708,9553707,9553705,9553704,9553702,9553709,9553710,9553703,9553711,9553723,9553724,9553742,9553743,9553733,9553727,9553725,9553713,9553714,9553715,9553744,9553745,9553746,9553726,9553717,9553728,9553729,9553730,9553731,9553732,9553734,9553716,9553718,9553763,9553764,9553735,9553736,9553737,9553738,9553739,9553740,9553741,9553719,9553720,9553721,9553722,9553712,9553747,9553748,9553749,9553750,9553751)
ON CONFLICT(AlternateAcc) DO NOTHING;

--// Insert accounts from Savings
INSERT INTO Accounts(
  CID, Acc, AlternateAcc, AppType, AcctType, AccDesc, dOpen, doMaturity, Term, WeeksPaid, 
  Status, Principal, Interest, "others", Discounted, NetProceed, Balance, 
  Prin, Intr, Oth, Penalty, Waivedint, DisbBy, ApprovBy, "cycle", Frequency, 
  AnnumDiv, lnGrpCode, Proff, Fundsource, ConIntRate, AmortCond, AmortCondValue, 
  Classification_Code, Classification_Type, Remarks, LumpSum, LoanID, LastTransactionDt
 )
SELECT 
  iiid.iiid CID, 
  ma.NewAcc Acc,
  a.BrCode || a.Acc AlternateAcc,  0 AppType, 60 AcctType, 'Pledge Account' AccDesc, dateopen dOpen, dateopen::date doMaturity, 0 Term, 0 WeeksPaid, 
  CASE WHEN a.Balance=0 THEN 99 ELSE 10 END Status, cus.Pledge_Amount Principal, 0 Interest, 0 "others", 0 Discounted, 0 NetProceed, 
  a.Balance, 
  cus.accpledge Prin, 0 Intr, 0 Oth, 0 Penalty, 0 WaivedInt, '' DisbBy, '' ApprovBy, 0 "cycle", 0 Frequency, 
  0 AnnumDiv, 0 lnGrpCode, 0 Proff, 0 Fundsource, 0 ConIntRate, 0 AmortCond, 0 AmortCondValue, 
  0 Classification_Code, 0 Classification_Type, '' Remarks, 0 LumpSum, 0 LoanID, lasttrndate LastTransactionDt
FROM dat_saMaster a
INNER JOIN MapAccount ma on ma.BrCode = a.BrCode and ma.Acc = a.Acc 
INNER JOIN MapCustomer iiid on iiid.BrCode = a.BrCode and iiid.CID = a.CID
INNER JOIN dat_Customer cus on cus.BrCode = iiid.BrCode and cus.CID = iiid.CID
where a.BrCode in ('04','05','07')
and iiid.iiid in
ON CONFLICT(AlternateAcc) DO UPDATE SET
  Acc = EXCLUDED.Acc,
  Intr = EXCLUDED.Intr,
  CID =  EXCLUDED.CID,
  Principal = EXCLUDED.Principal,
  Prin = EXCLUDED.Prin;

-- INSERT Accounts for MBA
INSERT INTO Accounts(
  CID, Acc, AlternateAcc, AppType, AcctType, AccDesc, dOpen, doMaturity, Term, WeeksPaid, 
  Status, Principal, Interest, "others", Discounted, NetProceed, Balance, 
  Prin, Intr, Oth, Penalty, Waivedint, DisbBy, ApprovBy, "cycle", Frequency, 
  AnnumDiv, lnGrpCode, Proff, Fundsource, ConIntRate, AmortCond, AmortCondValue, 
  Classification_Code, Classification_Type, Remarks, LumpSum, LoanID, LastTransactionDt
 )

 SELECT 
  iiid.iiid CID, 
  ma.NewAcc Acc,
  cus.BrCode  || '-' || cus.CID::VarChar(10) AlternateAcc, y.AppType,  y.AcctType, y.AcctDesc AccDesc, cus.RecognizeDate dOpen, 
  cus.RecognizeDate doMaturity, 0 Term, 0 WeeksPaid, 
  10 Status, cus.mutual_amount Principal, 0 Interest, 0 "others", 0 Discounted, 0 NetProceed, 
  0 Balance, 
  cus.accmutual Prin, 0 Intr, 0 Oth, 0 Penalty, 0 WaivedInt, '' DisbBy, '' ApprovBy, 0 "cycle", 0 Frequency, 
  0 AnnumDiv, 0 lnGrpCode, 0 Proff, 0 Fundsource, 0 ConIntRate, 0 AmortCond, 0 AmortCondValue, 
  0 Classification_Code, 0 Classification_Type, '' Remarks, 0 LumpSum, 0 LoanID, cus.resignDate LastTransactionDt  
FROM dat_Customer cus 
INNER JOIN MapAccount ma on ma.BrCode = cus.BrCode and ma.Acc = cus.CID::VarChar(10) 
INNER JOIN MapCustomer iiid on iiid.BrCode = cus.BrCode and iiid.CID = cus.CID
INNER JOIN AcctParms y on y.AcctType = 201
WHERE  cus.BrCode in ('04','05','07')
and iiid.iiid in
--WHERE cus.mutual_amount > 0 and cus.Status in (0,1,4)
 -- and cus.CID in (SELECT cid from dat_samaster sa where sa.balance > 0)
   --and cus.cid = 1536891
ON CONFLICT(AlternateAcc) DO UPDATE SET
  --Acc = EXCLUDED.Acc,
  Intr = EXCLUDED.Intr,
  CID  = EXCLUDED.CID,
  Principal = EXCLUDED.Principal,
  Prin = EXCLUDED.Prin;

----------------------
-- lnChrgData for previous balance
----------------------  
INSERT INTO lnChrgData(
  Acc, Chd, ChrgCode, ChrDesc, ChrAmnt, ChrBal, refacc) 
SELECT m.Acc Acc, Chd, ChrgCode, ChrDesc, Sum(ChrAmnt) ChrAmnt, Sum(ChrBal) ChrBal, m2.Acc refacc
FROM
  (SELECT
    BrCode, Acc, 0 Chd, ChrgCode, 
    'Previous Loan' ChrDesc, ChrAmnt, ChrAmnt ChrBal, refacc
  FROM dat_lnChrgData
  WHERE chrgcode = 18 and BrCode in ('04','05','07')) a
INNER JOIN MapAccount m on m.BrCode = a.BrCode and m.Acc = a.Acc
INNER JOIN MapAccount m2 on m2.BrCode = a.BrCode and m2.Acc = a.refAcc
--LEFT JOIN Accounts m on m.AlternateAcc = a.BrCode || a.Acc
--LEFT JOIN Accounts m2 on m2.AlternateAcc = a.BrCode || a.refAcc
GROUP BY m.Acc, Chd, ChrgCode, ChrDesc, m2.Acc 
ON CONFLICT DO NOTHING;

----------------------
-- lnChrgData not included in previous balance
----------------------  
INSERT INTO lnChrgData(
  Acc, Chd, ChrgCode, ChrDesc, ChrAmnt, ChrBal, refacc)
SELECT m.Acc Acc, Chd, ChrgCode, ChrDesc, Sum(ChrAmnt) ChrAmnt, Sum(ChrBal) ChrBal, NULL refacc
FROM
  (SELECT
    BrCode, Acc, 0 Chd, ChrgCode, 
    CASE ChrgCode 
    WHEN 11 THEN 'Retention for Pledge Savings'
    WHEN 14 THEN 'Service Fee'
    WHEN 18 THEN 'Previous Loan'
    WHEN 16 THEN 'LRF' ELSE '' END ChrDesc, ChrAmnt, ChrAmnt ChrBal, refacc
  FROM dat_lnChrgData
  WHERE chrgcode <> 18 and brCode in ('04','05','07')) a
INNER JOIN MapAccount m on m.BrCode = a.BrCode and m.Acc = a.Acc  
GROUP BY m.Acc, Chd, ChrgCode, ChrDesc
ON CONFLICT DO NOTHING;

--// Insert writeoff
INSERT INTO Writeoff(
  Acc, disbdate, principal, interest, balprin, balint, trndate, accttype, print, postedby, verifiedby, termid) 
SELECT m.Acc, a.disbdate, a.Principal, a.Interest, a.Balprin, a.Balint, a.trndate, a.accttype, a.print, 
   a.postedby, a.verifiedby, a.termid
FROM dat_Writeoff a
INNER JOIN MapAccount m on m.BrCode = a.BrCode and m.Acc = a.Acc
--LEFT JOIN Accounts m on m.AlternateAcc = a.BrCode || a.Acc
WHERE NOT EXISTS
(SELECT w.Acc FROM Writeoff w WHERE w.Acc = m.Acc)
ON CONFLICT DO NOTHING;

INSERT INTO ArchivedLoanInst(dNum, Acc, DueDate, Prin, IntR, UpInt)
  SELECT dNum, m.NewAcc, DueDate, Prin, IntR, UpInt
  FROM dat_loaninst i
  INNER JOIN MapAccount m on i.BrCode = m.BrCode and i.Acc = m.Acc
  WHERE m.Archived = True and i.BrCode in ('04','05','07')
  ON CONFLICT (Acc, dNum) DO NOTHING;   
 
-- select * from mapaccount m where newacc is null

INSERT INTO LoanInst( dnum, acc, duedate, instflag, prin, intr, oth, penalty, endbal, endint, endoth, instpd, penpd, carval, upint, servfee, pledgeamort)
  SELECT dnum, m.NewAcc, duedate, 0 instflag, i.prin,i. intr, 0 oth, 0 penalty, 0 endbal, 0 endint, 0 endoth, 0 instpd, 0 penpd, 0 carval, upint, 0 servfee, 0 pledgeamort 
  FROM dat_loaninst i
  INNER JOIN MapAccount m on i.BrCode = m.BrCode and i.Acc = m.Acc
  INNER JOIN Accounts a on a.acc = m.newacc
  WHERE NOT m.Archived and i.BrCode in ('04','05','07') 
  and a.cid in
  ON CONFLICT (Acc, dNum) DO NOTHING; 

  SELECT dnum, m.NewAcc, duedate, 0 instflag, prin, intr, 0 oth, 0 penalty, 0 endbal, 0 endint, 0 endoth, 0 instpd, 0 penpd, 0 carval, upint, 0 servfee, 0 pledgeamort 
  FROM dat_loaninst i
  INNER JOIN MapAccount m on i.BrCode = m.BrCode and i.Acc = m.Acc
  WHERE NOT m.Archived and i.BrCode in ('04') and i.acc = '0204-4001-0042515'
    

-- // Update LoanInst Balances
UPDATE LoanInst SET 
  EndBal = a.EndBal,
  InstPD = a.InstPD,
  CarVal = a.CarVal,
  endint = a.endint,
  instflag = CASE WHEN a.InstPD = a.Prin + a.IntR THEN 9 ELSE 0 END 
FROM
  (SELECT
    dnum, i.Acc, duedate, instflag,
    prin,intr, endbal,endint, 
  CASE WHEN EndBal+EndInt+Prin+Intr-Bal > Prin+Intr THEN Prin+Intr
       WHEN EndBal+EndInt+Prin+Intr-Bal < 0 THEN 0 
       ELSE EndBal+EndInt+Prin+Intr-Bal END instpd, 
  EndBal-(Interest-EndInt)+SupInt carval
  FROM 
    (SELECT 
      l.Acc, i.dNum, i.duedate, i.instflag, i.prin, i.intr,
      l.Principal-Sum(s.prin) endbal,l.Interest-Sum(s.Intr) endint, 
      Sum(s.upint) supint, l.Interest,
      l.Principal + l.Interest - l.Prin - l.Intr Bal
    FROM LoanInst i
    INNER JOIN Accounts l on i.Acc = l.Acc
    INNER JOIN LoanInst s on s.Acc = l.Acc and s.dNum <= i.dNum
    INNER JOIN MapAccount a on a.NewAcc = i.Acc
  INNER JOIN Accounts acc on acc.acc = a.newacc
  WHERE a.Archived = FALSE --and a.BrCode in ('04','05','07') 
  and acc.cid in

  --WHERE a.BrCode in ('04','05','07')
    GROUP BY 
      l.Acc, i.dnum, i.acc, i.duedate, i.instflag, i.prin, i.intr, l.Prin, l.Intr,
      l.Principal, l.Interest, i.upint
     ) i 
   ) a  
WHERE a.Acc = LoanInst.Acc and a.dNum = LoanInst.dNum ;

select sl.*
from accounts a 
inner join mapaccount ma on ma.newacc = a.acc
inner join dat_loaninst sl on sl.brcode = ma.brcode and sl.acc  = ma.acc
left join loaninst h on a.acc = h.acc 
where apptype = 3 and h.acc is null and archived = false
and sl.BrCode in ('04') and sl.acc = '0204-4001-0042515'

