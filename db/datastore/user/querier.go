// Code generated by sqlc. DO NOT EDIT.

package db

import (
	"context"
	"github.com/google/uuid"

	"simplebank/model"
)

type QuerierUser interface {
	CreateUser(ctx context.Context, arg UserRequest) (model.Users, error)
	GetUser(ctx context.Context, id int64) (UserInfo, error)
	GetUserbyUuId(ctx context.Context, uuid uuid.UUID) (UserInfo, error)
	GetUserbyName(ctx context.Context, name string) (UserInfo, error)
	ListUser(ctx context.Context, arg ListUserParams) ([]UserInfo, error)
	UpdateUser(ctx context.Context, arg UserRequest) (model.Users, error)
	DeleteUser(ctx context.Context, id int64) error

	CreateUserProduct(ctx context.Context, arg UserProductRequest) (model.UserProduct, error)
	GetUserProduct(ctx context.Context, uuid uuid.UUID) (UserProductInfo, error)
	GetUserProductbyUuId(ctx context.Context, uuid uuid.UUID) (UserProductInfo, error)
	ListUserProduct(ctx context.Context, arg ListUserProductParams) ([]UserProductInfo, error)
	UpdateUserProduct(ctx context.Context, arg UserProductRequest) (model.UserProduct, error)
	DeleteUserProduct(ctx context.Context, uuid uuid.UUID) error

	CreateUserAccountType(ctx context.Context, arg UserAccountTypeRequest) (model.UserAccountType, error)
	GetUserAccountType(ctx context.Context, uuid uuid.UUID) (UserAccountTypeInfo, error)
	GetUserAccountTypebyUuId(ctx context.Context, uuid uuid.UUID) (UserAccountTypeInfo, error)
	ListUserAccountType(ctx context.Context, arg ListUserAccountTypeParams) ([]UserAccountTypeInfo, error)
	UpdateUserAccountType(ctx context.Context, arg UserAccountTypeRequest) (model.UserAccountType, error)
	DeleteUserAccountType(ctx context.Context, uuid uuid.UUID) error

	CreateUserObject(ctx context.Context, arg UserObjectRequest) (model.UserObject, error)
	GetUserObject(ctx context.Context, uuid uuid.UUID) (UserObjectInfo, error)
	GetUserObjectbyUuId(ctx context.Context, uuid uuid.UUID) (UserObjectInfo, error)
	ListUserObject(ctx context.Context, arg ListUserObjectParams) ([]UserObjectInfo, error)
	UpdateUserObject(ctx context.Context, arg UserObjectRequest) (model.UserObject, error)
	DeleteUserObject(ctx context.Context, uuid uuid.UUID) error

	CreateUserOffice(ctx context.Context, arg UserOfficeRequest) (model.UserOffice, error)
	GetUserOffice(ctx context.Context, uuid uuid.UUID) (UserOfficeInfo, error)
	GetUserOfficebyUuId(ctx context.Context, uuid uuid.UUID) (UserOfficeInfo, error)
	ListUserOffice(ctx context.Context, arg ListUserOfficeParams) ([]UserOfficeInfo, error)
	UpdateUserOffice(ctx context.Context, arg UserOfficeRequest) (model.UserOffice, error)
	DeleteUserOffice(ctx context.Context, uuid uuid.UUID) error

	CreateSocialMediaCredential(ctx context.Context, arg SocialMediaCredentialRequest) (model.SocialMediaCredential, error)
	GetSocialMediaCredential(ctx context.Context, uuid uuid.UUID) (SocialMediaCredentialInfo, error)
	GetSocialMediaCredentialbyUuId(ctx context.Context, uuid uuid.UUID) (SocialMediaCredentialInfo, error)
	ListSocialMediaCredential(ctx context.Context, arg ListSocialMediaCredentialParams) ([]SocialMediaCredentialInfo, error)
	UpdateSocialMediaCredential(ctx context.Context, arg SocialMediaCredentialRequest) (model.SocialMediaCredential, error)
	DeleteSocialMediaCredential(ctx context.Context, uuid uuid.UUID) error

	CreateUserSpecsDate(ctx context.Context, arg UserSpecsDateRequest) (model.UserSpecsDate, error)
	GetUserSpecsDate(ctx context.Context, iiid int64, specsId int64) (UserSpecsDateInfo, error)
	GetUserSpecsDatebyUuid(ctx context.Context, uuid uuid.UUID) (UserSpecsDateInfo, error)
	ListUserSpecsDate(ctx context.Context, arg ListUserSpecsDateParams) ([]UserSpecsDateInfo, error)
	UpdateUserSpecsDate(ctx context.Context, arg UserSpecsDateRequest) (model.UserSpecsDate, error)
	DeleteUserSpecsDate(ctx context.Context, uuid uuid.UUID) error

	CreateUserSpecsString(ctx context.Context, arg UserSpecsStringRequest) (model.UserSpecsString, error)
	GetUserSpecsString(ctx context.Context, iiid int64, specsId int64) (UserSpecsStringInfo, error)
	GetUserSpecsStringbyUuid(ctx context.Context, uuid uuid.UUID) (UserSpecsStringInfo, error)
	ListUserSpecsString(ctx context.Context, arg ListUserSpecsStringParams) ([]UserSpecsStringInfo, error)
	UpdateUserSpecsString(ctx context.Context, arg UserSpecsStringRequest) (model.UserSpecsString, error)
	DeleteUserSpecsString(ctx context.Context, uuid uuid.UUID) error

	CreateUserSpecsNumber(ctx context.Context, arg UserSpecsNumberRequest) (model.UserSpecsNumber, error)
	GetUserSpecsNumber(ctx context.Context, iiid int64, specsId int64) (UserSpecsNumberInfo, error)
	GetUserSpecsNumberbyUuid(ctx context.Context, uuid uuid.UUID) (UserSpecsNumberInfo, error)
	ListUserSpecsNumber(ctx context.Context, arg ListUserSpecsNumberParams) ([]UserSpecsNumberInfo, error)
	UpdateUserSpecsNumber(ctx context.Context, arg UserSpecsNumberRequest) (model.UserSpecsNumber, error)
	DeleteUserSpecsNumber(ctx context.Context, uuid uuid.UUID) error

	CreateUserSpecsRef(ctx context.Context, arg UserSpecsRefRequest) (model.UserSpecsRef, error)
	GetUserSpecsRef(ctx context.Context, iiid int64, specsId int64) (UserSpecsRefInfo, error)
	GetUserSpecsRefbyUuid(ctx context.Context, uuid uuid.UUID) (UserSpecsRefInfo, error)
	ListUserSpecsRef(ctx context.Context, arg ListUserSpecsRefParams) ([]UserSpecsRefInfo, error)
	UpdateUserSpecsRef(ctx context.Context, arg UserSpecsRefRequest) (model.UserSpecsRef, error)
	DeleteUserSpecsRef(ctx context.Context, uuid uuid.UUID) error
}

var _ QuerierUser = (*QueriesUser)(nil)
