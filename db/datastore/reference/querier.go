// Code generated by sqlc. DO NOT EDIT.

package db

import (
	"context"
	"database/sql"
	"github.com/google/uuid"

	"simplebank/model"
	"time"
)

type QuerierReference interface {
	CreateReferenceType(ctx context.Context, arg ReferenceTypeRequest) (model.ReferenceType, error)
	GetReferenceTypeInfo(ctx context.Context, id int64) (ReferenceTypeInfo, error)
	GetReferenceTypeInfobyCode(ctx context.Context, code sql.NullString) (ReferenceTypeInfo, error)
	GetReferenceTypeInfobyTitle(ctx context.Context, title string) (ReferenceTypeInfo, error)
	GetReferenceTypeInfobyUuId(ctx context.Context, uuid uuid.UUID) (ReferenceTypeInfo, error)
	ListReferenceType(ctx context.Context, arg ListReferenceTypeParams) ([]ReferenceTypeInfo, error)
	UpdateReferenceType(ctx context.Context, arg ReferenceTypeRequest) (model.ReferenceType, error)
	DeleteReferenceType(ctx context.Context, id int64) error

	CreateReference(ctx context.Context, arg ReferenceRequest) (model.Reference, error)
	GetReferenceInfo(ctx context.Context, id int64) (ReferenceInfo, error)
	GetReferenceInfobyCode(ctx context.Context, code sql.NullString) (ReferenceInfo, error)
	GetReferenceInfobyTitle(ctx context.Context, refType string, parentId int64, title string) (ReferenceInfo, error)
	GetReferenceInfobyUuId(ctx context.Context, uuid uuid.UUID) (ReferenceInfo, error)
	ListReference(ctx context.Context, arg ListReferenceParams) ([]ReferenceInfo, error)
	UpdateReference(ctx context.Context, arg ReferenceRequest) (model.Reference, error)
	DeleteReference(ctx context.Context, id int64) error
	GetReferenceFilter(ctx context.Context, arg FilterParams) ([]ReferenceInfo, error) 
	ReferenceSearch(ctx context.Context, arg ReferenceSearchParams) ([]ReferenceInfo, error)

	CreateGeography(ctx context.Context, arg GeographyRequest) (model.Geography, error)
	GetGeography(ctx context.Context, id int64) (GeographyInfo, error)
	GetGeographybyLocation(ctx context.Context, typeId int64, parentId int64, location string) (GeographyInfo, error)
	GetGeographybyUuId(ctx context.Context, uuid uuid.UUID) (GeographyInfo, error)
	SearchGeography(ctx context.Context, arg SearchGeographyParams) ([]GeographyInfoSearch, error)
	ListGeography(ctx context.Context, arg ListGeographyParams) ([]GeographyInfo, error)
	UpdateGeography(ctx context.Context, arg GeographyRequest) (model.Geography, error)
	DeleteGeography(ctx context.Context, id int64) error

	CreateFxrate(ctx context.Context, arg FxrateRequest) (model.Fxrate, error)
	GetFxrate(ctx context.Context, baseCurrency string, currency string, cutDate time.Time) (FxrateInfo, error)
	GetFxratebyUuId(ctx context.Context, uuid uuid.UUID) (FxrateInfo, error)
	ListFxrate(ctx context.Context, arg ListFxrateParams) ([]FxrateInfo, error)
	UpdateFxrate(ctx context.Context, arg FxrateRequest) (model.Fxrate, error)
	DeleteFxrate(ctx context.Context, uuid uuid.UUID) error

	CreateUnitConversion(ctx context.Context, arg UnitConversionRequest) (model.UnitConversion, error)
	GetUnitConversion(ctx context.Context, id int64) (UnitConversionInfo, error)
	GetUnitConversionbyUuId(ctx context.Context, uuid uuid.UUID) (UnitConversionInfo, error)
	ListUnitConversion(ctx context.Context, arg ListUnitConversionParams) ([]UnitConversionInfo, error)
	UpdateUnitConversion(ctx context.Context, arg UnitConversionRequest) (model.UnitConversion, error)
	DeleteUnitConversion(ctx context.Context, id int64) error

	CreateCoaParent(ctx context.Context, arg CoaParentRequest) (model.CoaParent, error)
	GetCoaParent(ctx context.Context, id int64) (CoaParentInfo, error)
	GetCoaParentbyUuId(ctx context.Context, uuid uuid.UUID) (CoaParentInfo, error)
	ListCoaParent(ctx context.Context, arg ListCoaParentParams) ([]CoaParentInfo, error)
	UpdateCoaParent(ctx context.Context, arg CoaParentRequest) (model.CoaParent, error)
	DeleteCoaParent(ctx context.Context, id int64) error

	CreateChartofAccount(ctx context.Context, arg ChartofAccountRequest) (model.ChartofAccount, error)
	GetChartofAccount(ctx context.Context, id int64) (ChartofAccountInfo, error)
	GetChartofAccountbyUuId(ctx context.Context, uuid uuid.UUID) (ChartofAccountInfo, error)
	ListChartofAccount(ctx context.Context, arg ListChartofAccountParams) ([]ChartofAccountInfo, error)
	UpdateChartofAccount(ctx context.Context, arg ChartofAccountRequest) (model.ChartofAccount, error)
	DeleteChartofAccount(ctx context.Context, id int64) error

	CreateSystemConfig(ctx context.Context, arg SystemConfigRequest) (model.SystemConfig, error)
	GetSystemConfig(ctx context.Context, uuid uuid.UUID) (SystemConfigInfo, error)
	GetSystemConfigbyUuId(ctx context.Context, uuid uuid.UUID) (SystemConfigInfo, error)
	ListSystemConfig(ctx context.Context, arg ListSystemConfigParams) ([]SystemConfigInfo, error)
	UpdateSystemConfig(ctx context.Context, arg SystemConfigRequest) (model.SystemConfig, error)
	DeleteSystemConfig(ctx context.Context, uuid uuid.UUID) error
}

var _ QuerierReference = (*QueriesReference)(nil)
