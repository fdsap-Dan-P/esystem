// Code generated by sqlc. DO NOT EDIT.

package db

import (
	"context"
	"github.com/google/uuid"

	"simplebank/model"
)

type QuerierCustomer interface {
	CreateCustomerGroup(ctx context.Context, arg CustomerGroupRequest) (model.CustomerGroup, error)
	GetCustomerGroup(ctx context.Context, id int64) (CustomerGroupInfo, error)
	GetCustomerGroupbyUuId(ctx context.Context, uuid uuid.UUID) (CustomerGroupInfo, error)
	ListCustomerGroup(ctx context.Context, arg ListCustomerGroupParams) ([]CustomerGroupInfo, error)
	UpdateCustomerGroup(ctx context.Context, arg CustomerGroupRequest) (model.CustomerGroup, error)
	DeleteCustomerGroup(ctx context.Context, id int64) error

	CreateCustomerBeneficiary(ctx context.Context, arg CustomerBeneficiaryRequest) (model.CustomerBeneficiary, error)
	GetCustomerBeneficiary(ctx context.Context, uuid uuid.UUID) (CustomerBeneficiaryInfo, error)
	GetCustomerBeneficiarybyUuId(ctx context.Context, uuid uuid.UUID) (CustomerBeneficiaryInfo, error)
	ListCustomerBeneficiary(ctx context.Context, arg ListCustomerBeneficiaryParams) ([]CustomerBeneficiaryInfo, error)
	UpdateCustomerBeneficiary(ctx context.Context, arg CustomerBeneficiaryRequest) (model.CustomerBeneficiary, error)
	DeleteCustomerBeneficiary(ctx context.Context, uuid uuid.UUID) error

	CreateCustomer(ctx context.Context, arg CustomerRequest) (model.Customer, error)
	GetCustomer(ctx context.Context, id int64) (CustomerInfo, error)
	GetCustomerbyUuId(ctx context.Context, uuid uuid.UUID) (CustomerInfo, error)
	GetCustomerbyCid(ctx context.Context, centralId int64, Cid int64) (CustomerInfo, error)
	GetCustomerbyAltId(ctx context.Context, altId string) (CustomerInfo, error)
	ListCustomer(ctx context.Context, arg ListCustomerParams) ([]CustomerInfo, error)
	UpdateCustomer(ctx context.Context, arg CustomerRequest) (model.Customer, error)
	DeleteCustomer(ctx context.Context, id int64) error

	CreateCustomerSpecsDate(ctx context.Context, arg CustomerSpecsDateRequest) (model.CustomerSpecsDate, error)
	GetCustomerSpecsDate(ctx context.Context, iiid int64, specsId int64) (CustomerSpecsDateInfo, error)
	GetCustomerSpecsDatebyUuid(ctx context.Context, uuid uuid.UUID) (CustomerSpecsDateInfo, error)
	ListCustomerSpecsDate(ctx context.Context, arg ListCustomerSpecsDateParams) ([]CustomerSpecsDateInfo, error)
	UpdateCustomerSpecsDate(ctx context.Context, arg CustomerSpecsDateRequest) (model.CustomerSpecsDate, error)
	DeleteCustomerSpecsDate(ctx context.Context, uuid uuid.UUID) error

	CreateCustomerSpecsString(ctx context.Context, arg CustomerSpecsStringRequest) (model.CustomerSpecsString, error)
	GetCustomerSpecsString(ctx context.Context, iiid int64, specsId int64) (CustomerSpecsStringInfo, error)
	GetCustomerSpecsStringbyUuid(ctx context.Context, uuid uuid.UUID) (CustomerSpecsStringInfo, error)
	ListCustomerSpecsString(ctx context.Context, arg ListCustomerSpecsStringParams) ([]CustomerSpecsStringInfo, error)
	UpdateCustomerSpecsString(ctx context.Context, arg CustomerSpecsStringRequest) (model.CustomerSpecsString, error)
	DeleteCustomerSpecsString(ctx context.Context, uuid uuid.UUID) error

	CreateCustomerSpecsNumber(ctx context.Context, arg CustomerSpecsNumberRequest) (model.CustomerSpecsNumber, error)
	GetCustomerSpecsNumber(ctx context.Context, iiid int64, specsId int64) (CustomerSpecsNumberInfo, error)
	GetCustomerSpecsNumberbyUuid(ctx context.Context, uuid uuid.UUID) (CustomerSpecsNumberInfo, error)
	ListCustomerSpecsNumber(ctx context.Context, arg ListCustomerSpecsNumberParams) ([]CustomerSpecsNumberInfo, error)
	UpdateCustomerSpecsNumber(ctx context.Context, arg CustomerSpecsNumberRequest) (model.CustomerSpecsNumber, error)
	DeleteCustomerSpecsNumber(ctx context.Context, uuid uuid.UUID) error

	CreateCustomerSpecsRef(ctx context.Context, arg CustomerSpecsRefRequest) (model.CustomerSpecsRef, error)
	GetCustomerSpecsRef(ctx context.Context, iiid int64, specsId int64) (CustomerSpecsRefInfo, error)
	GetCustomerSpecsRefbyUuid(ctx context.Context, uuid uuid.UUID) (CustomerSpecsRefInfo, error)
	ListCustomerSpecsRef(ctx context.Context, arg ListCustomerSpecsRefParams) ([]CustomerSpecsRefInfo, error)
	UpdateCustomerSpecsRef(ctx context.Context, arg CustomerSpecsRefRequest) (model.CustomerSpecsRef, error)
	DeleteCustomerSpecsRef(ctx context.Context, uuid uuid.UUID) error
}

var _ QuerierCustomer = (*QueriesCustomer)(nil)
